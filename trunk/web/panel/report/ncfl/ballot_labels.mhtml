<%args>
	$tourn
	$session
	$group_id => undef
	$timeslot_id => undef
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $timeslot = Tab::Timeslot->retrieve($timeslot_id) if $timeslot_id;

	my $group = Tab::JudgeGroup->retrieve($group_id) if $group_id;
	my @groups = $tourn->groups unless $group;
	push (@groups, $group) if $group;

    #Set up the filename and the needed trace files
	my $name = $group->name;
	$name =~ s/[\W_]//g;

	my $filename = "BallotPacketLabels-".$name."-".$session->id;
	my $filepath = $Tab::file_root."/tmp/";
	my $garbage = `rm -f $filepath"."$filename.*`;
	open (TEXOUT, ">$filepath"."$filename.tex");

    print TEXOUT <<'EOF';
		\documentclass[10pt]{report}
		\usepackage{helvet}
		\usepackage{colortbl}
		\usepackage{nopageno}
		\renewcommand{\familydefault}{\sfdefault}
		\renewcommand{\arraystretch}{1.4}

		\setlength{\oddsidemargin}{-.6in}     
		\setlength{\textwidth}{6.0in}        

		\setlength{\textheight}{10in}       
		\setlength{\topmargin}{-0.5in}      
		\setlength{\headsep}{0in}         

		\setlength{\parskip}{1.4ex}
		\setlength{\parindent}{0mm}

		\begin{document}
EOF

	my $switch;

	foreach my $group (@groups) { 

		if ($timeslot) { 

			foreach my $panel ($m->comp("/funclib/group_panels.mas", timeslot => $timeslot, group => $group)) { 

				foreach my $judge ($m->comp("/funclib/panel_judges.mas", panel => $panel)) {

					my $start = $panel->round->start_time;
					$start = $panel->round->timeslot->start unless $start;
					$start->set_time_zone($tz);

					print TEXOUT "\\begin{tabular}{p{1.5in}p{1.85in}}\n";
					print TEXOUT "\\hline\n";
					print TEXOUT "\\tiny ".&Tab::texify("Round\#")." - Event - Section & \\footnotesize Start Time \\\\ \n";

					print TEXOUT "\\large ".Tab::texify($panel->round->label)." ".Tab::texify($panel->round->event->name)." ".$panel->letter;
					print TEXOUT " & ".Tab::texify(Tab::nicetime($start))." \\\\ \n";

					print TEXOUT "\\multicolumn{2}{l}{\\small Speakers in order: ";

					foreach my $entry ($m->comp("/funclib/panel_entries.mas", panel => $panel)) { 
						print TEXOUT $entry->code." ";
					}

					print TEXOUT " } \\\\ \n";

					print TEXOUT " & \\tiny Competition Room \\\\ \n";
					print TEXOUT "\\LARGE \\bf ". $judge->school->region->code ." ".$judge->code. " & ";
					print TEXOUT "\\multicolumn{1}{l}{\\Large ".&Tab::texify($panel->room->name)." }\\\\ \n";
					print TEXOUT "\\normalsize ". &Tab::texify(substr($judge->first." ".$judge->last, 0, 20)). " & ";
					print TEXOUT "\\multicolumn{1}{l}{\\tiny Please drop completed ballots off to: }\\\\ \n";
					print TEXOUT " & \\multicolumn{1}{l}{\\normalsize ".Tab::texify($panel->round->site->dropoff)." }\\\\ \n";
					print TEXOUT "\\end{tabular}\n";
				
					print TEXOUT "\\hspace{.25in}\n" unless ($switch % 2);
					print TEXOUT "\\vspace{.30in}\n" if ($switch % 2);
					print TEXOUT "\\newline\n" if ($switch++ % 2);
				
				}

			}

		} else { 

			foreach my $judge ($group->judges) { 

				foreach my $panel ($m->comp("/funclib/judge_panels.mas", judge => $judge, timeslot => $timeslot)) { 

					my $start = $panel->round->start_time;
					$start = $panel->round->timeslot->start unless $start;
					$start->set_time_zone($tz);

					print TEXOUT "\\begin{tabular}{p{1.5in}p{1.85in}}\n";
					print TEXOUT "\\hline\n";
					print TEXOUT "\\tiny ".&Tab::texify("Round\#")." - Event - Section & \\footnotesize Start Time \\\\ \n";

					print TEXOUT "\\large ".Tab::texify($panel->round->label)." ".Tab::texify($panel->round->event->name)." ".$panel->letter;
					print TEXOUT " & ".Tab::texify(Tab::nicetime($start))." \\\\ \n";

					print TEXOUT "\\multicolumn{2}{l}{\\small Speakers in order: ";

					foreach my $entry ($m->comp("/funclib/panel_entries.mas", panel => $panel)) { 
						print TEXOUT $entry->code." ";
					}

					print TEXOUT " } \\\\ \n";

					print TEXOUT " & \\tiny Competition Room \\\\ \n";
					print TEXOUT "\\LARGE \\bf ". $judge->school->region->code ." ".$judge->code. " & ";
					print TEXOUT "\\multicolumn{1}{l}{\\Large ".&Tab::texify($panel->room->name)." }\\\\ \n";
					print TEXOUT "\\normalsize ". &Tab::texify(substr($judge->first." ".$judge->last, 0, 20)). " & ";
					print TEXOUT "\\multicolumn{1}{l}{\\tiny Please drop completed ballots off to: }\\\\ \n";
					print TEXOUT " & \\multicolumn{1}{l}{\\normalsize ".Tab::texify($panel->round->site->dropoff)." }\\\\ \n";
					print TEXOUT "\\end{tabular}\n";
				
					print TEXOUT "\\hspace{.25in}\n" unless ($switch % 2);
					print TEXOUT "\\vspace{.30in}\n" if ($switch % 2);
					print TEXOUT "\\newline\n" if ($switch++ % 2);

				}
			}
		}
	}

	print TEXOUT "\\end{document}\n";
    close TEXOUT;

	#This is sometimes very high memory; lualatex dynamically adjusts
    $garbage = `cd $filepath; $Tab::pdflatex_path $filename.tex`;  
	$garbage = `cd $filepath; rm -f $filename.tex $filename.log $filename.dvi $filename.aux`;
    $m->redirect("$Tab::url_prefix/tmp/$filename.pdf");

</%init>
