<%args>
	$tourn
	$session
	$round_id => undef
</%args>
<%init>

	my $round = Tab::Round->retrieve($round_id);
	my $event = $round->event;

	my $name = $round->realname."-".$event->name;
	$name = "ALL" unless $name;
    $name =~ s/[\W_]//g;

    my $filename = "Schematic-$name-".$session->id;
    my $filepath = $Tab::file_root."tmp/".$filename;
    `rm -f $filepath.*`;

    $m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, head => 1, wide => 1, array => "1.3");

	open (TEXOUT, ">>$filepath.tex");

	my $aff_string = $event->setting("aff_label");
	my $neg_string = $event->setting("neg_label");
	$aff_string = "Aff" unless $aff_string;
	$neg_string = "Neg" unless $neg_string;

	Tab::Panel->set_sql( schemat => "
		select panel.*, room.name as roomname
		from panel
		left join room on panel.room = room.id
		where panel.round = ? 
		order by panel.letter");

	my @panels = Tab::Panel->search_schemat($round->id);

	my $sidelocks++ if ($round->type eq "elim" || $round->type eq "final") && not defined $event->setting("no_side_constraints");

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $start = $round->start_time;
	$start = $round->timeslot->start unless $start;
	$start->set_time_zone($tz);

	open (TEXOUT, ">>$filepath.tex");

	my $tabular;

	$tabular = "\\begin{tabular}{p{1.25in}p{2in}p{2in}p{1.5in}}\n";

	print TEXOUT "{\\bf \\Large ". Tab::texify($round->realname);
	print TEXOUT "} \\hfill {\\bf \\Large ". Tab::texify($event->name);
	print TEXOUT "} \\hfill {\\bf \\Large Start: ".Tab::nicetime($start)." } ";

	print TEXOUT " \\\\ \n";
	print TEXOUT "\\newline\n";
	print TEXOUT "\\large\n";

	print TEXOUT $tabular;
	print TEXOUT "\\rowcolor[rgb]{1.0,.94,.65}\[6pt\]\[6pt\]\n";
	print TEXOUT "\\bf Room & \\bf Aff & \\bf Neg & \\bf Judges \\\\ \n";

	print TEXOUT "\\end{tabular}\n";

	my @entries = $m->comp("/funclib/round_entries.mas", round => $round);
	my @judges = $m->comp("/funclib/round_judges.mas", round => $round);
	my @ballots = $m->comp("/funclib/round_ballots.mas", round => $round);

	my %judge_by_id = map {$_->id => $_} @judges;

	my %entries_by_panel = ();

	foreach my $entry (@entries) { 
		push (@{$entries_by_panel{$entry->panelid}}, $entry);
	}

	my %ballots_by_entry = ();
	my %panel_undone = ();
	my %judges_by_panel = ();

	foreach my $ballot (@ballots) { 
		push @{$ballots_by_entry{$ballot->entry->id}}, $ballot if $ballot->entry;
		$panel_undone{$ballot->panel->id}++ unless $ballot->audit;
		push @{$judges_by_panel{$ballot->panel->id}}, $judge_by_id{$ballot->judge->id} if  $judge_by_id{$ballot->judge->id};
	}

	@panels = sort {$a->roomname cmp $b->roomname} @panels;
	@panels = sort {$a->bye <=> $b->bye} @panels;

	my $switch = 1;

	foreach my $panel (@panels) { 

		my $aff;
		my $neg;
		my @byes;

		my $locked_aff =  $m->comp("/funclib/round_elim_dueaff.mas", panel => $panel) if $sidelocks;

		foreach my $pc (@{$entries_by_panel{$panel->id}}) { 
			if ($ballots_by_entry{$pc->id}) { 
				push @byes, $pc if $panel->bye;
				$aff = $pc if ${$ballots_by_entry{$pc->id}}[0]->side == "1";
				$neg = $pc if ${$ballots_by_entry{$pc->id}}[0]->side == "2";
			}
		}

		next unless $entries_by_panel{$panel->id};
	
		print TEXOUT $tabular;
		print TEXOUT "\\rowcolor[rgb]{.91,.91,.91}\[5.5pt\]\[5.5pt\]" if $switch++ % 2;

		print TEXOUT "\\raggedright ".Tab::texify($panel->roomname)." & ";

		if ($panel->bye) { 

			foreach my $bye (@byes) {
				print TEXOUT "\\raggedright ".Tab::texify($bye->name)." & ";
			}

		} elsif ($aff) { 
			print TEXOUT "\\raggedright ".Tab::texify($aff->code)." ";
			print TEXOUT "\\newline \\hspace*{0pt} \\hfill \\scriptsize{".Tab::texify($aff_string)."}" if $locked_aff;
			print TEXOUT "\\newline \\hspace*{0pt} \\hfill \\scriptsize{Flip}" if $sidelocks && not defined $locked_aff;
			print TEXOUT " & ";  
		} 

		if ($panel->bye) { 
			if (scalar @byes > 1) { 
				print TEXOUT "BYE ";  
			} else { 
				print TEXOUT " BYE & ";
			}
		} elsif ($neg) { 
			print TEXOUT "\\raggedright ".Tab::texify($neg->code)." ";
			print TEXOUT "\\newline \\hspace*{0pt} \\hfill \\scriptsize{".Tab::texify($neg_string)."}" if $locked_aff;
			print TEXOUT "\\newline \\hspace*{0pt} \\hfill \\scriptsize{Flip}" if $sidelocks && not defined $locked_aff;
		}

		print TEXOUT " & ";

		my $notfirst;
		my %used = ();

		if ($judges_by_panel{$panel->id}) { 
			foreach my $judge (sort {$b->chair <=> $a->chair} @{$judges_by_panel{$panel->id}}) {
				next if $used{$judge->id}++;
				print TEXOUT "\\smallskip \\newline\n" if $notfirst++;
				print TEXOUT "\\truncate[]{1.45in}{ ";
				print TEXOUT Tab::texify($judge->first) if $judge->setting("list_first_name");
				print TEXOUT " ".Tab::texify($judge->last);
				print TEXOUT " }";
			} 
		}

		print TEXOUT "\n\\end{tabular}\n";

	} 

	close TEXOUT;

    $m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, tail => 1 );

</%init>
