<%args>
	$event_id => undef
	$panel_id => undef
	$judge_id => undef
	$chair    => undef
	$filename
</%args>
<%perl>

	my $filepath = $Tab::file_root."/tmp/".$filename;

	my $panel = Tab::Panel->retrieve($panel_id);
	my $judge = Tab::Judge->retrieve($judge_id) if $judge_id;

	my $event = Tab::Event->retrieve($event_id) if $event_id;
	$event = $panel->round->event if $panel;

	my $tourn = $event->tourn;

	my $ncfl++ if $tourn->setting("ncfl");
	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $style = $event->judge_group->setting("master_ballot");
	$style = "titles" unless $style;
	my $code_style = $event->setting("code_style");

	my $strip = HTML::Strip->new();

	my $points;
	my $ranks;

	if ($panel && $panel->round->tb_set) { 
		foreach my $tb ($panel->round->tb_set->tiebreaks) {
			$points++ if $tb->name eq "points";
			$ranks++ if $tb->name eq "ranks";
		}
	} else { 
		$points++;
		$ranks++;
	}

	open (TEXOUT, ">>$filepath.tex");

	print TEXOUT "\\noindent \n";
	print TEXOUT "{\\Large ".$event->abbr;
	print TEXOUT $panel->letter if $panel;
	print TEXOUT " \\hfill ";
	print TEXOUT "\\Huge ".&Tab::texify($judge->first." ".$judge->last)."}\n" if $judge;
	print TEXOUT "\\LARGE Judge: \\makebox[2in]{\\hrulefill}\n" unless $judge;
	print TEXOUT "\\normalsize\n";

	if ($judge) { 
		unless ($judge->judge_group->setting("no_codes")) { 
			print TEXOUT "\\newline\n";
			print TEXOUT "\\medskip\n";
			print TEXOUT "\\hfill\n";
			if ($judge->school) {
				print TEXOUT &Tab::texify($judge->school->code) if $judge->school->code;
				print TEXOUT &Tab::texify($judge->school->code) unless $judge->school->code;
			} else {
				print TEXOUT &Tab::texify("Hire") unless $judge->school;
			}
			print TEXOUT &Tab::texify(" ".$judge->code)."\n" if $judge->code; 
			print TEXOUT ".\n" unless $judge->code; 
		}

		print TEXOUT "\\medskip \n";
		print TEXOUT "\\newline\n";
	}

	print TEXOUT "\\begin{center}\n";

	if ($tourn->setting("logo")) { 

		system "cd $Tab::file_root/tmp; $Tab::latex_path_prefix/wget ".$Tab::s3_url."/".$tourn->id."/".$tourn->setting("logo");

		print TEXOUT "\\vspace{-50pt}\n";
		print TEXOUT "\\begin{figure}[h!]\n";
		print TEXOUT "\\centerline{\\includegraphics[height=1.25in]{".$tourn->setting("logo")."}}\n";
		print TEXOUT "\\end{figure}\n";
		print TEXOUT "\\vspace{-5pt}\n";
	} else { 
		print TEXOUT "\\LARGE ".&Tab::texify($tourn->name)."\%\n\n";
	}

	if ($chair) { 
		print TEXOUT "{\\Large\\bf CHAIR MASTER BALLOT}\%\n";
	} else {
		print TEXOUT "{\\Large\\bf MASTER BALLOT}\%\n\n";
	}
	print TEXOUT "\\end{center} \n";

	if ($event->setting("ballot_type") eq "rules") { 
		print TEXOUT "{\\bf \\large Rules of Procedure:}\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\normalsize\n";
		my $text = $event->setting("ballot_rules");
		$text = $strip->parse( $text );
		print TEXOUT &Tab::texify($text)."\n";
		print TEXOUT "--\n";
		print TEXOUT "\\smallskip\n";
		print TEXOUT "\\newline\n";
	}

	print TEXOUT "{\\normalsize\\bf ".$event->name;
	print TEXOUT " \\hfill ".$panel->round->realname if $panel;
	print TEXOUT " \n\\newline Room: ";
	print TEXOUT ($panel && $panel->room->id) ? &Tab::texify($panel->room->name) : "ASK TAB";
	print TEXOUT "}\\hfill ";

	if ($panel) { 
		my $roundstart = $panel->round->start_time;
		$roundstart = $panel->round->timeslot->start unless $roundstart;
		$roundstart->set_time_zone($tz);

		print TEXOUT "{\\normalsize\\bf Round starts at: ".Tab::nicetime($roundstart)."}\n";
	}

	print TEXOUT "\\newline\n";

	if ($event->setting("ballot_type") eq "rules") { 
		print TEXOUT "\\renewcommand{\\arraystretch}{1.8} \n" if $event->type eq "speech";
	} else { 
		print TEXOUT "\\renewcommand{\\arraystretch}{2.2} \n" if $event->type eq "speech";
	}

	print TEXOUT "\\renewcommand{\\arraystretch}{1.5} \n" if $event->type eq "congress";

	print TEXOUT "\\begin{center}\n";
	print TEXOUT "\\large \n";

	my $length = 6.25;

	my $tabular = "\\begin{tabular}{|";
	my $header;

	if ($style eq "name_schcode" || $style eq "title_schcode") { 
		$length -= .5;
		$header .= "School & ";
		$tabular .= "p{.5in}|";
	}

	$length -= .5 if $points;
	$length -= .5 if $ranks;

	# If the codes are names there's no point in printing the codes and the
	# names since they're the same

	if ($code_style eq "names" || $code_style eq "names_lastfirst") { 

		if ($style eq "both" || $style eq "titles" || $style eq "title_schcode") {
			my $remainder = $length/3;
			$tabular .= "p{".$remainder."in}|";
			$tabular .= "p{".(2 * $remainder)."in}|";
			$header .= " Name & Title/Question ";
		} else { 
			$tabular .= "p{".$length."in}|";
			$header .= " Name  ";
		}

	} else { 

		$length -= .5;
		$header .= "Code & ";
		$tabular .= "p{.5in}|";

		if ($style eq "both") { 
			my $remainder = $length/3;
			$tabular .= "p{".$remainder."in}|";
			$tabular .= "p{".(2 * $remainder)."in}|";
			$header .= " Name & Title/Question  ";
		} elsif ($style eq "titles" || $style eq "title_schcode") {
			$tabular .= "p{".$length."in}|";
			$header .= " Title/Question  ";
		} else { 
			$tabular .= "p{".$length."in}|";
			$header .= " Name  ";
		}
	}

	if ($ranks) { 
		$header .= "& Rank ";
		$tabular .= "p{.5in}|";
	} 

	if ($points) { 
		$header .= "& Points ";
		$tabular .= "p{.5in}|";
	}

	print TEXOUT $tabular."} \n";
	print TEXOUT "\\hline ";
	print TEXOUT $header ." \\\\\n";
	print TEXOUT "\\hline ";

	my $count;
	my $doubled;

	if ($panel) { 

		foreach my $entry ($m->comp("/funclib/panel_entries.mas", panel => $panel)) {

			next if $entry->dropped;

			my $doublestars;
			foreach (1 .. scalar $m->comp("/funclib/entry_double.mas", entry => $entry, round => $panel->round)) {
				$doublestars .= "*";
			}
			$doubled++ if $doublestars;

			if ($style eq "name_schcode" || $style eq "title_schcode") { 

				if ($ncfl) { 
					print TEXOUT &Tab::texify($entry->school->region->code)." & ";
				} else { 
					print TEXOUT &Tab::texify($entry->school->code)." & ";
				}

			}

			if ($code_style eq "names" || $code_style eq "names_lastfirst") {

				if ($style eq "both" || $style eq "titles" || $style eq "title_schcode") {
					print TEXOUT Tab::texify($doublestars);
					print TEXOUT Tab::texify($entry->code)." & ";
				} else { 
					print TEXOUT Tab::texify($doublestars);
					print TEXOUT Tab::texify($entry->code);
				}

			} else { 

				print TEXOUT Tab::texify($doublestars);
				print TEXOUT Tab::texify($entry->code)." & ";

				print TEXOUT Tab::texify($entry->name)."  & " if $style eq "both";
				print TEXOUT Tab::texify($entry->name)." " if $style eq "names" || $style eq "name_schcode";

				if ($style eq "first") { 
					my $notfirst;
					foreach my $student ($entry->students) { 
						print TEXOUT Tab::texify("&")." " if $notfirst++;
						print TEXOUT Tab::texify($student->first)." ";
					}

				}

			}

			print TEXOUT " & " if $ranks;
			print TEXOUT " & " if $points;
			print TEXOUT " \\\\ \\hline \n";
			$count++;
		}

	}

	#Fill in extra spaces, up to 7.
	while ($count < 7) {

		print TEXOUT " & " if $style eq "name_schcode" || $style eq "title_schcode";
		print TEXOUT " & " unless ($code_style eq "names" || $code_style eq "names_lastfirst");
		print TEXOUT " & " if $style eq "both" || $style eq "title_schcode" ;
		print TEXOUT " & " if $ranks;
		print TEXOUT " & " if $points;
		print TEXOUT " \\\\ \\hline \n ";
		$count++;
	}

	print TEXOUT "\\end{tabular}\n";
	print TEXOUT "\\medskip \n ";
	print TEXOUT "\\end{center}\n";

	print TEXOUT "* These students are double (or triple, etc) entered.  Please accomodate late arrivals, or allow them to leave early.\n "if $doubled;

	print TEXOUT "\\medskip \n "if $doubled;
	print TEXOUT "\\break \n " if $doubled;
	print TEXOUT "\\small \n";

	if ($chair) { 

		my $message = $tourn->setting("chair_ballot_message");
		$message = $tourn->setting("ballot_message") unless $message;
		$message = $strip->parse( $message );

		print TEXOUT "\\smallskip \n ";
		print TEXOUT &Tab::texify($message)."\n";

		my $notfirst;

		if ($panel) { 
			foreach my $oj ($m->comp("/funclib/panel_judges.mas", panel => $panel)) {
				next if $oj->id == $judge->id;
				print TEXOUT "\\vspace*{.5in}\n \\normalsize {\\bf Other judges:} " unless $notfirst++;
				print TEXOUT $oj->code." ".$oj->last." ";
			}
		}

	} else {
		my $message = $tourn->setting("ballot_message");
		$message = $strip->parse( $message );
		print TEXOUT &Tab::texify($message)."\n";
	}

	print TEXOUT "\\normalsize \n";
	print TEXOUT "\\hfill ".$panel->id."\n" if $panel;
	print TEXOUT "\\hfill ".$event->id."\n" unless $panel;

	close (TEXOUT);

</%perl>
