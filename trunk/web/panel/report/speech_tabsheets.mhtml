<%args>
	$event_id
	$tourn
	$session
</%args>
<%init>
	use POSIX;
	
	my $tourn_id = $tourn->id;
	my @events;

	if ($event_id eq "all") { 
		@events = $tourn->events(type => "speech");
	} else {
		push (@events, Tab::Event->retrieve($event_id));
	} 

	@events = sort {$a->name cmp $b->name} @events;

	#Set up the filename and the needed trace files

	my $name = $tourn->name if $event_id eq "all";
	$name = $events[0]->name if @events && not defined $name;
	$name =~ s/[\W_]//g;

	my $filename = "TabSheet-$name-".$session->id;
	my $filepath = $Tab::file_root."tmp/".$filename;
	`rm -f $filepath.*`;

	$m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, head => 1 );

	open (TEXOUT, ">>$filepath.tex");

	print TEXOUT "\\small \n";
	print TEXOUT '\setlength{\tabcolsep}{.32em}';

	my $switch;

	foreach my $event (@events) { 

		my @rounds = $event->rounds( type => "prelim");
		@rounds = sort { $a->name <=> $b->name } @rounds;

		my $tabular = "\\begin{tabular}{|p{.5in}|p{.75in}||";
		foreach (@rounds) { $tabular .= 'p{.42in}|'; }
		$tabular .= '|p{.42in}||p{.42in}|p{.42in}|p{.42in}||p{.42in}|p{.42in}|p{.42in}|';
		$tabular .= "}\n";

		my @entries = Tab::Entry->search( event => $event->id, waitlist => 0, dropped => 0, {order_by => "code"});

		print TEXOUT "\\Large{ \\bf ". $event->name ." \\hfill ". $tourn->name."}";
		print TEXOUT "\\small \n";
		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";

		print TEXOUT $tabular;
		print TEXOUT "\\hline\n";
		print TEXOUT "\\rowcolor[rgb]{1,.95,.66}\[2.4pt\]\[2.4pt\]\n";
		print TEXOUT "Code & Name &";
		foreach my $round (@rounds) { 
			print TEXOUT "Rd. ". $round->name ." & "; 
		}
		print TEXOUT "Total & F J1 & F J2  & F J3  & Total  & Place  & Sweep  \\\\ \n";
		print TEXOUT "\\hline\n";
		print TEXOUT "\\end{tabular}\n";
		print TEXOUT "\\newline\n";

		my $entry_count = 1;

		my @ballots = $m->comp('/funclib/event_ballots.mas', event => $event, entry_required => 1);
		my @values = $m->comp('/funclib/event_values.mas', event => $event);

		my %truncate_round;

		foreach my $round (@rounds) { 

			next unless $round->tb_set;
			$truncate_round{$round->id} = $round->tb_set->setting("truncate_ranks_to");

			if ($round->tb_set->setting("truncate_to_smallest")) { 

				foreach my $panel ($round->panels) { 
					my $size = scalar $m->comp("/funclib/panel_entries.mas", panel => $panel);
					$truncate_round{$round->id} = $size unless $truncate_round{$round->id};
					$truncate_round{$round->id} = $size if $truncate_round{$round->id} > $size;
				}

			}
		}

		my %ballots_by_entry = ();
		my %values_by_ballot = ();

		foreach my $ballot (@ballots) { 
			push @{$ballots_by_entry{$ballot->entry->id}}, $ballot if $ballot->entry;
		}

		foreach my $value (@values) { 
			push @{$values_by_ballot{$value->ballot->id}}, $value;
		}
	
		foreach my $entry (@entries) { 

			if ($entry_count == 20) {
				print TEXOUT "\\newpage\n";
				print TEXOUT "\\Large{ \\bf ". $event->name ." \\hfill ". $tourn->name."}";
				print TEXOUT "\\medskip\n";
				print TEXOUT "\\newline\n";
	
				print TEXOUT "\\small \n";

				print TEXOUT $tabular;
				print TEXOUT "\\hline\n";
				print TEXOUT "\\rowcolor[rgb]{1,.95,.66}\[2.4pt\]\[2.4pt\]\n";
				print TEXOUT "Code & Name &";

				foreach my $round (@rounds) { 	
					print TEXOUT "Rd. ". $round->name ." & "; 
				}

				print TEXOUT "Total & F J1 & F J2  & F J3  & Total  & Place  & Sweep  \\\\ \n";
				print TEXOUT "\\hline\n";
				print TEXOUT "\\end{tabular}\n";
				print TEXOUT "\\newline\n";
				$entry_count = 1;
			}

			print TEXOUT $tabular;

			print TEXOUT "\\hline\n";

			my $total = scalar @rounds + 5;
			my @ballots = @{$ballots_by_entry{$entry->id}} if $ballots_by_entry{$entry->id};
			my @tmp_ballots = @ballots;

			print TEXOUT "\\centering ".Tab::texify($entry->code)." & \\multirow{2}{*}{\\parbox{.72in}{\\footnotesize ".Tab::texify($entry->name)."}} & ";

			my $score_total;
			my $last;
			my $count;

			foreach my $round ($event->rounds) { 

				my $in_it;

				next if $round->type eq "elim";

				if (($round->type eq "elim" || $round->type eq "final") && ($last ne "elim" || $last ne "final")) { 
					print TEXOUT "\\centering {\\normalsize \\bf $score_total } & ";
					$count++;
				}

				foreach my $ballot (@ballots) { 

					next unless $ballot->panel->round->id == $round->id;
					next if $ballot->panel->round->type eq "elim";

					$in_it++;
			
					print TEXOUT "\\centering\n";
					print TEXOUT "{\\normalsize \n";

					foreach my $value (@{$values_by_ballot{$ballot->id}}) { 
						next unless $value->tag eq "rank";
						my $rank = $value->value;
						$rank++ if $ballot->tv; 
						$rank = $truncate_round{$round->id} if $truncate_round{$round->id} && $rank > $truncate_round{$round->id};
						print TEXOUT Tab::texify($rank);
						$score_total += $rank;
					}

					print TEXOUT "} ";

					print TEXOUT "{\\footnotesize TV}" if $ballot->tv;
					print TEXOUT "{\\footnotesize NS}" if $ballot->noshow;
					print TEXOUT " & "; 
					$count++;

				}
				
				my $last = $round->type;

				if ($last eq "final" && $in_it) { 
					print TEXOUT "\\centering\n";
					print TEXOUT "{\\normalsize \\bf $score_total  } & ";
					$count++;
				}


			}

			foreach my $count ($count .. $total ) {
				print TEXOUT " & ";
			}

			print TEXOUT " \\\\ \n";

			undef $count;
			undef $score_total;

			print TEXOUT "\\centering ".Tab::texify($entry->school->code)." &  & ";

			foreach my $round ($event->rounds) { 

				my $in_it;

				next if $round->type eq "elim";

				if (($round->type eq "elim" || $round->type eq "final") && ($last ne "elim" || $last ne "final")) { 
					print TEXOUT "\\centering\n";
					print TEXOUT "{\\normalsize \\bf $score_total  } & ";
					$count++;
				}

				foreach my $ballot (@ballots) { 

					next unless $ballot->panel->round->id == $round->id;

					$in_it++;

					foreach my $value (@{$values_by_ballot{$ballot->id}}) { 
						next unless $value->tag eq "points";
						print TEXOUT "\\centering\n";
						print TEXOUT "{\\normalsize ";
						print TEXOUT $value->value;
						print TEXOUT " } \n";
						$score_total += $value->value;
					}
				
					print TEXOUT " & "; 
					$count++;
				}

				my $last = $round->type;

				if ($last eq "final" && $in_it) { 
					print TEXOUT "\\centering\n";
					print TEXOUT "{\\normalsize \\bf $score_total  } & ";
					$count++;
				}

			}

			foreach my $count ($count .. $total ) {
				print TEXOUT " & ";
			}

			print TEXOUT " \\\\ \n";
			print TEXOUT "\\hline \n";
			print TEXOUT "\\end{tabular}\n";
			print TEXOUT "\\newline\n";
			$entry_count++;
		}

	} # end of foreach event

	$m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, tail => 1 );

</%init>
