<%args>
	$event_id
	$tourn
	$session
</%args>
<%init>
	use POSIX;
	
	my $tourn_id = $tourn->id;
	my @events;

	if ($event_id eq "all") { 
		@events = $tourn->events(type => "speech");
	} else {
		push (@events, Tab::Event->retrieve($event_id));
	} 

	@events = sort {$a->name cmp $b->name} @events;


	#Set up the filename and the needed trace files

	my $name = $tourn->name if $event_id eq "all";
	$name = $events[0]->name if @events && not defined $name;
	$name =~ s/[\W_]//g;

	my $filename = "TabSheet-$name-".$session->id;
	my $filepath = $Tab::file_root."tmp/".$filename;
	`rm -f $filepath.*`;

	$m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, head => 1 );

	open (TEXOUT, ">>$filepath.tex");

	foreach my $event (@events) { 

		my @rounds = $event->rounds( type => "prelim");
		@rounds = sort { $a->name <=> $b->name } @rounds;
		my @entries = Tab::Entry->search( event => $event->id, waitlist => 0, dropped => 0, {order_by => "code"});

		print TEXOUT "\\medskip\n";
		print TEXOUT "\\Large ". $event->name ." \\hfill ". $tourn->name;
		print TEXOUT "\\newline\n";
		print TEXOUT "\\normalsize \\\\ \n";
		print TEXOUT "\\begin{tabular*}{1.0\\textwidth}% \n";
		print TEXOUT "{\@{\\extracolsep{\\fill}}|l|l||";


		#How's this for arcane?	
		foreach my $round (@rounds) { print TEXOUT 'c|'; }
		print TEXOUT "|c||c|c|c||c|c|c|}\n";
		print TEXOUT "\\hline \n";
		print TEXOUT "\\rowcolor[rgb]{.84,.89,.94}\[5.5pt\]\[5.5pt\]\n";
		print TEXOUT "\\textsf{Code} & \\textsf{Name} &";
		foreach my $round (@rounds) { print TEXOUT "\\textsf{Rd. ". $round->name ."} & "; }
		print TEXOUT "\\textsf{Total}  & \\textsf{F J1} & \\textsf{F J2}  & \\textsf{F J3}  &  \\textsf{Total}  & \\textsf{Place}  & \\textsf{Sweep}  \\\\ \n";
		print TEXOUT "\\hline \n \\hline \n";

		my $entry_count = 1;

		my @ballots = $m->comp('/funclib/event_ballots.mas', event => $event);
		my @values = $m->comp('/funclib/event_values.mas', event => $event);

		my %truncate_round;

		foreach my $round (@rounds) { 

			next unless $round->tb_set;
			$truncate_round{$round->id} = $round->tb_set->setting("truncate_ranks_to");

			if ($round->tb_set->setting("truncate_to_smallest")) { 

				foreach my $panel ($round->panels) { 
					my $size = scalar $m->comp("/funclib/panel_entries.mas", panel => $panel);
					$truncate_round{$round->id} = $size unless $truncate_round{$round->id};
					$truncate_round{$round->id} = $size if $truncate_round{$round->id} > $size;
				}

			}
		}

		my %ballots_by_entry = ();
		my %values_by_ballot = ();

		foreach my $ballot (@ballots) { 
			push @{$ballots_by_entry{$ballot->entry->id}}, $ballot if $ballot->entry && $ballots_by_entry{$ballot->entry->id};
		}

		foreach my $value (@values) { 
			push @{$values_by_ballot{$value->ballot->id}}, $value;
		}
	
		foreach my $entry (@entries) { 

			if ($entry_count == 18) {
				print TEXOUT "\\end{tabular*}\n \\newpage \n";
				print TEXOUT "\\medskip\n";
				print TEXOUT "\\Large ". $event->name ." \\hspace{4 cm} ". $tourn->name;
				print TEXOUT "\\newline\n";
				print TEXOUT "\\normalsize \\\\ \n";
				print TEXOUT "\\begin{tabular*}{1.0\\textwidth}% \n";
				print TEXOUT "{\@{\\extracolsep{\\fill}}|l|l||";

				foreach my $round (@rounds) { print TEXOUT 'c|'; }
				print TEXOUT "|c||c|c|c||c|c|c|}\n \\hline";
				print TEXOUT "\\rowcolor[rgb]{.84,.89,.94}\[5.5pt\]\[5.5pt\]\n";
				print TEXOUT "\\textsf{Code} & \\textsf{Name} &";
				foreach my $round (@rounds) { print TEXOUT "\\textsf{Rd. ". $round->name ."} & \n"; }
				print TEXOUT "\\textsf{Total}  & \\textsf{F J1} & \\textsf{F J2}  & \\textsf{F J3}  &  \\textsf{Total}  & \\textsf{Place}  & \\textsf{Sweep}  \\\\ \n";
				print TEXOUT "\\hline \n \\hline \n";
				$entry_count = 1;
			}

			my $total = scalar @rounds + 5;
			my @ballots = @{$ballots_by_entry{$entry->id}} if $ballots_by_entry{$entry->id};
			my @tmp_ballots = @ballots;

			print TEXOUT Tab::texify($entry->code)." & \\multirow{2}{*}{\\parbox{1.75cm}{".Tab::texify($entry->name)."}} & ";

			my $prelim_total;
			my $last;
			my $count;

			foreach my $round ($event->rounds) { 

				next if $round->type eq "elim";

				if (($round->type eq "elim" || $round->type eq "final") && ($last ne "elim" || $last ne "final")) { 
					print TEXOUT " $prelim_total  & ";
					$count++;
				}

				foreach my $ballot (@ballots) { 

					next unless $ballot->panel->round->id == $round->id;
					next if $ballot->panel->round->type eq "elim";

					foreach my $value (@{$values_by_ballot{$ballot->id}}) { 
						next unless $value->tag eq "rank";
						my $rank = $value->value;
						$rank++ if $ballot->tv; 
						$rank = $truncate_round{$round->id} if $truncate_round{$round->id} && $rank > $truncate_round{$round->id};
						print TEXOUT Tab::texify($rank);
						print TEXOUT "{\\footnotesize (".Tab::texify($value->value).")}" if $value->value != $rank;
						$prelim_total += $rank if $round->type ne "elim" && $round->type ne "final";
					}

					print TEXOUT "{\\footnotesize TV}" if $ballot->tv;
					print TEXOUT "{\\footnotesize NS}" if $ballot->noshow;
					print TEXOUT " & "; 
					$count++;

				}
				
				my $last = $round->type;

			}

			foreach my $count ($count .. $total ) {
				print TEXOUT " & ";
			}

			print TEXOUT " \\\\ \n";

			undef $count;
			undef $prelim_total;

			print TEXOUT $entry->school->code." &  & ";

			foreach my $round ($event->rounds) { 

				next if $round->type eq "elim";

				if (($round->type eq "elim" || $round->type eq "final") && ($last ne "elim" || $last ne "final")) { 
					print TEXOUT " $prelim_total  & ";
					$count++;
				}

				foreach my $ballot (@ballots) { 

					next unless $ballot->panel->round->id == $round->id;

					foreach my $value (@{$values_by_ballot{$ballot->id}}) { 
						print TEXOUT $value->value if $value->tag eq "points";
						$prelim_total += $value->value if $round->type ne "elim" && $round->type ne "final";
					}
				
					print TEXOUT " & "; 
					$count++;
				}

				my $last = $round->type;

			}

			foreach my $count ($count .. $total ) {
				print TEXOUT " & ";
			}

			print TEXOUT " \\\\ \n";
			print TEXOUT "\\hline \n";
			$entry_count++;

		}

		print TEXOUT "\\end{tabular*}\n \\newpage \n";

	} # end of foreach event

	print TEXOUT "\\end{document} \n";
	close TEXOUT;

	$m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, tail => 1 );

</%init>
