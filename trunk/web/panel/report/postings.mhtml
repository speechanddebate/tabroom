<%args>
	$tourn
	$session
	$timeslot_id => undef
	$debug       => undef
	$event_id    => undef
	$panel_id    => undef
</%args>
<%init>

	use POSIX;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
	
	my $tourn_id = $tourn->id;
	my @events;
	my @panels;

	if ($panel_id) { 
		push (@panels, Tab::Panel->retrieve($panel_id));
		push (@events, $panels[0]->round->event);
	} elsif ($event_id eq "all") { 
		@events = $m->comp("/funclib/tourn_events.mas", tourn => $tourn);
	} else {
		push (@events, Tab::Event->retrieve($event_id));
	}
	
 	my @timeslots;

	if ($timeslot_id eq "all") { 
		@timeslots = $tourn->timeslots;
	} else {
		push (@timeslots, Tab::Timeslot->retrieve($timeslot_id));
	} 

	@events = sort {$a->abbr <=> $b->abbr} @events;

	my $ncfl = $tourn->setting("ncfl");

	# Set up the filename and the needed trace files

     my $filename = $Tab::file_root."/tmp/postings-".$timeslot_id."-".$event_id."-".$tourn->id."-".$session->id;
     my $garbage = `rm -f $filename.*`;
     open (TEXOUT, ">$filename.tex");

	print TEXOUT <<'EOF';
\documentclass[12pt]{letter}
\usepackage{fullpage}
\usepackage[default]{sourcesanspro}
\usepackage[T1]{fontenc}
\usepackage[scaled]{beramono}
\usepackage{setspace}
\usepackage{nopageno}
\usepackage{minibox}
\usepackage[normalem]{ulem}

\renewcommand{\arraystretch}{1.3}
\renewcommand{\familydefault}{\sfdefault}


% Overrule the maximum in font-size in ot1cmr.fd:
\DeclareFontShape{OT1}{cmr}{m}{n}
     {%
        <5><6><7><8><9>gen*cmbx%
        <10><10.95>cmbx10%
        <12><14.4><17.28><20.74><24.88->cmbx12%
        }{}

\begin{document}
\begin{center}

\addtolength{\textwidth}{1in}
\addtolength{\hoffset}{-.1in}

EOF

	foreach my $event (@events) { 

		my $code_style = $event->setting("code_style");

		my $no_codes++ if $event->judge_group->setting("no_codes");

		my $names++ if $code_style eq "names" || $code_style eq "last_names" || $code_style eq "names_lastfirst" || $code_style eq "code_name";
		my $debate++ unless $event->type eq "speech" || $event->type eq "congress";

		@panels = () unless ($panel_id);

		foreach my $timeslot (@timeslots) { 
			push @panels, $m->comp("/funclib/event_panels.mas", timeslot => $timeslot, event => $event);
		}

		foreach my $panel (@panels) { 

			print TEXOUT "\\fontsize{50pt}{50pt}\\selectfont ";
			print TEXOUT $event->name." \\\\ \n";
			print TEXOUT "{\\Huge ".uc($panel->round->realname)."} \\\\ \n";

			if ($debate) { 
				print TEXOUT "\\makebox[.8\\textwidth]{\\hrulefill}\n";
			} else { 
				print TEXOUT "\\makebox[.8\\textwidth]{\\hrulefill}\n";
			}

			print TEXOUT "\\fontsize{50pt}{50pt}\\selectfont \n";
			print TEXOUT "\\fontsize{64pt}{64pt}\\selectfont \n" if $ncfl;
	
			my $switch;
			my $notfirst;
	
			foreach my $entry ($m->comp('/funclib/panel_entries.mas', panel => $panel, no_drops => 1)) { 

				if ($debate) { 
					print TEXOUT "\\noindent \\emph{\\Huge vs} \\\\ \n" if $notfirst++;
				
					print TEXOUT "\\noindent\n";
					print TEXOUT Tab::texify($entry->code)." \\\\ \n" unless $names;
					print TEXOUT "\\huge ".Tab::texify($entry->name)." \\\\ \n" if $names;
				} elsif ($switch) { 
					print TEXOUT "\\noindent\n";
					print TEXOUT Tab::texify($entry->code)." \\\\ \n" unless $names;
					print TEXOUT "\\huge ".Tab::texify($entry->name)." \n\n" if $names;
					undef($switch);
				} else { 
					print TEXOUT "\\noindent\n";
					print TEXOUT Tab::texify($entry->code)." \n" unless $names;
					print TEXOUT "\\huge ".Tab::texify($entry->name)." \n" if $names;
					print TEXOUT "\\hfill\n";
					$switch++;
				}
			}

			print TEXOUT "\\\\  \n" if $switch == 1;

			unless ($debate) { 
				print TEXOUT "\\makebox[.8\\textwidth]{\\hrulefill}\n";
			} else { 
				print TEXOUT "\\makebox[.8\\textwidth]{\\hrulefill}\n";
			}

			print TEXOUT "\\fontsize{24pt}{24pt}\\selectfont \n"; 	
			print TEXOUT "\\fontsize{32pt}{32pt}\\selectfont \n" if $ncfl;	
			print TEXOUT "\\noindent ROOM: ".Tab::texify($panel->room->name) ." " if $panel->room->id;
			my $start = $panel->round->start_time->set_time_zone($tz) if $panel->round->start_time;
			$start = $panel->round->timeslot->start->set_time_zone($tz) unless $start;
			print TEXOUT "\n\n";
			print TEXOUT "\\noindent BEGIN: ".$start->hour_12.":".$start->strftime("%M")." ".$start->strftime("%P")." \n\n";
			print TEXOUT "\n\n";
			print TEXOUT "\\makebox[.8\\textwidth]{\\hrulefill}\n";
			print TEXOUT " JUDGES:\n\n";

			my $count;

			print TEXOUT "\\fontsize{32pt}{32pt}\\selectfont \n"; 	
			print TEXOUT "\\fontsize{40pt}{40pt}\\selectfont \n" if $ncfl; 	
			foreach my $judge ($m->comp('/funclib/panel_judges.mas', panel => $panel)) { 
				print TEXOUT Tab::texify($judge->school->code) if $judge->school->id && not defined $no_codes;
				print TEXOUT "HIRE" unless $judge->school->id || $no_codes ;
				print TEXOUT " \\LARGE ".Tab::texify($judge->code) unless $ncfl;
				print TEXOUT Tab::texify($judge->code) if $ncfl;
				print TEXOUT " \\LARGE ".Tab::texify(ucfirst($judge->last)) unless $ncfl;
				print TEXOUT ", ".Tab::texify(ucfirst($judge->first)) if $no_codes;

				if ($judge->chair) { 
					print TEXOUT " \\emph{\\large (Chair) } " unless $event->type eq "congress";
					print TEXOUT " \\emph{\\large (Parl.) } " if $event->type eq "congress";
				}

				unless ($ncfl) { 
					print TEXOUT " \\hfill  " unless $count % 2;
					print TEXOUT " \n\n " if $count % 2;
				} else {
					print TEXOUT " \\hfill  " unless $count == 5;
					print TEXOUT " \n\n " if $count == 5;
					undef $count if $count == 5;
				}

				$count++;
			}

			print TEXOUT "\\makebox[.8\\textwidth]{\\hrulefill}\n" if $count % 2;
			print TEXOUT "\\newpage \n";

		} # end of foreach panel

	} # end of foreach event

	print TEXOUT "\\end{center}\n";
	print TEXOUT "\\end{document} \n";
	close TEXOUT;

	$garbage = `cd $Tab::file_root/tmp; $Tab::pdflatex_path $filename.tex;`;
#	$garbage = `rm -f $filename.tex $filename.log $filename.dvi $filename.aux` unless $debug;
	$m->redirect("$Tab::url_prefix/tmp/postings-$timeslot_id-$event_id-$tourn_id-".$session->id.".pdf");

</%init>
