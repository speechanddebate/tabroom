<%args>
	$pre      => undef
	$damn     => undef
	$room_id  => undef
	$panel_id => undef
</%args>
<%init>

	$m->abort unless $panel_id;

	my $room = Tab::Room->retrieve($room_id);
	my $panel = Tab::Panel->retrieve($panel_id);

	$m->abort unless $panel;

	$panel->room($room_id);
	$panel->update;

	my $event = $panel->round->event;

	my $err;

	if ($event->type eq "congress" and $room_id > 0) { 

		Tab::Panel->set_sql( by_letter => "select distinct panel.* from panel, round where round.event = ? and round.id = panel.round and panel.letter = ? ");

		my @panels = Tab::Panel->search_by_letter( $event->id, $panel->letter );

		foreach my $opanel (@panels) { 
		
			Tab::Panel->set_sql( conflict => 
				"select distinct panel.* from panel, round, timeslot, timeslot t2
				where panel.id != ?
				and panel.room = ?
				and panel.round = round.id
				and round.timeslot = timeslot.id
				and timeslot.start < t2.end
				and timeslot.end > t2.start
				and t2.id = ? 
			");

			my @conflict = Tab::Panel->search_conflict( $opanel->id, $room_id, $opanel->round->timeslot->id);

			if (@conflict &! $damn) { 
				$err .= "Could not save room for this chamber in ".$opanel->round->realname." as the room is already in use for another round.<br /><br />";
			} else { 
				$opanel->room($room_id);
				$opanel->update;
			}
		}
	}


	$m->redirect("show.mhtml?round_id=".$panel->round->id."&err=$err") if $pre;
	$m->redirect("panel_view.mhtml?panel_id=$panel_id&err=$err");


</%init>
