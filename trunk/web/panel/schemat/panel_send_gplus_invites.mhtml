<%args>
	$tourn
	$panel_id
	$account
</%args>
<%init>

	my $panel = Tab::Panel->retrieve($panel_id);
	$m->redirect("/setup/tourn/main.mhtml?err=Could%20not%20retrieve%20requested%20panel.") unless $panel;

	# Email invites to panel attendees
	my @judges = $m->comp("/funclib/panel_judges.mas", panel => $panel);
	my $count = scalar(@judges);
	my @entries = $m->comp("/funclib/panel_entries.mas", panel => $panel);
	$count += scalar(@entries);

	# Make sure everyone has a G+ account before we go, and we have an admin
	my $gplus = 1;
	my $hangout_admin = 0;
	foreach my $judge (@judges) {
		$gplus = 0 if (!$judge->account->googleplus);
		$hangout_admin = 1 if ($judge->hangout_admin);
	}
	foreach my $entry (@entries) {
		foreach my $student ($entry->students) {
			$gplus = 0 if (!$student->account->googleplus);
		}
	}
	if (!$gplus) {
		$m->redirect("panel_view.mhtml?panel_id=$panel_id&err=Could%20not%20send%20invites%20as%20not%20all%20attendees%20have%20Google%2B%20accounts.%20%3Ca+href%3D'%2Fregister%2Freports%2Fno_googleplus.mhtml'%3EList%20of%20offenders%3C%2Fa%3E");
	}
	if (!$hangout_admin) {
		$m->redirect("panel_view.mhtml?panel_id=$panel_id&err=One%20judge%20must%20be%20set%20as%20Hangout%20Admin%20before%20invites%20can%20be%20sent.");
	}

	# Create Hangout if needed
	if (!$panel->room_ext_id) {
		if ($panel->room == -1) {
			# Google Hangout room selected

			# Create a new Hangout event
			my $section = "Debate";
			$section = "Section" if $panel->round->event->type eq "speech";
			$section = "Chamber" if $panel->round->event->type eq "congress";
			# Build attendee list for Hangout invitations
			my @attendees = ();
			foreach my $judge (@judges) {
				push @attendees, {
					email => $judge->account->googleplus,
					displayName => $judge->first.' '.$judge->last,
					responseStatus => 'accepted'
				};
			}
			foreach my $entry (@entries) {
				foreach my $student ($entry->students) {
					push @attendees, {
						email => $student->account->googleplus,
						displayName => $student->first.' '.$student->last,
						responseStatus => 'accepted'
					};
				}
			}
			
			my $event = Tab::GoogleCalendar->createEvent({
				title => $panel->round->realname.' '.$section.' '.$panel->letter.' of '.$panel->round->event->abbr,
				description => $tourn->name,
				start => $panel->round->timeslot->start->set_time_zone('UTC').'Z',
				end => $panel->round->timeslot->end->set_time_zone('UTC').'Z',
				attendees => \@attendees
			});
			
			$m->redirect("panel_view.mhtml?panel_id=$panel_id&err=Could%20not%20create%20Hangout.") unless $event;

			# Save details of Event to panel
			$panel->g_event($event->{'id'});
			$panel->room_ext_id($event->{'hangout_link'});
			$panel->invites_sent(0);
			$panel->update();
		} elsif ($panel->room == -2) {
			# Hangout On Air room needs to be set manually
			$m->redirect("panel_view.mhtml?panel_id=$panel_id&err=Could%20not%20send%20invites%20as%20Hangout%20On%20Air%20URL%20has%20not%20been%20entered.");
		}
	}

	# First email judges 
	foreach my $judge (@judges) {
		my $message = "You have been invited to participate in an online debate:

Event Date: ".$panel->round->timeslot->start->set_time_zone($judge->account->tz)."

Join The Event:\n".$panel->room_ext_id;
		$message .= ($panel->room_ext_id =~ /\?/)? '&' : '?';
		$message .= 'gid=223741802818';
		$message .= '&gd=admin:true' if ($judge->hangout_admin);
		$m->comp( "/funclib/send_email.mas", from => $account, raw => $judge->account->googleplus, cc => $judge->account, subject => 'Panel invitation', body => $message );
	}

	# Then email competitors
	foreach my $entry (@entries) {
		foreach my $student ($entry->students) {
			my $message = "You have been invited to participate in an online debate:

Event Date: ".$panel->round->timeslot->start->set_time_zone($student->account->tz)."

Join The Event:\n".$panel->room_ext_id;
			$message .= ($panel->room_ext_id =~ /\?/)? '&' : '?';
			$message .= 'gid=223741802818';
			$m->comp( "/funclib/send_email.mas", from => $account, raw => $student->account->googleplus, cc => $student->account, subject => 'Panel invitation', body => $message );
		}
	}

	# Record sending
	$panel->invites_sent(1);
	$panel->update;

	$m->redirect("panel_view.mhtml?panel_id=$panel_id&msg=$count%20invitations%20emailed");

</%init>
