<%args>
	$round
	$debug       => undef
	$message     => undef
	$incl_motion => undef
	$only        => undef
</%args>
<%init>

	$message = substr($message, 0, 50);
	my $event = $round->event;
	my $tourn = $event->tourn;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
	
	Tab::Panel->columns(TEMP => "roomname");

	Tab::Panel->set_sql( schemat => "
		select panel.*, room.name as roomname
		from panel, room
		where panel.round = ? 
		and panel.room = room.id
		order by panel.letter");

	Tab::Panel->set_sql( schemat_roomless => "
		select panel.*, \"None\" as roomname
		from panel
		where panel.round = ? 
		and panel.room = 0
		order by panel.letter");

	my @panels = Tab::Panel->search_schemat($round->id);
	push (@panels, Tab::Panel->search_schemat_roomless($round->id));

	my @entries = $m->comp("/funclib/round_entries.mas", round => $round);
	my @ballots = $m->comp("/funclib/round_ballots.mas", round => $round);
	my @judges = $m->comp("/funclib/round_judges.mas", round => $round);


	my %entries_by_panel = ();

	foreach my $entry (@entries) { 
		next if $entry->dropped;
		next if $entry->dq;
		push (@{$entries_by_panel{$entry->panelid}}, $entry);
	}

	my %ballots_by_entry = ();
	my %panel_undone = ();
	my %is_chair = ();

	foreach my $ballot (@ballots) { 
		push (@{$ballots_by_entry{$ballot->entry->id}}, $ballot) if $ballot->entry;
		$panel_undone{$ballot->panel->id}++ unless $ballot->audit;
		$is_chair{$ballot->judge->id}++ if $ballot->chair;
	}

	my %judges_by_panel = ();
	foreach my $panel (@panels) { 
		foreach my $judge ($m->comp('/funclib/panel_judges.mas', panel => $panel)) {
			push @{$judges_by_panel{$panel->id}}, $judge;
		}
	}

	@panels = sort {$a->roomname cmp $b->roomname} @panels;
	@panels = sort {$panel_undone{$b->id} <=> $panel_undone{$a->id}} @panels;

	foreach my $panel (@panels) { 
	
		my $own_txt;

		foreach my $pc (@{$entries_by_panel{$panel->id}}) { 
			$own_txt .= "\nOG " if $pc->speaks == 1;
			$own_txt .= "\nOO " if $pc->speaks == 2;
			$own_txt .= "\nCG " if $pc->speaks == 3;
			$own_txt .= "\nCO " if $pc->speaks == 4;
			$own_txt .= $pc->code." ";
		}

		$own_txt .= "\n";
		
		foreach my $judge (@{$judges_by_panel{$panel->id}}) {
			$own_txt .= "CHAIR " if $is_chair{$judge->id};
			$own_txt .= "PANELIST " unless $is_chair{$judge->id};
			$own_txt .= $judge->last.", ".$judge->first." ";
		}

		$own_txt .= "\n";

		my $start = $round->start_time;
		$start = $round->timeslot->start unless $start;
		$start->set_time_zone($tz);

		$own_txt .= "\nIn ".$panel->roomname."";
		$own_txt .= "\nStart: ".Tab::nicetime($start)." ".Tab::tzname($tz);
		$own_txt .= "\n\nMotion: ".$round->setting("motion") if $incl_motion;
		$own_txt .= "\n\n$message" if $message;

		unless ($only eq "judges") { 

			foreach my $pc (@{$entries_by_panel{$panel->id}}) { 

				foreach my $follower ($m->comp("/funclib/entry_follower.mas", entry => $pc)) { 
				
					$m->comp( "/funclib/send_notify.mas", from => 'live@tabroom.com', 
						to => $follower, 
						subject => $round->realname." ".$pc->code, 
						body => $own_txt 
					);
				}

			}
		}

		unless ($only eq "entries") { 

			foreach my $judge (@{$judges_by_panel{$panel->id}}) {

				my $start = $round->start_time;
				$start = $round->timeslot->start unless $start;
				$start->set_time_zone($tz);

				my $own_txt = $judge->last." is ";
				$own_txt .= "CHAIR " if $is_chair{$judge->id};
				$own_txt .= "WING " unless $is_chair{$judge->id};
				$own_txt .= " in ".$panel->roomname."\n";
				$own_txt .= "\nStart: ".Tab::nicetime($start)." ".Tab::tzname($tz)."\n";

				foreach my $pc (@{$entries_by_panel{$panel->id}}) { 
					$own_txt .= "\nOG " if $pc->speaks == 1;
					$own_txt .= "\nOO " if $pc->speaks == 2;
					$own_txt .= "\nCG " if $pc->speaks == 3;
					$own_txt .= "\nCO " if $pc->speaks == 4;
					$own_txt .= $pc->code." ";
				}

				$own_txt .= "\n\nMotion: ".$round->setting("motion") if $incl_motion;
				$own_txt .= "\n\n$message" if $message;
				
				foreach my $follower ($m->comp("/funclib/judge_follower.mas", judge => $judge)) { 

					$m->comp( "/funclib/send_notify.mas", from => 'live@tabroom.com', 
						to => $follower, 
						subject => $round->realname." ".$judge->last, 
						body => $own_txt 
					);
			
				}

			}
		}

	}

</%init>
