<%args>
	$tourn
	$account
	$event_id
	$round_id => undef
	$max_mut => undef
	$max_pref => undef
</%args>
<%init>

	my $debug=1;
	use Data::Dumper;
	use Math::Round;
	use Time::HiRes qw( time );
	my $start_processing = time(); my $end;
	my $switch;
	
	unless ($max_mut) { $max_mut = 30; }
	unless ($max_pref) { $max_pref = 50; }
	
	my $tourn_access = Tab::TournAdmin->search( account => $account->id, tourn => $tourn->id)->first;
	my $entry_only++ if $tourn_access && $tourn_access->entry_only;
	undef $entry_only if $account->site_admin;

	my $event;
	$event = Tab::Event->retrieve($event_id) if $event_id;
	
	unless ($round_id) {
		#find last un-completed round
	}
	
	my $round = Tab::Round->retrieve($round_id);
		
	my $timeslot = $round->timeslot;
	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
	my $group = $event->judge_group;
	
	#make calculations by event that are necessary
	#mark the event strings, and create a hash of judging rounds left for all judges in all events
	my @all_events = Tab::Event->search( judge_group=>$group->id );
	my $open_label; my $jv_label; my $novice_label;
	my %judge_use_hash;
	foreach my $temp_event (@all_events) {

		$open_label=$temp_event->name;

		if ( $temp_event->setting('level') eq "jv") { $jv_label=$temp_event->name; }
		if ( $temp_event->setting('level') eq "novice") { $novice_label=$temp_event->name; }				

		my $temp_round = Tab::Round->search( event => $temp_event->id, timeslot => $timeslot )->first;
		my $judge_hash = $m->comp("/funclib/judge_use.mas", round_id => $temp_round->id) if $temp_round;

		foreach my $key (keys %{$judge_hash}) {
			$judge_use_hash{$key} = ${$judge_hash}{$key}{'left'};
		}
	}
	
	my $total_rds_needed=0;
	my %rounds_to_finish;
	my %rounds_avail;
	my %teams_by_event;
		
</%init>

	<div class="main">

	<h2>JUDGING SITUATION BY EVENT</h2>
	<h5>Called for round <% $round->name %> (<% $round->label %>)</h5>
<%perl>

	foreach my $current_event (@all_events) {

		my $current_rd = Tab::Round->search( event => $current_event->id, timeslot => $timeslot )->first;
		next unless $current_rd;

		my ($paired_panels_past, $assigned_judges_past, $needed_panels_past, 
			$needed_judges_past, $paired_panels_current, $assigned_judges_current, 
			$needed_panels_current, $needed_judges_current, $paired_panels_future, 
			$assigned_judges_future, $needed_panels_future, $needed_judges_future, 
			$burned_current, $burned_total, $lost_rounds_current, $lost_rounds_total, 
			$event_rds_left) = $m->comp("/funclib/judge_oblig_count.mas", event_id => $current_event->id, current_rd_id => $current_rd->id );

		$total_rds_needed = $total_rds_needed + $needed_judges_future + $needed_judges_current;
		
		$rounds_to_finish{$current_event->setting('level')}=($needed_judges_future + $needed_judges_current);
		$rounds_avail{$current_event->setting('level')}=$event_rds_left;

</%perl>

		<h4><% $current_event->name %> judging status</h4>		

		<table>
		
			<tr class="yellowrow">

				<th>
					Time point
				</th>

				<th>
					Panels still needed
				</th>

				<th>
					Panels already paired
				</th>

				<th>
					Judges already placed
				</th>

				<th>
					Judges still needed
				</th>

				<th>
					Judging rounds lost
				</th>

				<th>
					Judges burned
				</th>

				<th>
					Judging rounds left
				</th>

			</tr>
			
			<tr class="<% ($switch++ % 2) ? "oddrow" : "evenrow" %>">

				<td>Past</td>
				<td><% $needed_panels_past %></td>
				<td><% $paired_panels_past %></td>
				<td><% $assigned_judges_past %></td>	
				<td><% $needed_judges_past %></td>				
				<td>-</td>							
				<td>-</td>							
				<td>-</td>															
			</tr>

			<tr class="<% ($switch++ % 2) ? "oddrow" : "evenrow" %>">
				<td>Current</td>
				<td><% $needed_panels_current %></td>
				<td><% $paired_panels_current %></td>
				<td><% $assigned_judges_current %></td>								
				<td><% $needed_judges_current %></td>
				<td><% $burned_current %></td>								
				<td><% $lost_rounds_current %></td>								
				<td>-</td>											
			</tr>

			<tr class="<% ($switch++ % 2) ? "oddrow" : "evenrow" %>">
				<td>Future</td>
				<td><% $needed_panels_future %></td>
				<td><% $paired_panels_future %></td>
				<td><% $assigned_judges_future %></td>								
				<td><% $needed_judges_future %></td>
				<td>-</td>								
				<td>-</td>							
				<td><% $event_rds_left %></td>												
			</tr>

		</table>
		<br>
		
%		}

	<h2>analysis</h2>
	
		<table>
			<tr class="yellowrow">
				<th>Division</th>
				<th>Need to Finish</th>
				<th>Plus Higher</th>
				<th>Available</th>
				<th>Net</th>
			</tr>
			<tr class="<% ($switch++ % 2) ? "oddrow" : "evenrow" %>">
				<td><% $open_label %></open>
				<td><% $rounds_to_finish{'open'} %></td>
				<td>0</td>
				<td><% $rounds_avail{'open'} %></td>
%				my $bgcolor="";
%				if ( $rounds_avail{'open'}-$rounds_to_finish{'open'} < 1 ) { $bgcolor="red"; }
				<td bgcolor=<% $bgcolor %>><% $rounds_avail{'open'}-$rounds_to_finish{'open'} %></td>
			</tr>	
			
%			if ($jv_label) {			
			<tr class="<% ($switch++ % 2) ? "oddrow" : "evenrow" %>">
				<td><% $jv_label %></open>
				<td><% $rounds_to_finish{'jv'} %></td>
				<td><% $rounds_to_finish{'open'} + $rounds_to_finish{'jv'}  %></td>
				<td><% $rounds_avail{'jv'} %></td>
%				my $bgcolor="";
%				if ( $rounds_avail{'jv'}-$rounds_to_finish{'jv'}-$rounds_to_finish{'open'} < 1 ) { $bgcolor="red"; }
				<td bgcolor=<% $bgcolor %>><% $rounds_avail{'jv'}-$rounds_to_finish{'jv'}-$rounds_to_finish{'open'} %></td>
			</tr>	
%			}

%			if ($novice_label) {			
			<tr class="<% ($switch++ % 2) ? "oddrow" : "evenrow" %>">
				<td><% $novice_label %></open>
				<td><% $rounds_to_finish{'novice'} %></td>
				<td><% $rounds_to_finish{'jv'} + $rounds_to_finish{'open'} + $rounds_to_finish{'novice'}  %></td>
				<td><% $rounds_avail{'novice'} %></td>
%				my $bgcolor="";
%				if ( $rounds_avail{'novice'}-$rounds_to_finish{'jv'}-$rounds_to_finish{'open'}-$rounds_to_finish{'novice'} < 1 ) { $bgcolor="red"; }
				<td bgcolor=<% $bgcolor %>><% $rounds_avail{'novice'}-$rounds_to_finish{'jv'}-$rounds_to_finish{'open'}-$rounds_to_finish{'novice'} %></td>
			</tr>	
%			}			

		</table>
	
	<br>Total rounds of judging needed to finish tournament across all events:<% $total_rds_needed %>

%	my $rounds_judging_left;
%	foreach my $key ( keys %judge_use_hash ) {
%		$rounds_judging_left += $judge_use_hash{$key};
%	}

	<br>Total rounds of judging left across all events:<% $rounds_judging_left %>
  	<br>Net balance:<% $rounds_judging_left - $total_rds_needed %>
  	<br><br>
	<strong>Interpretation Guide:</strong>
	These figures do not account for judge preference or circumstances where an event has a large number of entries from
	a single school, making judges from that school hard to place.  Thus, they may <strong>OVER-estimate</strong> how well you are doing on judges.  These figures are not meaningful for the last preliminary round.<Br>
	If you have any event with more rounds required than rounds of judging available
	you are in deep trouble, and it's time to ask judges for extra rounds.  If you have 1-6 net rounds, it is very 
	tight and you want to try very hard not to lose any rounds.  If you have 7-12 net rounds you are safe but should be constantly
	vigilant.  If you have more than that, you are in such good shpae that there may be a setup error.<br>
	
	</div>
	
	<div class="menu">

		<h4>Navigation</h4>
		<a href="show.mhtml?round_id=<% $round->id %>" class="yellow block">
			Back to Pairings
		</a>
<!--		
		<form action="manual_mpj_switch.mhtml" method="post">
		<span class="evenrownohover block">
			Max Mut:
			<input type="text" size="5" class="thin" name="max_mut" value=<% $max_mut %>><br>
			Max Pref:
			<input type="text" size="5" class="thin" name="max_pref" value=<% $max_pref %> ><br>
			<input type="submit" value="Go" class="thin padno">
		</span>
		</form>
-->

	</div>
