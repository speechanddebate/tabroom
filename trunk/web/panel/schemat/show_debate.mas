<%args> 
	$round
	$admin
	$sort_by      => "letter"
	$seeds        => undef
	$nowarn       => undef
	$showbye      => undef
	$entered      => undef
	$show_regions => undef
</%args>
<%init>

	my $event = $round->event;
	my $round_type = $round->type;
	my $anonymize if $event->setting("anonymize");
	my $round_robin++ if $event->setting("round_robin");
	my $tab_ratings = $event->judge_group->setting("tab_ratings");
	my $diversity = $event->judge_group->setting("track_diversity");
	my $use_commitment = $event->judge_group->setting("rounds_per"); #is the burden method rds per entry? >0 => yes

	my $judge_use_ref = $m->comp("/funclib/judge_use.mas", round_id => $round->id);			
	my %judge_use = %{$judge_use_ref};

	my $flighted = $round->flighted;
	my $published = $round->published;

	my $rounds_per++ if $event->judge_group->setting("rounds_per");

	my $aff_string = $event->setting("aff_label");
	my $neg_string = $event->setting("neg_label");
	$aff_string = "Aff" unless $aff_string;
	$neg_string = "Neg" unless $neg_string;
		
	my $last_round_name = $round->name - 1;
	my $last_round = Tab::Round->search( event => $round->event->id, name => $last_round_name)->first;

	my $show_records;

	foreach my $other_round ($event->rounds) { 
		next unless $other_round->name < $round->name;
		next if $other_round->setting("ignore_results");
		$show_records++;
	}

	undef $show_records if $round->type eq "elim";
	undef $show_records if $round->type eq "final";
	undef $show_records if $round_robin;

	my %entry_byes = $m->comp("/funclib/entry_byes.mas", event => $round->event, round => $last_round) if $showbye;
	my %entry_wins = $m->comp("/funclib/entry_wins.mas", event => $round->event, round => $last_round);
	my %entry_losses = $m->comp("/funclib/entry_losses.mas", event => $round->event, round => $last_round);

	my $tourn = $event->tourn;
	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $no_side_constraints++ if $event->setting('no_side_constraints');
	my $sidelocks++ if ($round->type eq "elim" || $round->type eq "final") && not defined $no_side_constraints;

	Tab::Panel->columns(TEMP => "roomname");

	Tab::Panel->set_sql( schemat => "
		select panel.*, room.name as roomname
		from panel
		left join room on room.id = panel.room
		where panel.round = ? 
		order by panel.started, panel.letter");

	my @panels = Tab::Panel->search_schemat($round->id);

	my @entries = $m->comp("/funclib/round_entries.mas", round => $round);

	my @judges = $m->comp("/funclib/round_judges.mas", round => $round);

	my @ballots = $m->comp("/funclib/round_ballots.mas", round => $round);

	my %entry_code = map {$_->id => $_->code} $round->event->entries;

	my @seeds = $m->comp("/funclib/event_entry_settings.mas", event => $event, tag => "pairing_seed");
	my %entry_seed = map {$_->entry->id => $_->value} @seeds;

	my %pod_name;
	my %entry_pod;

	if ($round_robin) { 
		foreach my $entry (@entries) { 
			$entry_pod{$entry} = $entry->setting("pod");
			next if $pod_name{$entry_pod{$entry}};
			$pod_name{$entry_pod{$entry}} = $event->setting("pod_".$entry_pod{$entry});
			$pod_name{$entry_pod{$entry}} = "Pod ".$entry_pod{$entry} unless $pod_name{$entry_pod{$entry}};
		}
	}

	my %judge_by_id = map {$_->id => $_} @judges;

	my %pref_record = ();

	my $prefs = $event->judge_group->setting("prefs");

	if ($prefs eq "ndt") { 
		$prefs = "ordinals";
		$prefs = "tiers" if $round->type eq "final";
		$prefs = "tiers" if $round->type eq "elim";
		$prefs = "ordinals" if $round->name == 9;
	}

	if ($prefs eq "ordinals") {
		%pref_record = $m->comp("/funclib/round_ordinals.mas", round => $round);
	} elsif ($prefs && $prefs ne "none") { 
		%pref_record = $m->comp("/funclib/round_mjp.mas", round => $round);
	}

	my %entries_by_panel = ();

	foreach my $entry (@entries) { 
		push (@{$entries_by_panel{$entry->panelid}}, $entry);
	}

	my %panel_done = ();
	my %panel_scored = ();
	my %ballots_by_entry = ();
	my %ballots_by_judge = ();
	my %judges_by_panel = ();
	
	my %panel_count = ();

	my @values = $m->comp("/funclib/round_values.mas", round => $round);
	my %ballot_has_values = map {$_->ballot => 1} @values;

	foreach my $ballot (@ballots) { 

		push (@{$ballots_by_entry{$ballot->entry->id}}, $ballot) if $ballot->entry;
		push (@{$ballots_by_judge{$ballot->judge->id}}, $ballot) if $ballot->judge;

		$panel_scored{$ballot->panel->id}++ if $ballot_has_values{$ballot};
		$panel_done{$ballot->panel->id}++ if $ballot->audit;
		$panel_count{$ballot->panel->id}++;

		push (@{$judges_by_panel{$ballot->panel->id}}, $judge_by_id{$ballot->judge->id}) if $judge_by_id{$ballot->judge->id};

	}

	foreach my $ballot (@ballots) { 
		my %seen = (); 
		@{$judges_by_panel{$ballot->panel->id}} = grep { ! $seen{$_} ++ } @{$judges_by_panel{$ballot->panel->id}};
	}

	my %panel_started = map {$_->id => $_->started} @panels;

	@panels = sort {$a->flight cmp $b->flight} @panels;
	@panels = sort {$a->roomname cmp $b->roomname} @panels;

	@panels = sort {$b->bracket <=> $a->bracket } @panels;
	@panels = sort {$a->bracket <=> $b->bracket } @panels if $round->type eq "elim";

	@panels = sort {$panel_started{$a} cmp $panel_started{$b} } @panels;
	@panels = sort {$panel_scored{$a->id} <=> $panel_scored{$b->id}} @panels;
	@panels = sort {$panel_done{$a->id} <=> $panel_done{$b->id}} @panels;

	Tab::Entry->set_sql( duplicated =>  "
		select distinct entry.id
		from entry, ballot, panel, ballot b2, panel p2
		where entry.id = ballot.entry
		and entry.id = b2.entry
		and ballot.panel = panel.id
		and b2.id = p2.id
		and p2.round = ?
		and p2.round = panel.round
		and panel.id != p2.id
	" );

	Tab::Entry->set_sql( missing =>  " 
		select distinct entry.id
		from entry
		where entry.dropped = 0
		and entry.waitlist = 0
		
		and entry.event = ? 
		and not exists ( 
			select distinct ballot.id
			from ballot, panel
			where ballot.panel = panel.id
			and ballot.entry = entry.id
			and panel.round = ?
		)
	" );

	my @duplicated = Tab::Entry->search_duplicated( $round->id ) unless ($round->type eq "elim" || $round->type eq "final");
	my @missing = Tab::Entry->search_missing( $event->id, $round->id ) unless ($round->type eq "elim" || $round->type eq "final");

	my $sides_not_set++ if $event->setting("sides_not_set") == $round->id;
	undef $sides_not_set if $round->type eq "elim" || $round->type eq "final";
	undef $sides_not_set if $round->published;

	my $hit_warn = $m->comp("/funclib/entry_hit_before_check.mas", round_id => $round->id) 
		unless $round->type eq "elim" || $round->type eq "final";  

	my $judge_warn = $m->comp("/funclib/judge_twice_check.mas", round_id => $round->id); 

</%init>

	<& /funclib/tablesorter.mas, table => "sortme" &>

% 	unless ($nowarn || $entered) { 

%		if ( @missing || $hit_warn || $judge_warn ) {

			<div class="oddrow centeralign">

				<h2 class="redtext">Drat!</h2>

%				if (@missing) { 

					<h5><% scalar @missing %> entries left off pairing.</h5>

%					foreach my $miss (@missing) { 
						<a class="dkred nowrap padmuchmore third" title="<% $entry_code{$miss} %>" href="/panel/manipulate/debate_round_edit.mhtml?entry_id=<%$miss%>&round_id=<% $round->id %>">Schedule <% $entry_code{$miss} %></a>
%					}

%				}

				<div class="block">
					<% $hit_warn %>
				</div>

				<div class="block">
					<% $judge_warn %>
				</div>

			</div>
%		}

%	}

%	if ($sides_not_set) { 
		<div class="lirdrow full centeralign">
			<h5>Warning: You have not set sides for this debate:</h5>
			<a class="dkblue martop padtop padbottom limit2" href="/panel/manipulate/snake_sides.mas?from=autopair&round_id=<% $round->id %>">Snake Sides</a>
		</div>
%	}

%	if (@duplicated) { 
		<div class="dkred block centeralign">
			<% scalar @duplicated %> entries scheduled in more than one debate.  
%			foreach my $miss (@duplicated) { 
				<% $entry_code{$miss} %> <% $miss %>
%			}
			How'd you pull that off?  Please re-pair round.
		</div>
%	}

	<table class="narrow" id="sortme"> 

		<thead>
		
			<tr class="yellowrow smallish">

%				if ($round->type eq "highlow" || $round->type eq "highhigh" || $round->type eq "elim") { 
					<th class="smaller centeralign" title="Bracket">
						B
					</th>
%				}  elsif ($round_robin) { 
					<th>
						<% $round_robin ? "Pod" : ""%>
					</td>
%				}

%				if ($round->flighted > 1) { 
					<th class="smaller centeralign" title="Flight">
						F
					</th>
%				}
				
				<th class="centeralign">
					Room
				</th>

				<th class="centeralign">
					<% $sidelocks ? "" : $no_side_constraints ? "Flip" :  $aff_string %>
				</th>

				<th class="centeralign">
					<% $sidelocks ? "" : $no_side_constraints ? "Flip" : $neg_string %>
				</th>

%				unless ($round_type eq "elim" || $round_type eq "final") { 
					<th class="centeralign smaller" title="Numbers preceding name are obligation in the left/used/owed format.  Numbers following name are ratings.">
						Use
					</th>
%				}

				<th class="centeralign">
					Judge<% $round->setting("num_judges") > 1 ? "s" : "" %>
				</th>

				<th>
				</th>
			</tr>

		</thead>

		<tbody>

<%perl>

		my $switch = 1;

		foreach my $panel (@panels) { 

			my $locked_aff =  $m->comp("/funclib/round_elim_dueaff.mas", panel => $panel) if $sidelocks;

			my $panel_byed;

			next unless $entries_by_panel{$panel->id} && @{$entries_by_panel{$panel->id}};

			my $aff;
			my $neg;

			foreach my $entry (@{$entries_by_panel{$panel->id}}) { 
				
				if ($ballots_by_entry{$entry->id}) {
					$aff = $entry if ${$ballots_by_entry{$entry->id}}[0]->side == "1";
					$neg = $entry if ${$ballots_by_entry{$entry->id}}[0]->side == "2";
				}
			}

			foreach my $entry (@{$entries_by_panel{$panel->id}}) { 
				if ($ballots_by_entry{$entry->id}) { 

					unless ($aff) {
						$aff = $entry unless $neg && $entry->id == $neg->id;
					} else { 
						$neg = $entry unless $aff && $entry->id == $aff->id;
					}
				}
			}

			my $result_string; 
			my %used_judge;

			my $winners_string;
			my $winners_win;

			my $no_judges++;

			if ($judges_by_panel{$panel->id}) { 

				foreach my $judge (sort {$a->last cmp $b->last} @{$judges_by_panel{$panel->id}}) {

					undef $no_judges;
					
					my $winner;
					my $class;
					my $title;

					next if $used_judge{$judge}++;

					foreach my $ballot (@{$ballots_by_judge{$judge->id}}) {

						next unless $ballot->panel->id == $panel->id;

						next if $used_judge{"B-".$ballot->id};

						if ($ballot->bye > 0 || $ballot->noshow > 0) { 
							$class = "greentext";
							$winner .= 'A' if $ballot->side == 1;
							$winner .= 'N' if $ballot->side == 2;
							$winner .= 'B ' if $ballot->bye;
							$winner .= 'F ' if $ballot->noshow;
						} else { 

							$used_judge{"B-".$ballot->id}++;

						}

						my $win = $ballot->values( tag => 'ballot', value => 1 )->first;

						$class = "greentext" if $win;
						$winner = 'A' if $win && $aff && $ballot->entry->id == $aff->id;
						$winner = 'N' if $win && $ballot->entry && $neg && $ballot->entry->id == $neg->id;
						if ($win && $ballot->audit < 1) { 
							$class = "dkred";
							$winner = '&frac12;';
							$title = "\n This ballot has been entered but not confirmed  \n\n    Click the room and then View/Edit Results\n              right to confirm the ballot\n\n";
						}

					}

					if ($winner) { 
						$winners_string .= ' <div style="padding-top: 1.25px !important;" class="schemheight centeralign '.$class.'"  title="'.$title.'">';
						$winners_string .= $winner." ";
						$winners_string .= ' </div> ';
						$winners_win++;
					} else {
						$winners_string .= ' <div class="schemheight centeralign '.$class.'"  title="'.$title.'">';
						$winners_string .= "&nbsp;";
						$winners_string .= ' </div> ';
					}

				}

				$result_string .= $winners_string if $winners_win;
			}

			if ($panel->bye || $no_judges) { 

				my $winners_string = ' <div style="padding-top: 1px !important;" class="schemheight centeralign greentext"> ';

				foreach my $entry (@{$entries_by_panel{$panel->id}}) { 

					foreach my $ballot (@{$ballots_by_entry{$entry}}) { 

						my $win = $ballot->values( tag => 'ballot', value => 1 )->first;

						if ($ballot->side ==1) { 
							$winners_string .= "AB " if $win || $ballot->bye;
							$winners_string .= "AF " if $ballot->noshow;
						} else { 
							$winners_string .= "NB " if $win || $ballot->bye;
							$winners_string .= "NF " if $ballot->noshow;
						}

						$panel_byed++ if $ballot->noshow || $ballot->bye;
					}

				}

				$winners_string .= "BYE" if $panel->bye;

				$winners_string .= ' </div> ';

				$result_string .= $winners_string;

			}

			if (not defined $result_string || ($panel->started && not defined $winners_win)) {
				my $result_string if not defined $result_string;
				$result_string .= Tab::shortertime($panel->started->set_time_zone($tz)) if $panel->started;
			}
</%perl>

			<tr>

%				if ($round->type eq "highlow" || $round->type eq "highhigh" || $round->type eq "elim") { 
					<td class="smaller <% $round_robin ? "" : "smallcell" %> centeralign padno">
						<% $panel->bracket ? $panel->bracket : "0" %>
					</td>
%				}  elsif ($round_robin && $aff) { 
					<td class="smaller centeralign padless">
						<% $pod_name{$entry_pod{$aff}} %>
					</td>
%				}
			
%				if ($round->flighted > 1) { 
					<td class="centeralign smaller padno">
						<% $panel->flight %>
					</td>	
%				}

				<td class="smaller">
					<span class="hidden"><% $panel->roomname %><% $panel->flight %></span>
					<a class="white <% $panel->roomname ? "" : "bold redtext" %>" title="<% $panel->roomname ? $panel->roomname : "None" %>" href="panel_view.mhtml?panel_id=<% $panel->id %>">
						<% ($panel->bye) || $panel_byed ? "BYE" :  $panel->roomname ? $panel->roomname : "None" %>
					</a>

				</td>

%				if ($panel->bye) { 

%					my @byes = @{$entries_by_panel{$panel->id}};

					<td class="padless" colspan="2">

%						foreach my $bye (@byes) { 

							<span class="half">

%							unless ($entered) { 

%								my $warn = "This round is published and you are about to move an entry.   This seems suspicious.  Are you sure?" if $published;
								<a class="nospace smaller white padless" <& "/funclib/confirm.mas", warn => $warn &> href="/panel/manipulate/entry_edit.mhtml?round_id=<% $round->id %>&entry_id=<% $bye->id %>">

%							} else { 
								<a class="nospace smaller white padlesss" href="panel_view.mhtml?panel_id=<% $panel->id %>">
%							}
%								if ($show_records) { 
									<span class="sixth nowrap padright nospace">
										<% $entry_wins{$bye->id} ? $entry_wins{$bye->id} : 0 %>-<% $entry_losses{$bye->id} ? $entry_losses{$bye->id} : 0 %>
									</span>
									<span class="nospace fivesixths" title="<% ($anonymize) ? $bye->id : $bye->code %>">
										<% $seeds ? $entry_seed{$aff}." - " : "" %>
										<% $showbye && $entry_byes{$bye->id} ? $entry_byes{$bye->id}."B- " : "" %>
										<% ($anonymize) ? $bye->id : $bye->code %>
									</span>
%								} else {
									<% $seeds ? $entry_seed{$aff}." - " : "" %>
									<% $showbye && $entry_byes{$bye->id} ? $entry_byes{$bye->id}."B- " : "" %>
									<% ($anonymize) ? $bye->id : $bye->code %>
%								}
							</a>

						</span>
%					} 

					</td>

%				} else { 

					<td class="smaller padless <% $aff && $aff->pullup ? "liblrow" : "" %> ">
%						if ($aff) { 

%							unless ($entered) { 
%								my $warn = "This round is published and you are about to move an entry.   This seems suspicious.  Are you sure?" if $published;
								<a class="nospace smaller white padless" <& "/funclib/confirm.mas", warn => $warn &> href="/panel/manipulate/entry_edit.mhtml?round_id=<% $round->id %>&entry_id=<% $aff->id %>">
%							} else { 
								<a class="nospace smaller white padless" href="panel_view.mhtml?panel_id=<% $panel->id %>">
%							}

%								if ($show_records) { 
									<span class="sixth nowrap padright">
										<% $entry_wins{$aff->id} ? $entry_wins{$aff->id} : 0 %>-<% $entry_losses{$aff->id} ? $entry_losses{$aff->id} : 0 %>
									</span>

									<span class="fivesixths" title="<% ($anonymize) ? $aff->id : $aff->name %> <% $aff->pullup ? " (Pullup) " : "" %>">
%								} else { 
									<span class="full" title="<% ($anonymize) ? $aff->id : $aff->name %> <% $aff->pullup ? " (Pullup) " : "" %>">
%								} 

									<% $show_regions ? '<span class="fifth nospace">'.$aff->school->region->code."</span>" : "" %>
									<% $seeds ? $entry_seed{$aff}." - " : "" %>
									<% $showbye && $entry_byes{$aff->id} ? $entry_byes{$aff->id}."B- " : "" %>
									<% ($anonymize) ? $aff->id : $aff->code %>
								</span>
							</a>
%						} 
					</td>

%					if ($neg) { 
						<td class="smaller padless <% $neg && $neg->pullup ? "liblrow" : "" %> ">
							

%							unless ($entered) { 
%								my $warn = "This round is published and you are about to move an entry.   This seems suspicious.  Are you sure?" if $published;
								<a class="nospace smaller white padless" <& "/funclib/confirm.mas", warn => $warn &> href="/panel/manipulate/entry_edit.mhtml?round_id=<% $round->id %>&entry_id=<% $neg->id %>">
%							} else { 
								<a class="nospace smaller white padless" href="panel_view.mhtml?panel_id=<% $panel->id %>">
%							}

%								if ($show_records) { 
									<span class="sixth nowrap padright">
										<% $entry_wins{$neg->id} ? $entry_wins{$neg->id} : 0 %>-<% $entry_losses{$neg->id} ? $entry_losses{$neg->id} : 0 %>
									</span>
									<span class="fivesixth" title="<% ($anonymize) ? $neg->id : $neg->name %> <% $neg->pullup ? " (Pullup) " : "" %>">
%								} else { 
									<span class="full" title="<% ($anonymize) ? $neg->id : $neg->name %> <% $neg->pullup ? " (Pullup) " : "" %>">
%								} 
									<% $show_regions ? '<span class="fifth nospace">'.$neg->school->region->code."</span>" : "" %>
									<% $seeds ? $entry_seed{$neg}."-" : "" %>
									<% $showbye && $entry_byes{$neg->id} ? $entry_byes{$neg->id}."B- " : "" %>
									<% ($anonymize) ? $neg->id : $neg->code %>
								</span>
							</a>
						</td>

%					} else { 

						<td>
						</td>
%					}

%				}

%				my $notfirst;
%				my %used;
%				my $judge_paneled++ if (scalar @{$judges_by_panel{$panel->id}} > 1);

%				unless ($round_type eq "elim" || $round_type eq "final") { 
					<td class="smaller centeralign nospace padtopless <% $judge_paneled ? "top" : "" %>">

%						if ($judges_by_panel{$panel->id}) { 

%							foreach my $judge (sort {$a->last cmp $b->last} @{$judges_by_panel{$panel->id}}) {

%								next unless $judge;
%								next if $used{$judge->id}++;

								<a class="full white nowrap schemheight">
%									if ($rounds_per) { 
										<% $judge_use{$judge->id}{'left'} %>/<%($judge_use{$judge->id}{'judged_already'} + $judge_use{$judge->id}{'will_judge'}) %>/<%$judge_use{$judge->id}{'oblig'}%>
%									} else { 
										<%($judge_use{$judge->id}{'judged_already'} + $judge_use{$judge->id}{'will_judge'}) %>
%									}
								</a>
%							}
%						}

					</td>
%				}

				<td class="smaller nospace padright padtopless">
%					undef $notfirst;
%					undef %used;

%					unless ( ($judges_by_panel{$panel->id} && @{$judges_by_panel{$panel->id}}) || ($panel->bye) || ($panel_byed)) { 
						<a class="dkred button padless marno nowrap" href="panel_view.mhtml?panel_id=<% $panel->id %>">
							NO JUDGE 
						</a>
%					}

%					if ($judges_by_panel{$panel->id}) { 
%						foreach my $judge (sort {$a->last cmp $b->last} @{$judges_by_panel{$panel->id}}) {

%							next unless $judge;
%							next if $used{$judge->id}++;

							<a class="hover full white schemheight"  href="<% $flighted > 0 ? "flight_judge_swap.mhtml?round_id=".$round->id."&judge_id=".$judge->id : "panel_view.mhtml?panel_id=".$panel->id %>">

								<span class="hidden">
									<% $judge->last.", ".$judge->first %>
								</span>

								<span class="<% $prefs eq "ordinals" ? "threefifth" : "threequarters"%> padleft nospace nowrap">
									<% $diversity && $judge->setting("diverse") ? "D" : ""  %>
									<% ($judge->chair) ? "*" : "" %><% $judge->last.", ".$judge->first %>
								</span>
								
								<span class="<% $prefs eq "ordinals" ? "twofifth" : "quarter"%> nospace tiny rightalign right">
									<% $pref_record{$judge->id."-".$panel->id}{"display"} %>
									<% $tab_ratings ? $judge->tab_rating : "" %>
									<% $show_regions && $judge->school && $judge->school->region ? $judge->school->region->code : "" %>
								</span>
							</a>
% 						}

%						if ($prefs && scalar @{$judges_by_panel{$panel->id}} > 1) { 

							<span class="<% $prefs eq "ordinals" ? "threefifth" : "threequarter"%> padleft nospace nowrap">
								Diff: <% $pref_record{$panel->id}{"diff"} %>
							</span>

							<span class="<% $prefs eq "ordinals" ? "twofifth" : "quarter"%> nospace tiny right">
								<span class="half nospace rightalign">
									<% $aff ? $pref_record{$panel->id}{$aff->id} : "" %>
								</span>
								<span class="twofifth nospace rightalign right">
									<% $panel && $neg ? $pref_record{$panel->id}{$neg->id} : "" %>
								</span>
							</span>
%	 					}

% 					}


				</td>

			
				<th class="smaller centeralign nospace <% $judge_paneled || $round_type eq "final" || $round_type eq "elim" ? "top" :"" %> padtopless">

%					if ($panel->bye || $panel_byed || $panel_done{$panel->id} == $panel_count{$panel->id}) { 

						<span class="hidden">3</span>
						<% $result_string %> 

%					} elsif ($panel_scored{$panel->id}) { 

						<span class="hidden">2</span>
						<% $result_string %> 

%					} elsif ($panel->started) { 

						<span class="hidden">1</span>

%						if ($sidelocks) { 
							<span class="tightline block z">
								<% $sidelocks ? $locked_aff ? 'Side Lock' : 'Flip' : "" %>
							</span>
%						}
						<% Tab::shortertime($panel->started->set_time_zone($tz)) %>

%					} else { 

						<span class="hidden">0</span>

						<span class="tightline block a">
							<% $sidelocks ? $locked_aff ? 'Side Lock' : 'Flip' : "" %>
						</span>
%					}  
				</th>
			
			</tr>

%		}

		</tbody>

	</table>

%	undef %entries_by_panel;

