<%args>
	$event_id
</%args>
<%init>

	my $debug=0;	
	
	use Time::HiRes qw( time );
	my $start = time(); 
	my $event = Tab::Event->retrieve( $event_id );
	my @rounds = Tab::Round->search( event => $event_id );

	#Load avg pref for each judge
	my %judge_pref;

	#Pull all judges in the group
	my @judges = Tab::Judge->search( judge_group => $event->judge_group);
	my @event_conflict_judges = $m->comp("/funclib/event_strike_judges.mas", event => $event);

	#delete those with an event conflict
	for ( my $index = $#judges; $index >= 0; --$index ) {
		foreach my $strike (@event_conflict_judges) {
			if ( $strike == $judges[$index]['id'] ) { splice @judges, $index, 1; }
		}
	}
		
	#pull ratings
	foreach my $judge (@judges) {
		$judge_pref{$judge->id} = $m->comp("/funclib/judge_avg_rating.mas", judge => $judge, avg_field => "percentile" );
		print $judge->id." ".$judge->first." ".$judge->last." ".$judge_pref{$judge->id}."<br>" if $debug;
	}


</%init>

<div class="main">

%	my %pref_tot; 
%	my $pref_count; 
%	my %off_tot; 
%	my $off_count;

	<h2>Ordinal MJP Diagnostics for <% $event->name %></h2>
	<h5>How am I doing, and how many people are going to yell at me?</h5>
	<br>
					
	<& /funclib/tablesorter.mas, table => "sortme" &>

	<table cellpadding="0" cellspacing="1" width="100%" id="sortme"> 

		<thead>
		
		<tr class="yellowrow">

			<th class="smallish">
				Round
			</th>
			<th class="smallish">
				Avg pref
			</th>
			<th class="smallish">
				Worst
			</th>
			<th class="smallish">
				Avg mut
			</th>
			<th class="smallish">
				Worst mut
			</th>
			<th class="smallish">
				Lost
			</th>
			<th class="smallish">
				Avg Pref Left
			</th>

%		for ( my $i=1; $i <= 10; $i++) {

			<th class="smallish">
				Top <% $i*10 %>%
			</th>

%		}

		</tr>

		</thead>

		<tbody>

<%perl>

		my $switch = 1;

		my @cohort; 
		$cohort[1]="Over"; 
		$cohort[2]="at break"; 
		$cohort[3]="out";

		foreach my $round (@rounds) {

			#use info
			my ($paired_panels_past, $assigned_judges_past, $needed_panels_past, 
				$needed_judges_past, $paired_panels_current, $assigned_judges_current, 
				$needed_panels_current, $needed_judges_current, $paired_panels_future, 
				$assigned_judges_future, $needed_panels_future, $needed_judges_future, 
				$burned_current, $burned_total, $lost_rounds_current, $lost_rounds_total, 
				$event_rds_left) = $m->comp("/funclib/judge_oblig_count.mas", event_id => $event->id, current_rd_id => $round->id );

			#pref info
			my ($avg_pref, $avg_mut, $worst_pref, $worst_mut, $deciles) = $m->comp("/funclib/mjp_diagnostics.mas", round => $round );
			my %deciles = %{$deciles};
			my @avg_pref = @{$avg_pref}; 
			my @worst_pref = @{$worst_pref}; 
			my @avg_mut = @{$avg_mut}; 
			my @worst_mut = @{$worst_mut};

			#remaining pref calculation
			my $tot_pref; 
			my $tot_rds;
			my $judge_hash = $m->comp("/funclib/judge_use.mas", round_id => $round->id);
			$m->print("<br>Round ".$round->name."<br><br><table>") if $debug;
			$m->print("<tr><td>JudgeID</td><td>Name</td><td>Oblig</td><td>Already</td>") if $debug;
			$m->print("<td>Left</td><td>Pref</td><td>TotRds</td><td>TotPref</td></tr>") if $debug;

			foreach my $judge (@judges) {

				my $key = $judge->id;

				my $dummy = ${$judge_hash}{$key}{'oblig'} - ${$judge_hash}{$key}{'judged_already'};
				$dummy = ${$judge_hash}{$key}{'future_possible'} if $dummy > ${$judge_hash}{$key}{'future_possible'};
				$dummy = 0 if $dummy < 0 ;

				$tot_rds += $dummy;
				$tot_pref += ( $dummy * $judge_pref{$key} ) ;
				$m->print("<tr><td>$key</td><td>".$judge->first." ".$judge->last."</td>") if $debug;
				$m->print("<td>".${$judge_hash}{$key}{'oblig'}."</td><td>".${$judge_hash}{$key}{'judged_already'}."</td>") if $debug;
				$m->print("<td>$dummy</td><td>".$judge_pref{$key}."</td><td>$tot_rds</td><td>$tot_pref</td></tr>") if $debug;

			}

			print "</table>" if $debug;
</%perl>

%			$tot_rds = 1 if $tot_rds == 0;
		
%			for (1 .. 3 ) { 

%				if ( $avg_pref[$i] || $i == 1 ) {

					<tr>

						<td>
%							if ($round->label) {				
								<% $round->label %>&nbsp;<% $cohort[$i] %>
%							} else {
								<% $round->name %>&nbsp;<% $cohort[$i] %>
%							}	
						</td>

						<td>
							<% sprintf("%.1f", $avg_pref[$i]) %> 
						</td>

						<td>
							<% sprintf("%.1f", $worst_pref[$i]) %>
						</td>

						<td>
							<% sprintf("%.1f", $avg_mut[$i]) %>
						</td>

						<td>
							<% sprintf("%.1f", $worst_mut[$i]) %>
						</td>

						<td>	
							<% $lost_rounds_current %>
						</td>

						<td>    
							<% sprintf("%.1f", $tot_pref/$tot_rds) %>
						</td>

%						for (1 .. 10 ) { 
							<td>
								<% $deciles{$i}{$x} %>
							</td>
%						}

					</tr>
%				}
%			}
%		}

		</tbody>
		
	</table>

</div>


<div class="menu">

	Use back button to return to previous screen or:
	
	<a class="yellow block" href="/panel/schemat/show.mhtml?event_id=<% $event->id %>">
		Back to <% $event->name %>
	</a>
	<p>
% 	my $end = time();
% 	print "Total load time:  "; 
%	printf("%.2f\n", $end - $start); 
%	print "<br>";
	</p>

</div>

