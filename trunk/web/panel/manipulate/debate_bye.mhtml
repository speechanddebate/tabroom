<%args>
	$round_id
	$entry_id
</%args>
<%init>

	my $round = Tab::Round->retrieve($round_id);
	my $entry = Tab::Entry->retrieve($entry_id);

	my @existing_ballots = $m->comp("/funclib/entry_ballots.mas", entry => $entry, round => $round);

	foreach my $ballot (@existing_ballots) { 
		foreach my $value ($ballot->values) { 
			$value->delete;
		}
		$ballot->delete;
	}

	my @existing = $round->panels;

	@existing = sort {$b->letter <=> $a->letter} @existing;
	@existing = sort {$b->letter cmp $a->letter} @existing if $round->event->setting("panel_labels") eq "letters";

	my $last = shift @existing;
	my $letter = $last->letter if $last;

	if ($letter eq "Z") { 
		$letter = "AA";
	} elsif ($letter eq "AZ") { 
		$letter = "BA";
	} elsif ($letter eq "BZ") {
		$letter = "CA";
	} elsif ($letter eq "CZ") {
		$letter = "DA";
	} elsif ($letter eq "DZ") {
		$letter = "EA";
	} elsif ($letter eq "EZ") {
		$letter = "FA";
	} elsif (not defined $letter) { 
		$letter = "A";
	} else { 
		$letter++;
	}   

	my $panel = Tab::Panel->create({ 
		round  => $round_id,
		letter => $letter,
		bye    => 1,
		flight => 1
	});

	Tab::Ballot->create({
		panel => $panel->id,
		entry => $entry_id,
		bye   => 1,
		audit => 1,
		judge => 0
	});

	my $msg = $entry->code." was given a bye.";

	$m->redirect("debate_round_edit.mhtml?round_id=$round_id&entry_id=$entry_id&msg=$msg");

</%init>
