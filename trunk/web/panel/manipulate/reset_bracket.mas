<%args>
	$round_id
	$winsonly => undef
	$fromjava => undef
</%args>
<%perl>

	my $round = Tab::Round->retrieve($round_id);

	#load in the entries		

	my ($entries_hash_ref, $precluded_hash_ref) = $m->comp("/funclib/make_pairing_hash.mas", round_id => $round->id);			
	my %entries = %{$entries_hash_ref};

	foreach my $key ( keys %entries ) {
		if ($key) {
			my $entry = Tab::Entry->retrieve($key) ;
			my $bracket = $entries{$key}{'wins'} ;
			if ( $winsonly == "false" ) {
				if ( $entries{$entries{$key}{'opponent'}}{'wins'} > $bracket ) { $bracket = $entries{$entries{$key}{'opponent'}}{'wins'} ; }
			}
			$entry->placement($bracket) ;
			if ( not $entries{$key}{'wins'} and $bracket == 0 ) { $entry->placement( 0 ) ; }
			$entry->update() ;
		}
	}	

	my $event = $round->event;
	$event->setting("bracket_set_for", $round_id);

	my $oddround = 1 if int($round->name) % 2;
	$oddround = 1 if $event->setting("no_side_constraints");
	$event->setting("sides_not_set", $round_id) if $oddround;

	if ($fromjava) { 	
		$m->redirect("manual_powermatch.mhtml?round_id=$round_id"); 
	} else {
		$m->redirect("manual_powermatch.mhtml?round_id=$round_id");
	}
	
</%perl>
