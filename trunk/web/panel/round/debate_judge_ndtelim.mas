<%args>
    $round_id
</%args>
<%init>

    #OK, I know this is ugly, but please don't prettify it...it only has to work for like 3 rounds at 1 tournament for now
    #and I kinda like all that info spitting on to the screen so we can see what it's doing.  If your aesthetic sense is
    #thoroughly offended, I can put them in an html table....but hardly worth the effort for 3 rounds
    
    my $round = Tab::Round->retrieve($round_id);
    my $debug = 1;

    #Only works with a judge pool
    #NOTE TO SELF: Change the loop to 11
    
#LOAD JUDGES

    #my $judge_hash = $m->comp("/funclib/judge_use.mas", round_id => $round->id);
    #my @judge_pool = Tab::PoolJudge->search( pool => $round->pool);

    my @judges = $m->comp("/funclib/pool_judges.mas", pool => $round->pool);
    my %judge_info;
    foreach my $judge (@judges) {
        $judge_info{$judge}{'fits'} = 0;
        $judge_info{$judge}{'assigned'} = 0;
    }
    
#LOAD PANNELS
    my @panels = Tab::Panel->search( round => $round_id );
    my %panel_info;
    my $ctr;
    foreach my $panel (@panels) {
         $panel_info{$panel}{'fits'} = 0;
         $panel_info{$panel}{'balance'} = 0;
         $panel_info{$panel}{'total_fits'} = 0;
         my @entries = $m->comp("/funclib/panel_entries.mas", panel => $panel);
            $ctr=0;
            foreach my $entry (@entries) {
                $ctr++;
                $panel_info{$panel->id}{'team1'} = $entry->id if $ctr==1;
                $panel_info{$panel->id}{'team2'} = $entry->id if $ctr==2;
            }
        #print "Panel ID:".$panel." team1=".$panel_info{$panel}{'team1'}." team2=".$panel_info{$panel}{'team2'}."<br>" if $debug;
    }
    
#LOAD PREFS
my %prefs = $m->comp("/funclib/event_judgeprefs.mas", event => $round->event, ndt_type => "palczewski", style => "deadsexy" );
#print "prefs for Bricker with Michigan is ".$prefs{"736519-271959"}."<br>";

#PERFORM LOOP for 11 judges

    for (my $i=1; $i <= 11; $i++) {

        print "<BR>Performing first pass loop on iteration $i<br>";
        #CALCULATE NUMBER OF FITS FOR JUDGE AND PANEL
        #clear current values
        foreach my $judge (@judges) {
            $judge_info{$judge}{'fits'} = 0;
        }
        foreach my $panel (@panels) {
            $panel_info{$panel}{'fits'} = 0;
        }
        
        foreach my $judge (@judges) {
            if ($judge_info{$judge}{'assigned'} == 0) {
                foreach my $panel (@panels) {
                    #print "prefs for team=".$panel_info{$panel}{'team1'}." and judge=".$judge->last." is ".$prefs{$panel_info{$panel}{'team1'}."-".$judge}."<br>" if $judge->id == 271959;
                    if ( $prefs{$panel_info{$panel}{'team1'}."-".$judge} == 1 && $prefs{$panel_info{$panel}{'team2'}."-".$judge} == 1 ) {
                        $panel_info{$panel}{'fits'} ++; 
                        $judge_info{$judge}{'fits'} ++;
                        $panel_info{$panel}{'total_fits'}++ if $i==1;
                        $judge_info{$judge}{'total_fits'}++ if $i==1;
                    }
                }
            }
            #print $judge->first." ".$judge->last." fits:".$judge_info{$judge}{'fits'}."<br>" if $debug;
        }
        
        #foreach my $panel (@panels) {
        #    print $panel." has this many fits:".$panel_info{$panel}{'fits'}."<br>" if $debug;
        #}
        
        foreach my $panel ( sort { $panel_info{$a}->{'fits'} <=> $panel_info{$b}->{'fits'} } keys %panel_info ) {
            #print "Panel:".$panel." fits=".$panel_info{$panel}{'fits'}."<br>";
            foreach my $judge ( sort { $judge_info{$a}->{'fits'} <=> $judge_info{$b}->{'fits'} } keys %judge_info ) {
                #print "Judge ".$judge." firts=".$judge_info{$judge}{'fits'}."<br>";
                if ( $judge_info{$judge}{'assigned'} == 0 ) {
                    if ( $prefs{$panel_info{$panel}{'team1'}."-".$judge} == 1 && $prefs{$panel_info{$panel}{'team2'}."-".$judge} == 1 ) {
                        $judge_info{$judge}{'assigned'} = $panel;
                        $panel_info{$panel}{'assigned'}++;
                        print "Placed judge $judge who is a mutual 1 on ".$judge_info{$judge}{'fits'}." panels on panel $panel which has ".$panel_info{$panel}{'fits'}." un-placed judges who fit as mutual 1s<br>";
                        last;
                    }
                }
            }
        }
        
    } #ends 1-11 loop
    
    #random diagnositic
    print "<br>first pass diagnostics:";
    $ctr=0;
    foreach my $judge (@judges) {
        if ( $judge_info{$judge}{'assigned'} == 0 ) {
            foreach my $panel (@panels ) {
                if ( $prefs{$panel_info{$panel}{'team1'}."-".$judge} == 1 && $prefs{$panel_info{$panel}{'team2'}."-".$judge} == 1 ) {
                    print $judge->first." ".$judge->last." is unassigned and fits on panel $panel which has this many assigned:".$panel_info{$panel}{'assigned'}."<br>";
                    $ctr++;
                }
            }
        }
    }
    print "Theare is a total of $ctr unassigned judges who are mutual 1 judges somewhere<br>";
    
    print "<br>SECOND PASS: Doing double-swaps<br>";
    foreach my $panel ( sort { $panel_info{$a}->{'assigned'} <=> $panel_info{$b}->{'assigned'} } keys %panel_info ) {
        #only do if don't already have 11 judges
        print "testing panel $panel -- any changes reported below<br>";
        if ( $panel_info{$panel}{'assigned'}<11 ) {
            #print "$panel has fewer than 11 judges now<br>";
            foreach my $judge (@judges) {
                #only do if current panel has fewer judges than the panel the judge is currently assigned to
                my $panel2 = $judge_info{$judge}{'assigned'};
                #print "considering judge $judge currently on panel $panel2<br>";
                if ( $panel_info{$panel}{'assigned'} <= $panel_info{$panel2}{'assigned'} && $panel != $panel2 ) {
                    #print "testing to move ".$judge->first." ".$judge->last." on $panel2 with ".$panel_info{$panel2}{'assigned'}." judges on it; hoping to move them to ".$panel." which has ".$panel_info{$panel}{'assigned'}." judges assigned<br>";
                    #only do if it's a mutual 1
                    if ( $prefs{$panel_info{$panel}{'team1'}."-".$judge} == 1 && $prefs{$panel_info{$panel}{'team2'}."-".$judge} == 1 ) {
                        #print "judge ".$judge->first." ".$judge->last." is a mutual 1 for panel $panel, currently on panel $panel2<br>";
                        #now loop unplaced judges and see if there's a mutual 1 to be put on the new panel
                        foreach my $judge2 (@judges) {
                            if ( $judge_info{$judge2}{'assigned'} == 0 ) {
                                #does unused judge fit on the second panel?
                                #print "trying to replace ".$judge->first." ".$judge->last." with ".$judge2->first." ".$judge2->last." who is unassigned; they're a ".$prefs{$panel_info{$panel2}{'team1'}."-".$judge2}."/".$prefs{$panel_info{$panel2}{'team2'}."-".$judge2}." on $panel2<br>";
                                if ( $prefs{$panel_info{$panel2}{'team1'}."-".$judge2} == 1 && $prefs{$panel_info{$panel2}{'team2'}."-".$judge2} == 1 ) {
                                    $judge_info{$judge}{'assigned'} = $panel;
                                    $judge_info{$judge2}{'assigned'} = $panel2;
                                    $panel_info{$panel}{'assigned'}++;
                                    print "Made a double-switch!<br>";
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    print "<br>THIRD PASS -- filling out panels<br>";
    @judges = sort { $judge_info{$a}->{'total_fits'} <=> $judge_info{$b}->{'total_fits'} } @judges;
    my $bal; 
    for (my $i=1; $i <= 11; $i++) {
        print "<br>now on step $i<br>";
        foreach my $panel (@panels) {
            if ( $panel_info{$panel}{'assigned'} < $i ) {
                $bal=0;
                foreach my $judge (@judges) {
                    if ($judge_info{$judge}{'assigned'} == $panel ) {
                        $bal += $prefs{$panel_info{$panel}{'team1'}."-".$judge};
                        $bal -= $prefs{$panel_info{$panel}{'team2'}."-".$judge};
                    }
                }
                print "panel balance is $bal for $panel<br>";
                foreach my $judge (@judges) {
                    #if it's the last judge on a balanced panel, just place the judge and be done
                    if ( $i == 11 && $bal == 0) {
                        if ($judge_info{$judge}{'assigned'} == 0 && $prefs{$panel_info{$panel}{'team1'}."-".$judge} == 2 && $prefs{$panel_info{$panel}{'team2'}."-".$judge} == 2 ) {
                            $judge_info{$judge}{'assigned'} = $panel;
                            $panel_info{$panel}{'assigned'}++;
                            print "on pass $i now and Adding ".$judge->first." ".$judge->last." to panel $panel as ".$prefs{$panel_info{$panel}{'team1'}."-".$judge}."/".$prefs{$panel_info{$panel}{'team2'}."-".$judge}."<br>";
                            last;
                        }
                    } else {
                        #otherwise, place according to need
                        if ($bal > 0 && $judge_info{$judge}{'assigned'} == 0 && $prefs{$panel_info{$panel}{'team2'}."-".$judge} == 2 && $prefs{$panel_info{$panel}{'team1'}."-".$judge} == 1 ) {
                            $judge_info{$judge}{'assigned'} = $panel;
                            $panel_info{$panel}{'assigned'}++;
                            print "Adding ".$judge->first." ".$judge->last." to panel $panel as ".$prefs{$panel_info{$panel}{'team1'}."-".$judge}."/".$prefs{$panel_info{$panel}{'team2'}."-".$judge}."<br>";
                            last;
                        }
                        if ($bal < 0 && $judge_info{$judge}{'assigned'} == 0 && $prefs{$panel_info{$panel}{'team1'}."-".$judge} == 2 && $prefs{$panel_info{$panel}{'team2'}."-".$judge} == 1 ) {
                            $judge_info{$judge}{'assigned'} = $panel;
                            $panel_info{$panel}{'assigned'}++;
                            print "Adding ".$judge->first." ".$judge->last." to panel $panel as ".$prefs{$panel_info{$panel}{'team1'}."-".$judge}."/".$prefs{$panel_info{$panel}{'team2'}."-".$judge}."<br>";
                            last;
                        }
                        if ($bal == 0 && $judge_info{$judge}{'assigned'} == 0 && ($prefs{$panel_info{$panel}{'team1'}."-".$judge} == 1 || $prefs{$panel_info{$panel}{'team2'}."-".$judge} == 1) && ($prefs{$panel_info{$panel}{'team1'}."-".$judge} != 3 && $prefs{$panel_info{$panel}{'team2'}."-".$judge} != 3) ) {
                            $judge_info{$judge}{'assigned'} = $panel;
                            $panel_info{$panel}{'assigned'}++;
                            print "Adding ".$judge->first." ".$judge->last." to panel $panel as ".$prefs{$panel_info{$panel}{'team1'}."-".$judge}."/".$prefs{$panel_info{$panel}{'team2'}."-".$judge}."<br>";
                            last;
                        }
                    }
                }
            }
        }
    }

    #now save it
    
    #clear existing assignments
    $m->comp("/funclib/round_clear_judges.mas", round => $round, nobye => 1);
    
    #save 'em
    foreach my $panel (@panels) { 
        next if $panel->bye;
        foreach my $judge (@judges) {
            if ($judge_info{$judge}{'assigned'} == $panel ) {
                $m->comp("/funclib/panel_judgeadd.mas", panel => $panel, judge_id => $judge);
            }    
        }
    }

    print "<br>Judge placements saved<br><br>";
    
</%init>

<table border="1">
    <tr >
        <th>Panel</th>
        <th>Max Mutual 1</th>
        <th>Judges</th>
        <th>Balance</th>
        <th>Mutual 1s</th>
        <th>Mutual 2s</th>
        <th>cross-hatches</th>
        <th>Status</th>
    </tr>
%   foreach my $panel (@panels) {
        <tr style="outline: thin solid">
        <td><% $panel %></td>
        <td><% $panel_info{$panel}{'total_fits'} %></td>
%       $ctr=0; $bal=0; my $mut1=0; my $mut2=0; my $Xhat=0;
        <td>
%       foreach my $judge (@judges) {
%           if ( $judge_info{$judge}{'assigned'} == $panel ) {
%               print " ".$judge->first." ".$judge->last." as ".$prefs{$panel_info{$panel}{'team1'}."-".$judge}."/".$prefs{$panel_info{$panel}{'team2'}."-".$judge};
%               $bal += $prefs{$panel_info{$panel}{'team1'}."-".$judge};
%               $bal -= $prefs{$panel_info{$panel}{'team2'}."-".$judge};
%               $ctr++;
%               if ( $prefs{$panel_info{$panel}{'team1'}."-".$judge} == 1 && $prefs{$panel_info{$panel}{'team2'}."-".$judge} == 1 ) { $mut1++; }
%               if ( $prefs{$panel_info{$panel}{'team1'}."-".$judge} == 2 && $prefs{$panel_info{$panel}{'team2'}."-".$judge} == 2 ) { $mut2++; }
%               if ( $prefs{$panel_info{$panel}{'team1'}."-".$judge} != $prefs{$panel_info{$panel}{'team2'}."-".$judge} ) { $Xhat++; }
%           }
%       }
        </td>
        <td><% $bal %></td>
        <td><% $mut1 %></td>
        <td><% $mut2 %></td>
        <td><% $Xhat %></td>
%       if ($ctr == 11 && $bal == 0) { print "<td>Panel OK!</TD>"; } else { print "<td>panel JACKED!!!!!!</td>"; }
        </tr>
%   }
</table>

<a class="dkblue padmuchmore twofifth" href="/panel/schemat/show.mhtml?round_id=<% $round->id %>">
    Return to <% $round->realname %>
</a>
