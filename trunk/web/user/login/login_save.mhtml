<%args> 
	$username   => undef
	$password   => undef
	$tourn_id   => undef
	$session_id => undef
	$url        => undef
</%args>
<%flags>
	inherit => undef
</%flags>
<%init>

	use Tab::NSDA::Login;
	use Digest::MD5 qw(md5_hex);

	my $now = DateTime->now;

	my $shauser;
	my $shakey;
	my $session;
	my $login;
	my $person;

	my $log = $now->mdy('/')." ".$now->hms;

	if ($session_id) { 

		$session = Tab::Session->retrieve($session_id);
		$person = $session->account;
		$shakey = $session->authkey;
		$shauser = $session->userkey;

		$log .= " Login attempt via IDEA cookie by ".$person->email." from ".$ENV{REMOTE_ADDR}."...." if $session->account;

	} else { 

		$log .= " Login attempt by ".$username." from ".$ENV{REMOTE_ADDR}."....";

		$username =~ tr/[A-Z]/[a-z]/;
		$username =~ s/\s+//g;
		$password =~ s/\s+$//g;  #only you can prevent trailing whitespace.

		unless ($username) { 
			my $err = "You must enter an email address or username.  Please try again.";
			Tab::log("Failed: no username entered. $log");
			$m->redirect("/index/index.mhtml?err=$err");
		}

		unless ($password) { 
			my $err = "You must enter a password.  Please try again.";
			Tab::log("Failed: blank password.  $log");
			$m->redirect("/index/index.mhtml?err=$err");
		}

		$login = Tab::Login->search(username => $username)->first;

		unless ($login) { 
			my $err = "Your login and/or password was not correct.  Please try again, or use the Forgot Password link to refresh your password";
			Tab::log("Failed: no such login. $log");
			$m->redirect("/index/index.mhtml?err=$err");
		}
			
		my $db_sha_crypt = $login->sha512;
		my $sha_crypt = crypt($password, $db_sha_crypt) if $db_sha_crypt;

		my $login_ok;

		if ($sha_crypt && ($sha_crypt eq $db_sha_crypt)) { 

			$login_ok++;

		} else { 

			# Try the legacy MD5 encryption.  If it succeeds, convert it to SHA512

			my $db_md5_crypt = $login->password;
			my $md5_crypt = crypt($password, $db_md5_crypt);

			if ($md5_crypt && $md5_crypt eq $db_md5_crypt) { 

				my $salt = $m->comp("/funclib/generate_randomstring.mas");
				my $sha_crypt = crypt($password, '$6$' . $salt);

				$login->sha512($sha_crypt);
				$login->password("");
				$login->update;

				$login_ok++;

			} else {  

				# Check if the login password exists in the NSDA database and
				# has changed.  If so and is correct, re-sync them. 

				if ($login->source eq "nsda") { 

					my $nsda_login = Tab::NSDA::Login->search( username => $username )->first;
					my $nsda_db_password = $nsda_login->password;
					my $nsda_hash = md5_hex($password.$username.$Tab::points_salt);

					if ($nsda_db_password eq $nsda_hash) { 

						# The point system password has changed.  Rehash and
						# cache for a local copy for speed.

						my $salt = $m->comp("/funclib/generate_randomstring.mas");
						my $sha_crypt = crypt($password, '$6$' . $salt);
						$login->sha512($sha_crypt);
						$login->password("");
						$login->update;

						$login_ok++;

					}

				}

			}

		}
					
		if ($login_ok) { 

			$person = $login->person;
			
			# To maintain state, the cookie sha keys are encoded using a random
			# string set by the site.

			my $key = "$Tab::string";
			my $auth = $m->comp("/funclib/generate_randomstring.mas", length => 16);

			$shauser = Digest::SHA::sha1_hex($key, $person->id);
			$shakey = Digest::SHA::sha1_hex($key, $auth);

			$session = Tab::Session->create( { 
				account   => $person->id,
				authkey   => $shakey,
				userkey   => $shauser,
				ip        => $ENV{REMOTE_ADDR},
				timestamp => $now,
			});

		} else { 

			my $err = "Your login and/or password was not correct.  Please try
			again, or use the Forgot Password link to refresh your password";

			Tab::log("Failed: wrong password. $log");
			$m->redirect("/index/index.mhtml?err=$err");

		}

	}	

	# Remove existing sessions to prevent mass logins from one account. 
	my $allowed_sessions = $person->multiple;

	# let ppl use their computer & phone, but not share with the world...
	$allowed_sessions = 3 unless $allowed_sessions;  

	# Admins need more:
	$allowed_sessions = 6 if $person->site_admin;

	# Being Palmer hath its privileges.  If you know enough to change this code
	# go ahead and add yourself.
	$allowed_sessions = 10 if $person->id == 1; 

	foreach my $sess ( sort {$b->id <=> $a->id} $person->sessions) {
		$sess->delete unless $allowed_sessions;
		$allowed_sessions--;
	}

	my $passwordcookie = Apache2::Cookie->new(
		$r,
        -name    => 'Tab-AuthKey',
        -value   => $shakey,
        -expires => '+96h',
        -path    => '/'
        );

	my $tokencookie = Apache2::Cookie->new(
		$r,
        -name    => 'Tab-AuthToken',
        -value   => $shauser,
        -expires => '+96h',
        -path    => '/'
	);

    $tokencookie->bake($r);
    $passwordcookie->bake($r);

	$log .= "....Succeeded.";
	Tab::log("$log");

	unless ($person->email && $person->first && $person->last) { 
		$m->redirect("/user/login/profile.mhtml?idebate=1"); 
	}   

	$login->accesses($login->accesses + 1);
	$login->last_access($now);
	$login->update;

    $m->redirect("http://$url") if $url;
    $m->redirect("/index/register.mhtml?tourn_id=$tourn_id") if $tourn_id;
    $m->redirect("/user/home.mhtml");

</%init>
	
