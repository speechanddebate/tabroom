<%args>
	$account
	$chapter_id => undef
	$student_id => undef
	$email      => undef
</%args>
<%init>

	unless ($chapter_id && ($student_id || $email)) { 
		$m->print("Chapter is $chapter_id And Student is $student_id");
		$m->abort;
	}

	my $chapter = Tab::Chapter->retrieve($chapter_id);
	my $student = Tab::Student->retrieve($student_id);

	unless ($m->comp("/funclib/chapter_admins.mas", chapter => $chapter, admin => $account)) { 
		$m->print("<p>You do not have access to that chapter.  Stop messing around</p>");
		$m->abort;
	}

	$email =~ s/\s+/\n/g;  #whitespace ahoy!

	my ($stud_acc) = Tab::Account->search( email => $email );

	unless ($stud_acc) { 

		my $err = "No idebate account with the email address <br /><br />".$email." <br /><br />was found.  Try again, or create a new student record";
		$m->redirect("student_edit.mhtml?chapter_id=$chapter_id&err=$err");

	}

	my ($exists) = Tab::Student->search( chapter => $chapter->id, account => $stud_acc->id);

	if ($exists) { 

		my $err = $email ." is already on your roster as ".$exists->first." ".$exists->last."\n";
		$m->redirect("student_edit.mhtml?chapter_id=$chapter_id&err=$err");

	}

	if ($student) { 

		$student->account($stud_acc->id);
		$student->update;

	} else { 

		my $now = DateTime->now;
		my $grad_year = $now->year + 4;

		$student = Tab::Student->create({
			account => $stud_acc->id,
			first => $stud_acc->first,
			last => $stud_acc->last,
			gender => $stud_acc->gender,
			chapter => $chapter->id,
			novice => 1,
			grad_year => $grad_year,
			retired => 0
		});

	}

	# Notify the student
	my $body = $account->first." ".$account->last." (".$account->email.") has added you on the Tabroom system to the team roster for ".$chapter->name."\n";

	$body .= "You will now be able to get team emails and notices, and will be eligible to sign up for tournaments through Tabroom at ".$Tab::url_prefix." if your coaches use the self-signup system. \n\n";
	$body .= "If this is in error, you can remove this affilation by logging into your idebate account at ".$Tab::url_prefix."\n\n".
	$body .= "If you need help, contact us at help\@tabroom.com.  Thanks!\n";

	my $subject = "[TabRoom] Added to the ".$chapter->name." team roster";

	$m->comp("/funclib/send_email.mas", from => $account, to => $stud_acc, subject => $subject, body => $body);

	my $msg = "Student ".$student->first." ".$student->last." added to your roster.  The student has been notified by email.";

	$m->redirect("student_edit.mhtml?student_id=".$student->id."&chapter_id=$chapter_id&msg=$msg");

</%init>
