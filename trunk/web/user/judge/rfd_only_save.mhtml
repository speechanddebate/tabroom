<%args>
	$account
	$judge_id  => undef
	$panel_id  => undef
	$rfd       => undef
</%args>
<%init>

	unless ($panel_id && $judge_id) { 
		my $err = "I didn't get both a judge and a ballot record";
		$m->redirect("/user/home.mhtml?err=$err");
	}

	my $panel = Tab::Panel->retrieve($panel_id);
	my $judge = Tab::Judge->retrieve($judge_id);

	$m->abort unless $panel;

	my $round = $panel->round;

	my $wudc++ if $round->event->type eq "wudc";

	unless ($panel && $judge) { 
		my $err = "No ballots found for that judge and that panel.";
		$m->redirect("/user/home.mhtml?err=$err");
	}

	unless ($judge->account->id == $account->id) { 
		my $err = "You are not authorized to enter ballots for that judge.";
		$m->redirect("/user/home.mhtml?err=$err")
	}

	my @ballots = sort {$a->side <=> $b->side} Tab::Ballot->search(  judge => $judge->id, panel => $panel->id );

	unless (@ballots) { 
		my $err = "That judge does not judge in that room.";
		$m->redirect("/user/home.mhtml?err=$err");
	}

	my $tourn = $judge->judge_group->tourn;
	my $type = $round->event->type;

	foreach my $ballot ($panel->ballots( judge => $judge_id)) { 
	
		my $comments = Tab::BallotValue->search( ballot => $ballot->id, tag => "comments")->first;

		my $new_comments = $ARGS{"comments_".$ballot->id};

		if ($comments) { 
			$comments->content($new_comments);
			$comments->update;
		} else { 
			Tab::BallotValue->create({
				ballot   => $ballot->id,
				tag      => "comments",
				content  => $new_comments,
				tiebreak => 5,
				student  => 0
			});
		}

		my $rfd = Tab::BallotValue->search( ballot => $ballot->id, tag => "rfd")->first;

		my $new_rfd = $ARGS{"rfd"};

		if ($rfd) { 
			$rfd->content($new_rfd);
			$rfd->update;
		} else { 

			Tab::BallotValue->create({
				ballot   => $ballot->id,
				tag      => "rfd",
				content  => $new_rfd,
				tiebreak => 4,
				student  => 0
			});
		}
	}

	$m->redirect("rfd_only.mhtml?judge_id=$judge_id&panel_id=".$panel_id."&msg=RFD & Comments saved");

</%init>


