<%args>
	$account
	$entry_id
</%args>
<%init>

	my $now = DateTime->now;

	my $entry = Tab::Entry->retrieve($entry_id);

	my $school = $entry->school;
	my $event = $entry->event;
	my $tourn = $event->tourn;

	my $min = $event->setting("min_entry");
	my $max = $event->setting("max_entry");
	my $codes = $event->setting("code_style");

	my $err;
	my %used_student = ();
	my @students;

	foreach my $step (1 .. $max) { 

		my $student = Tab::Student->retrieve($ARGS{"student_".$step}) if $ARGS{"student_".$step};
		next unless $student;
		next if $used_student{$student->id};
		$used_student{$student->id}++;
		push (@students, $student);

		my $already = Tab::EntryStudent->search( entry => $entry->id, student => $student->id )->first;
		next if $already;

		eval{Tab::EntryStudent->create({  entry => $entry->id, student => $student->id });};

	}
	
	if ($event->setting("ask_for_titles")) {
		$err = "Enter a piece title (and/or ISBN number)" unless $entry->setting("title");
	}

	if ($event->setting('ask_quals') ) {
		$err .= "Please provide qualifying tournament information";
	}

	$err .= "You don't have the minimum students to fill this entry." if scalar @students < $min;

	my $name = $students[0]->first." ".$students[0]->last if scalar @students == 1;
	$name = $students[0]->last." & ".$students[1]->last if scalar @students == 2;

	unless ($name) {

		$name = $school->short_name." ";
		foreach my $student (@students) { 
			$name.= ucfirst substr($student->last, 0, 1);
		}
	}

	$entry->tba("");
	$entry->update;

	$entry->name($name);
	my $code = $m->comp("/funclib/entry_code.mas", entry => $entry);
	$entry->code($code);
	$entry->update;

	my $msg = "Entry ".$entry->name." assigned to a TBA slot.  Code is $code";

	Tab::eventlog("$msg");

	$m->redirect("details.mhtml?school_id=".$school->id."&entry_id=".$entry->id."&err=$err") if $err;
	$m->redirect("students.mhtml?school_id=".$school->id."&event_id=".$event->id."&msg=$msg");

</%init>

