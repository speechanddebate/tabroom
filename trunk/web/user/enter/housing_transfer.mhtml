<%args>
	$account
	$school_id
	$housing_id => undef
	$student_id => undef
	$judge_id   => undef
	$event_id   => undef
	$err        => undef
</%args>
<%init>

	my $housing = Tab::Housing->retrieve($housing_id);
	$m->abort unless $housing;

	my $tourn = $housing->tourn;
	my $school = Tab::School->retrieve($school_id);

	my @days = $m->comp("/funclib/tourn_days.mas", tourn => $tourn, add_one => "aye");

	#Check permissions
	$account->can_alter($school);

	if ($student_id && $judge_id || $student_id && $event_id || $judge_id && $event_id) { 
		$err = "Oh, hey now.  You can only transfer a housing request to an event, a
		judge OR a student, not more than!  Try again, and make sure to pick only one option.";
		$m->redirect("housing_transfer.mhtml?housing_id=$housing_id&school_id=$school_id&err=$err");
	}

	my $old = $housing->student if ($housing->student && $housing->student->id);
	$old = $housing->judge if $housing->judge && $housing->judge->id;

	if ($event_id) {
		
		my @tbas = Tab::Housing->search( tba => 1, school => $school_id, night => $housing->night );

		my $event = Tab::Event->retrieve($event_id);
		my $count = 0;

		foreach my $entry (Tab::Entry->search(event => $event->id, school => $school->id)) { 

			STUDENT:
			foreach my $student ($entry->students) { 

				if (@tbas) { 
				
					# Get rid of existing request if one exists
					my $ex = $student->housing($tourn, $housing->night);
					next STUDENT if $ex;

					my $housing = shift @tbas;

					$housing->student($student->id);
					$housing->judge("");
					$housing->type("student");
					$housing->tba("");
					$housing->update;

					if ($tourn->setting("track_reg_changes")) {

						my $text = "TBA Housing slot transferred to ".$student->first." ".$student->last;

						my $change = Tab::TournChange->create({
							tourn => $tourn->id,
							school => $school->id,
							type => "registration",
							text => $text
						});

					}

					$count++;
				}
			}
		}

		my $msg = "Housing request transferred to $count students in ".$event->abbr;
		$m->redirect("housing.mhtml?school_id=$school_id&msg=$msg");

	}

	if ($student_id) { 

		my $student = Tab::Student->retrieve($student_id);

		# Get rid of existing request if one exists
		my $ex = $student->housing($tourn, $housing->night);
		$ex->delete if $ex;

		$housing->student($student_id);
		$housing->judge("");
		$housing->type("student");
		$housing->tba("");
		$housing->update;

		if ($tourn->setting("track_reg_changes")) {

			my $text = $account->first." ".$account->last." Transferred
			housing from ".$old->first." ".$old->last." to ".$student->first."
			".$student->last if $old;

			$text = "TBA Housing slot transferred" unless $text;

			my $change = Tab::TournChange->create({
       			tourn => $tourn->id,
        		school => $school->id,
				type => "registration",
           		text => $text
        	});

		}

		my $msg = "Housing request transferred to ".$student->first." ".$student->last;
		$m->redirect("housing.mhtml?school_id=$school_id&msg=$msg");

	}

	if ($judge_id) {

		my $judge = Tab::Judge->retrieve($judge_id);

		my $ex = $m->comp("/funclib/judge_housing.mas", judge => $judge, night => $housing->night);
		$ex->delete if $ex;

		$housing->judge($judge_id);
		$housing->student("");
		$housing->tba("");
		$housing->type("judge");
		$housing->update;

		if ($tourn->setting("track_reg_changes")) {

			my $text = " Transferred housing from ".$old->first." ".$old->last." to ".$judge->first." ".$judge->last if $old;
			$text = "Moved TBA housing slot to ".$judge->first." ".$judge->last if $old;

			my $change = Tab::TournChange->create({
       			tourn => $tourn->id,
        		school => $school->id,
				type => "registration",
           		text => $text
        	});

		}

		my $msg = "Housing request transferred to ".$judge->first." ".$judge->last;

		$m->redirect("housing.mhtml?school_id=$school_id&msg=$msg");
	}

	my @students_without_housing;
	my @judges_without_housing;

	STUDENT:
	foreach my $student ($m->comp("/funclib/school_students.mas", school => $school, tourn => $tourn)) { 

		my $hs = $student->housing($tourn, $housing->night);

		if ($hs) { 
			next STUDENT unless $hs->waitlist > 0 && $housing->waitlist < 1;
		}

		push (@students_without_housing, $student);
	}

	JUDGE:
	foreach my $judge ($school->judges) {

		my $hs = $m->comp("/funclib/judge_housing.mas", judge => $judge, night => $housing->night);

		if ($hs) { 
			next JUDGE unless $hs->waitlist > 0 && $housing->waitlist < 1;
		}

		push (@judges_without_housing, $judge);
	}

	my $person = $housing->judge if $housing->type eq "judge";
	$person = $housing->student if $housing->type eq "student";

</%init>

	<h2><% $school->name %> at the <% $tourn->name %></h2>

    <& menu.mas, school => $school, whoami => "housing" &>

	<div class="main">

%	if ($housing->tba) { 
		<h4>Assign a TBA slot</h4>
%	} else { 
		<h4>Transfer <% $person->first." ".$person->last %>'s housing:</h4>

%	}

	<p>Housing for the night of <% Tab::nicedate($housing->night) %>.</p>

	<form action="housing_transfer.mhtml" method="post">
	<input type="hidden" name="housing_id" value="<% $housing->id %>">
	<input type="hidden" name="school_id" value="<% $school->id %>">

	<table cellpadding="7" cellspacing="1" width="100%">

%	my $switch;

%		if (@students_without_housing) { 

			<tr <% ($switch++ % 2) ? "class=\"oddrow\"" : "class=\"evenrow\""%> >

				<th>
					To a Student:
				</th> 
				
				<td> 
					<select name="student_id" class="fixedmed">
						<option value="">Select one:</option>

%						foreach my $student (sort {$a->last cmp $b->last} @students_without_housing) {
							<option value="<% $student->id %>">
								<% $student->last.", ".$student->first %>
							</option>
%						}
					</select>
				</td>

			</tr>

			<tr <% ($switch++ % 2) ? "class=\"oddrow\"" : "class=\"evenrow\""%> >

				<th>
					To all students registered in:
				</th> 
				
				<td> 
					<select name="event_id" class="fixedmed">
						<option value="">Select one:</option>
%						foreach my $event (sort {$a->name cmp $b->name} $tourn->events) { 
							<option value="<% $event->id %>">
								<% $event->name %>
							</option>
%						}
					</select>
				</td>

			</tr>

%		}

%		if (@judges_without_housing) { 

			<tr <% ($switch++ % 2) ? "class=\"oddrow\"" : "class=\"evenrow\""%> >
	
				<th>
					To a judge*
				</td>

				<td>
					<select name="judge_id" class="fixedmed">
						<option value="">Select one:</option>
%						foreach my $judge (sort {$a->last cmp $b->last} @judges_without_housing) {
							<option value="<% $judge->id %>"><% $judge->last." ".$judge->first %></option>
%						}
					</select>
				</td>
			</tr>

%		}

%		unless (@judges_without_housing || @students_without_housing) { 

			<tr>
				<th colspan="2">
					Your entire entry has housing.  You cannot transfer this request.
				</th>
			</tr>

%		} else { 

		<tr class="liblrow">
			<td colspan="2" class="rightalign">
			<input type="submit" value="   Transfer Housing Request   ">
			</form>
		</tr>


		<tr>
			<td style="padding-top: 25px;">
			</td>
		</tr>
	

		<tr class="lirdrow">
			<td colspan="2" style="line-height: 24px; border: 1px solid red;">
				*Remember, typically tournaments only provide housing for judges who are still
				in high school, not adults or college students.  Please consult the tournament's
				invitation before requesting housing for a judge.
			</td>
		</tr>

%		}

	</table>

	</div>

	<div class="menu">
	
		<div class="sidenote">

%		if ($tourn->setting("housing_message")) { 

			<h4>Housing Messages:</h4>

				<p>
					<% $tourn->setting("housing_message") %>
				</p>

%		}
	
		</div>

%		my @tbas = Tab::Entry->search( tba => 1, school => $school->id );
%		my @tba_housing = Tab::Housing->search( tba => 1, school => $school->id );

%		if (@tbas || @tba_housing) { 

			<div class="sidenote">

				<h4>TBA Housing Slots</h4>

%				foreach my $day (@days) { 

%					my @slots = Tab::HousingSlots->search( tourn => $tourn->id, night => $day );
%					next unless @slots;

%					my @tbas = Tab::Housing->search( tba => 1, school => $school->id, night => $day );

					<h5><% scalar @tbas %> <% $day->day_name %> slots</h5>
				
					<div class="smaller evenrow">
						
						<form action="housing_tba.mhtml" method="post">
							<input type="hidden" name="school_id" value="<% $school->id %>">
							<input type="hidden" name="tourn_id" value="<% $tourn->id %>">
							<input type="hidden" name="day" value="<% $day->ymd %>">
							<span class="padmore">
								Request: 
							</span>
							<span class="padmore">
								<input type="number" name="count" min=1 max=999 size="3">
							</span>
							<span class="padmore">
								<input type="submit" value="Go" class="thin">
							</span>
						</form>

					</div>

%					if (@tbas) { 
						<a class="martop dkblue block" href="housing_transfer.mhtml?housing_id=<% $tbas[0]->id %>&school_id=<% $school->id %>">
							Transfer to students
						</a>
%					}
%				}

			</div>

%		}

	</div>
