<%args>
	$entry_id
	$group_id
</%args>
<%init>

	my $now = DateTime->now();
	my $err;

	my $entry = Tab::Entry->retrieve($entry_id);
	my $group = Tab::JudgeGroup->retrieve($group_id);

	Tab::Entry->set_sql(wipe_prefs => " delete from rating where entry = ?");
	Tab::Entry->sql_wipe_prefs->execute($entry->id);

    my @rating_tiers = Tab::RatingTier->search(  judge_group => $group->id, type => "mpj" );

	my @conflicts = $entry->conflicts; 
	my %conflicts_by_id = ();
	foreach (@conflicts) { $conflicts_by_id{$_->judge->id} = $_; }

    my @judges;
	my @all_judges = Tab::Judge->search_where({ active => 1, judge_group => $group->id });

    foreach my $judge (@all_judges) {
        next if $judge->school->id == $entry->school->id;
        next if $conflicts_by_id{$judge->id};
        push (@judges, $judge);
    }

	my $num_judges = scalar @judges;

    my %rating_limit = ();

	foreach my $tier (@rating_tiers) {
        $rating_limit{$rating->id} = ($num_judges * $rating->max / 100);
    }

	my %judges_at_tier = ();

	JUDGE:
	foreach my $judge (@judges) { 
		next unless $ARGS{$judge->id};
		$judges_at_tier{$ARGS{$judge->id}}++;
	}

	my $cumulate++ if $group->setting("cumulate_mjp");

	my $spares;

	foreach my $tier (sort {$b->name <=> $a->name} @rating_tiers) {

		if ($judges_at_tier{$ARGS{$judge->id}} < $tier_limit{$ARGS{$judge->id}}) {
			$spares += $tier_limit{$ARGS{$judge->id}} - $judges_at_tier{$ARGS{$judge->id}};
		}
    }

	foreach my $judge (@judges) { 

		if ($judges_at_tier{$ARGS{$judge->id}} >= $tier_limit{$ARGS{$judge->id}}) {

			if ($spares > 0) { 

				$spares--;

			} else {

				my $tier = Tab::RatingTier->retrieve($ARGS{$judge->id});
				$err = "You had too many judges rated ".$tier->name." <br/>" unless $err;
				$err .= " - ".$judge->first." ".$judge->last." not rated <br />\n";
				next JUDGE;

			}
		}

		$judges_at_tier{$ARGS{$judge->id}}++;

		Tab::Rating->create({
			type => "entry",
			tournament => $group->tournament->id,
			judge => $judge->id,
			entry => $entry->id,
			tier => $ARGS{$judge->id},
			entered => $now
		});

	}	

	my $msg = $entry->team_name."'s ratings saved in ".$group->abbr;

	$m->redirect("/user/tourn/entry/ratings/entry_ratings.mhtml?school_id=".$entry->school->id."&entry_id=".$entry_id."&group_id=".$group->id."&style=entry_ratings&msg=".$msg."&err=".$err);

</%init>
