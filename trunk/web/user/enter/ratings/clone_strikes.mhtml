<%args>
	$school
	$group_id => undef 
	$entry_id => undef
	$clone_id => undef
	$account
</%args>
<%init>

	my $group = Tab::JudgeGroup->retrieve($group_id) if $group_id;
	my $entry = Tab::Entry->retrieve($entry_id) if $entry_id;
	my $clone = Tab::Entry->retrieve($clone_id) if $clone_id;

	$m->abort unless $entry && $clone;
	$m->abort unless $entry->school->id == $clone->school->id;
	my $tourn = $school->tourn;

	use POSIX;
	my $now = DateTime->now;
	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
	my $strike_end = $group->setting("strike_end");
	$strike_end->set_time_zone($tz) if $strike_end;
	my $read_only++ if $strike_end < $now;

	my $strike_start = $group->setting("strike_start");
	$strike_start->set_time_zone($tz) if $strike_start;
	$read_only++ if $strike_start > $now;

	my @entry_strikes = $m->comp("/funclib/entry_strikes.mas", entry => $entry, group => $group) if $entry;

	foreach my $strike (@entry_strikes) { 
		next if $strike->type eq "conflict";
		my $new_strike = $strike->copy;
		$new_strike->entry($clone_id);
		$new_strike->update;
	}

	my $msg = "Strikes copied to ".$clone->code;
	$m->redirect("entry_strikes.mhtml?entry_id=$clone_id&school_id=".$school->id."&style=entry_ratings&group_id=$group_id&msg=$msg");


</%init>
