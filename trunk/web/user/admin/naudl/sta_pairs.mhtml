<%args>
	$startdate
	$enddate
	$circuit_id
</%args>
<%flags>
	inherit => undef
</%flags>
<%init>

	my $start;
	my $end;

	my $now = DateTime->now;

	eval{
		$start = Tab::dateme($startdate);
		$end = Tab::dateme($enddate);
	};

	unless ($start) { 
		$start = $now;
	}

	unless ($end) {
		$end = $start->clone;
		$end->subtract(days => 7);
	}

	# Find the chapters in NAUDL who have competed in that time frame.

	Tab::School->set_sql( naudl_competed => "
		select school.*
		from chapter, school, tourn
		where chapter.naudl = 1
		and chapter.id = school.chapter
		and school.tourn = tourn.id
		and tourn.end > ?
		and tourn.end < ?
	");

	my @schools = Tab::School->search_naudl_competed( 
		DateTime::Format::MySQL->format_datetime($start), 
		DateTime::Format::MySQL->format_datetime($end) 
	);

    my $filename = "NAUDL-STA-$start-$end.csv";

	$r->content_type('application/csv');
	$r->headers_out->{'Content-Disposition'} = "attachment; filename=$filename";
    
	my @entries;

	foreach my $school (@schools) {
		foreach my $entry ($school->entries) { 
			push @entries, $entry;
		}
	}

	$m->print("pairid,member_1,member_2\n");

	my %seen = (); 
	@entries = grep { ! $seen{$_->id} ++ } @entries;

	foreach my $entry (@entries) { 
				
		my $first_team = $m->comp("/funclib/first_entry.mas", entry => $entry);

		if ($first_team == $entry->id) { 

			$m->print("TR".$first_team.",");

			foreach my $student ($entry->students) { 
				$m->print("TR".$student->id.",");
			}

			$m->print("\n");

		}


	}

	$m->abort;


</%init>
