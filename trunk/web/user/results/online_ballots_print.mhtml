<%args>
	$session
	$school_id
</%args>
<%init>

	my $school = Tab::School->retrieve($school_id);
	my $tourn = $school->tourn;

	Tab::Ballot->set_sql( school_ballots => "
		select distinct ballot.*
		from ballot, entry, panel, round
		where entry.school = ? 
		and entry.id = ballot.entry
		and ballot.panel = panel.id
		and panel.round = round.id
		and round.post_results = 2
		order by entry.event, entry.timestamp, round.name
	");

	my @ballots = Tab::Ballot->search_school_ballots($school_id);

    my $now = DateTime->now;    
    $now->set_time_zone($tourn->tz);

    my $name = $tourn->name."-".$school->short_name;
    $name =~ s/[\W_]//g;

    my $filename = "Ballots-$name-".$session->id;
    my $filepath = $Tab::file_root."tmp/".$filename;
    `rm -f $filepath.*`; 
    
    $m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, head => 1, array => 1.6 );

    open (TEXOUT, ">>$filepath.tex");
    
	my $current_entry;

	foreach my $ballot (@ballots) {

		my $panel = $ballot->panel;
		my $judge = $ballot->judge;
		my @values = sort {$a->tag cmp $b->tag} $ballot->ballot_values;
		my @entries = $m->comp("/funclib/panel_entries.mas", panel => $panel);

		my $aff_string = $panel->round->event->setting("aff_string");
		my $neg_string = $panel->round->event->setting("neg_string");
		$aff_string = "Aff" unless $aff_string;
		$neg_string = "Neg" unless $neg_string;

		unless ($ballot->entry->id == $current_entry) { 

			if ($current_entry) { 
				print TEXOUT "\\newpage\n";
			}

			$current_entry = $ballot->entry;
    
			print TEXOUT "{\\Large \\bf ". Tab::texify($tourn->name) ." \\hfill ".Tab::texify($current_entry->name)." Results} \\\\ \n";
			print TEXOUT "\\bigskip\n";
			print TEXOUT "\\newline\n";
			print TEXOUT "\\small\n";
			
		}

		print TEXOUT "\\noindent\n";
		print TEXOUT "\\begin{tabular}{p{1.5in}p{1.5in}p{1.5in}p{2in}}\n";
		print TEXOUT "\\rowcolor[rgb]{.84,.89,.94}\[5.5pt\]\[5.5pt\]\n";

		print TEXOUT Tab::texify($panel->round->realname)." (";
		print TEXOUT Tab::texify($aff_string).") & " if $ballot->side == 1;
		print TEXOUT Tab::texify($neg_string).") & " if $ballot->side != 1;
		print TEXOUT Tab::texify($judge->first." ".$judge->last) if $judge;
		print TEXOUT " & ";

		my $rfd;
		my $comments;
		my $results;

		$results .= "FFT " if $ballot->noshow;
		$results .= "BYE " if $ballot->bye;
		$results .= "BYE " if $panel->bye;

		foreach my $value (sort {$a->student <=> $b->student} @values) { 

			$rfd = $value->content if $value->tag eq "rfd";
			$comments = $value->content if $value->tag eq "comments";

			next if $value->tag eq "rfd";
			next if $value->tag eq "comment";

			$results .= "W " if $value->tag eq "ballot" && $value->value == 1;
			$results .= "L " if $value->tag eq "ballot" && $value->value != 1;
			$results .= $value->value." " if $value->tag ne "ballot";
		}

		print TEXOUT Tab::texify($results)." & ";

		foreach my $opponent (@entries) { 
			next if $opponent->id == $ballot->entry->id;
			print TEXOUT Tab::texify($opponent->code);
			print TEXOUT "\\newline\n";
			print TEXOUT Tab::texify($opponent->name)
		}

		print TEXOUT "\\\\ \n \\end{tabular}\n \\medskip\n \\newline\n";

		my $newline = "\\newline\n";

		my $strip = HTML::Strip->new();
		$rfd = $strip->parse($rfd);
		$rfd =~ s/[^[:ascii:]]//g;
		$rfd =~ s/^\s+//; 
		$rfd =~ s/\s+$//;
		$rfd = Tab::texify($rfd);
		$rfd =~ s/\R/$newline/g;

		$comments = $strip->parse($comments);
		$comments =~ s/[^[:ascii:]]//g;
		$comments =~ s/^\s+//; 
		$comments =~ s/\s+$//;
		$comments = Tab::texify($comments);
		$comments =~ s/\R/$newline/g;

		if ($rfd) { 
			print TEXOUT "\\large{\\bf RFD}\n\n\\small\n";
			print TEXOUT $rfd;
		}

		if ($comments) { 
			if ($rfd) { 
				print TEXOUT "\\medskip \\newline\n";
			}
			print TEXOUT "\\large{\\bf Comments}\n\n\\small\n";
			print TEXOUT $comments;
		}

		if ($rfd || $comments) { 
			print TEXOUT "\\bigskip \n \n";
		}

	}

    $m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, tail => 1, array => 1.6 );


</%init>
