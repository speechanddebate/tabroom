<%args>
	$entry_id => undef
	$account
</%args>
<%init>

	my $entry = Tab::Entry->retrieve($entry_id);
	my $event = $entry->event;
	my $group = $event->judge_group;
	my $tourn = $group->tourn;
	my $style = $group->setting("prefs");

	my %ratings_by_judge = ();
	my %conflicts_by_id = ();

	my $now = DateTime->now;
	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

    my %rating_name = map {$_->id => $_->name} $group->rating_tiers;

	my $coach_ratings = $group->setting("coach_ratings");
    my %coach_rating_by_judge = (); 

    foreach my $rating ($m->comp("/funclib/group_ratings.mas", group => $group, type => "coach")) { 
		next unless $rating->judge;
		next unless $rating->rating_tier;
        $coach_rating_by_judge{$rating->judge->id} = $rating_name{$rating->rating_tier->id};
    }   

    my %rating_by_judge = (); 
	my %percentile_by_judge = ();

	if ($style eq "ordinals") { 
		foreach my $rating ($m->comp("/funclib/group_ratings.mas", group => $group, type => "entry", entry => $entry)) { 
			next unless $rating->judge;
			$rating_by_judge{$rating->judge->id} = $rating->ordinal; 
			$percentile_by_judge{$rating->judge->id} = $rating->percentile;
		}   
	} else { 

		my @ratings = Tab::Rating->search( entry => $entry->id, type => "entry", ordinal => 0);
		foreach my $rating (@ratings) { 
			next unless $rating->judge;
			next unless $rating->rating_tier;
			$rating_by_judge{$rating->judge->id} = $rating->rating_tier->name;
		}   
	}   

	my @conflicts = $m->comp("/funclib/entry_conflicts.mas", entry => $entry);
	foreach (@conflicts) { $conflicts_by_id{$_->judge->id} = $_; }

	my @sch_conflicts = $m->comp("/funclib/school_conflicts.mas", school => $entry->school);
	foreach (@sch_conflicts) { $conflicts_by_id{$_->judge->id} = $_; }

	my @judges = Tab::Judge->search( judge_group => $group->id, active => 1 );
	@judges = sort {$a->last cmp $b->last} @judges;
	@judges = sort {$a->school->short_name cmp $b->school->short_name} @judges;

	@judges = sort { $rating_by_judge{$a->id} <=> $rating_by_judge{$b->id} } @judges;

	my $filename = "Prefs-".$entry->name."-".Tab::csvdt($now);
	$filename =~ s/s+//;
	my $filepath = $Tab::file_root."/tmp/$filename";
	my $garbage = `rm -f $filepath.*`;

	open (CSVOUT, ">$filepath.csv");

	print CSVOUT "Pref sheet for ".$entry->name." \n";
	print CSVOUT "Judge First, Judge Last,School,";
	print CSVOUT "School Rating," if $coach_ratings;
	print CSVOUT "Ordinal Pref,Percentile," if $style eq "ordinals";
	print CSVOUT "Your Rating," if $style ne "ordinals";
	print CSVOUT "\n";

	foreach my $judge (@judges) { 

		next if $judge->school->id == $entry->school->id;

		print CSVOUT "\"".$judge->first."\",\"".$judge->last."\",\"";
		print CSVOUT $judge->school->short_name."\"," if $judge->school;
		print CSVOUT "\"Hired\"," unless $judge->school;

		if ($conflicts_by_id{$judge->id}) { 
			print CSVOUT "\"Conflict\",";
		} else { 
			print CSVOUT "\"".$coach_rating_by_judge{$judge->id}."\"," if $coach_ratings;
			print CSVOUT "\"".$rating_by_judge{$judge->id}."\",\"".$percentile_by_judge{$judge->id}."\"," if $style eq "ordinals";
			print CSVOUT "\"".$rating_by_judge{$judge->id}."\"," unless $style eq "ordinals";
		}
		print CSVOUT "\n";

	}

	close CSVOUT;
	$m->redirect("$Tab::url_prefix/tmp/$filename.csv");

</%init>

