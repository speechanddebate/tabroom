<%args>
	$round
	$not_in      => undef
	$unconfirmed => undef
	$unstarted   => undef
	$unentered   => undef
	$flight      => undef
</%args>
<%init>

	my $flight_limit = "and panel.flight = $flight" if $flight;

	if ($unstarted) { 

		Tab::Judge->set_sql(unstarted_by_round => "
			select distinct judge.*, tab_rating.value as tab_rating
				from panel,ballot,judge,entry
				left join judge_setting as tab_rating on tab_rating.judge = judge.id and tab_rating.tag = \"tab_rating\"
				where panel.round = ? 
				and panel.id = ballot.panel
				and ballot.judge = judge.id
				and ballot.audit != 1
				and ballot.entry = entry.id
				and entry.dropped != 1
				". $flight_limit ."
				and panel.started is null
				and panel.bye != 1
				group by judge.id
				order by judge.code, judge.last
		");

		return Tab::Judge->search_unstarted_by_round($round->id);

	} elsif ($unconfirmed) { 

		Tab::Judge->set_sql(unconfirmed_by_round => "
			select distinct judge.*, tab_rating.value as tab_rating
				from panel,ballot,judge,entry
				left join judge_setting as tab_rating on tab_rating.judge = judge.id and tab_rating.tag = \"tab_rating\"
				where panel.round = ? 
				and panel.id = ballot.panel
				and ballot.judge = judge.id
				and ballot.audit != 1
				and ballot.entry = entry.id
				and entry.dropped != 1
				and panel.bye != 1
				". $flight_limit ."
				and exists (
					select ballot_value.id
					from ballot_value
					where ballot_value.ballot = ballot.id
					and ballot_value.tag != \"rfd\"
					and ballot_value.tag != \"title\"
					and ballot_value.tag != \"comments\"
				)
				group by judge.id
				order by judge.code, judge.last
		");

		return Tab::Judge->search_unconfirmed_by_round($round->id);

	} elsif ($not_in || $unentered) { 

		Tab::Judge->set_sql(unvoted_by_round => "
			select distinct judge.*, panel.id as panelid, ballot.chair as chair, tab_rating.value as tab_rating
				from panel,ballot,judge,entry
				left join judge_setting as tab_rating on tab_rating.judge = judge.id and tab_rating.tag = \"tab_rating\"
				where panel.round = ? 
				and panel.id = ballot.panel
				and ballot.judge = judge.id
				and ballot.audit != 1
				and ballot.entry = entry.id
				and entry.dropped != 1
				and panel.bye != 1
				". $flight_limit ."
				group by judge.id
				order by judge.code, judge.last
		");

		return Tab::Judge->search_unvoted_by_round($round->id);

	} else { 

		Tab::Judge->set_sql(by_round => "
			select distinct judge.*, group_concat(distinct panel.id) as panelid, ballot.chair as chair, tab_rating.value as tab_rating
				from panel,ballot,judge,entry
				left join judge_setting as tab_rating on tab_rating.judge = judge.id and tab_rating.tag = \"tab_rating\"
				where panel.round = ? 
				and panel.id = ballot.panel
				and ballot.judge = judge.id
				and ballot.entry = entry.id
				and entry.dropped != 1
				". $flight_limit ."
				group by judge.id
				order by judge.code, judge.last
		");

		return Tab::Judge->search_by_round($round->id);

	}

</%init>
