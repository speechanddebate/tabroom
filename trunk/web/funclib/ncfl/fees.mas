<%args>
	$diocese
	$tourn
	$school => undef
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	use POSIX;

	my $total;
	my @felines;

	my %school_multiplier = ();

	my %hotels = map {$_->id => $_} $tourn->hotels;

	foreach my $school (Tab::School->search( region => $diocese->id, tourn => $tourn->id )) { 
		$school_multiplier{$school->id} = $hotels{$school->setting("hotel")}->multiple if $school->setting("hotel");
		$school_multiplier{$school->id} = 2 unless $school->setting("hotel");
	}

	EVENT:
	foreach my $event (sort {$a->name cmp $b->name} $m->comp("/funclib/region_events.mas", region => $diocese, tourn => $tourn)) { 
	
		my %multiple_count = ();

		my @entries;

		if ($school) { 
			@entries = Tab::Entry->search( school => $school->id, event => $event->id);
		} else {
			@entries = $m->comp("/funclib/region_entries.mas", region => $diocese, event => $event);
		}

		next unless @entries;

		my $fee_per = $event->fee;
		my $fee_total;

		foreach my $entry (@entries) { 
			$fee_total += ceil($fee_per * $school_multiplier{$entry->school->id});
			$multiple_count{$school_multiplier{$entry->school->id}}++;
		}

		my $name;

		foreach my $multiple (keys %multiple_count) { 
			$name .= ", " if $name;
			$name .= $multiple_count{$multiple}." entries in ".$event->abbr.' x $'.ceil($fee_per * $multiple);
		}

		my %line_hash= ();
		$line_hash{"name"} = $name;
		$line_hash{"fee"} = $fee_total;

		push (@felines, {%line_hash});
		$total += $fee_total;

	}

	my $payments;

	FINE: 
	foreach my $fine ($diocese->fines) { 

		my $timestamp = $fine->timestamp;
		$timestamp->set_time_zone($tz);

		my %fine_hash;

		$fine_hash{"name"} = $fine->reason." ".Tab::niceshortdt($timestamp)." ".Tab::tzname($tz);
		$fine_hash{"fee"} = $fine->amount;
		$fine_hash{"fine_id"} = $fine->id;

		if ($fine->reason eq "Payment") { 
			$payments += $fine->amount;
		} else { 
			$total +=  $fine->amount;
		}

		push (@felines, {%fine_hash});

	} #end of foreach fine

	return ($total, $payments, \@felines);

</%init>
