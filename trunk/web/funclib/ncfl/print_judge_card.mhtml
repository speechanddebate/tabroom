<%args>
	$tourn
	$judge_id => undef
	$session
</%args>
<%init>

	my $judge = Tab::Judge->retrieve($judge_id);
	my $group = $judge->judge_group;

    my $tz = $tourn->tz;
    $tz = "UTC" unless $tz;

	my $name = $judge->first." ".$judge->last;
	$name =~ s/[\W_]//g;

	my $filename = "Card-".$name."-".$session->id;
    my $filepath = $Tab::file_root."/tmp/";

	$m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, head => 1, no_header => 1);

	open (TEXOUT, ">>$filepath"."$filename.tex");

	Tab::Round->set_sql( round_one => "
		select distinct round.*
		from round, event
		where round.event = event.id
		and event.judge_group = ? 
		and round.name = 1
		limit 1");

	my %jpool_timeslots = ();
	my %jpool_site = ();
	my %group_type = ();
	my %group_site = ();

	my $switch;

	foreach my $event ($group->events) { 
		$group_type{$group->id} = $event->type;
	}

	my @all_jpools = Tab::JPool->search( judge_group => $group->id );

	my @jpools;
	foreach my $jpool (@all_jpools) { 
		push @jpools, $jpool if $jpool->setting("event_based");
	}

	if (@jpools) { 

		foreach my $jpool (@jpools) { 
			$jpool_site{$jpool->id} = $jpool->site->name;
			@{$jpool_timeslots{$jpool->id}} = $m->comp("/funclib/jpool_timeslots.mas", jpool => $jpool);
		}

		$group_type{$group->id} = "jpools";

	} else { 

		my $first_round = Tab::Round->search_round_one( $group->id )->first;
		$group_site{$group->id} = $first_round->site->name if $first_round && $first_round->site;

	}

	if ($group->setting("tab_room")) { 
		$group_type{$group->id} = "TabRoom";
	}

	print TEXOUT "\\vbox to 4.25in {\\vfil\n";

	print TEXOUT "\\Huge\n";
	print TEXOUT "\\noindent\n";
	print TEXOUT "{\\bf ".Tab::texify($judge->code)."} \\hfill \\LARGE {\\bf ".Tab::texify($judge->first." ".$judge->last)."}\n";
	print TEXOUT "\\medskip\n";
	print TEXOUT "\\newline\n";
	print TEXOUT "\\Large ".Tab::texify($judge->school->region->code)." -- ".Tab::texify($judge->school->region->name)." \\hfill ".Tab::texify($judge->school->name)."\n";


	if ($group_type{$group->id} eq "congress") { 
		
		print TEXOUT "\\vspace{.35in}\n";
		print TEXOUT "\\newline\n";
	
		print TEXOUT "\\Large {\\bf Saturday: ".Tab::texify($group->name)." } \\dotfill \\large {\\bf at ".Tab::texify($group_site{$group->id})."}\n";

		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";


		print TEXOUT "\\normalsize\n";
		print TEXOUT &Tab::texify("Student Congress judges will be given their assignments at the Saturday morning General Meeting.   Check your tournament booklet for the room & time of the meeting.")."\n";

		print TEXOUT "\\bigskip\n";
		print TEXOUT "\\newline\n";

	} elsif ($group_type{$group->id} eq "speech") { 

		print TEXOUT "\\bigskip\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\Large {\\bf Saturday: ".Tab::texify($group->name)." } \\dotfill \\large {\\bf at ".Tab::texify($group_site{$group->id})."}\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\normalsize\n";

		print TEXOUT "\\begin{spacing}{.8}\n";
		print TEXOUT "\\noindent\n";

		print TEXOUT &Tab::texify("The assignments below are tentative.
		You should attend all judge meetings and be attentive for changes
		to your schedule.  Even if you have Round 1 off, you MUST 
		attend the opening meeting to pick up your ballot packet.")."\n";

		print TEXOUT "\\smallskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\end{spacing}\n";
		print TEXOUT "\\noindent\n";

		my %timeslot_panel = map {$_->round->timeslot->id => $_} $m->comp("/funclib/judge_panels.mas", judge => $judge);

		my $tabular = "\\begin{tabular}{p{1.0in}p{.75in}p{.35in}p{.75in}p{3.225in}} \n";

		foreach my $timeslot ($m->comp("/funclib/group_timeslots.mas", group => $group, prelim => 'only')) { 

			my $panel = $timeslot_panel{$timeslot->id};

			if ($panel) { 

				my $start = $panel->round->start_time;
				$start = $timeslot->start unless $start;
				$start->set_time_zone($tz);

				print TEXOUT "\\normalsize\n";

				print TEXOUT $tabular;
				print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\n" unless $switch++ % 2;

				print TEXOUT "{\\bf ".$panel->round->realname." }";
				print TEXOUT " & ";
				print TEXOUT Tab::nicetime($start)." ";
				print TEXOUT " & ";
				print TEXOUT $panel->round->event->abbr." & ";
				print TEXOUT "Section ".$panel->letter." & ";
				print TEXOUT "Room: ".Tab::texify($panel->room->name)." " if $panel->room;
				print TEXOUT "\\end{tabular}\n";
				print TEXOUT "\\newline\n";

			} else  { 

				my $start = $timeslot->start;
				$start->set_time_zone($tz);

				print TEXOUT "\\normalsize\n";

				print TEXOUT $tabular;
				print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\n" unless $switch++ % 2;

				print TEXOUT "{\\bf ".$timeslot->name." }";
				print TEXOUT " & ";
				print TEXOUT Tab::nicetime($start)." ";
				print TEXOUT " & ";
				print TEXOUT "& {\\bf Standby } & ";
				my $standby_until = $start->clone;
				$standby_until->add(minutes => 30);
				print TEXOUT "Please wait in the Judge Call Room until ".Tab::nicetime($standby_until);
				print TEXOUT "\\end{tabular}\n";
				print TEXOUT "\\newline\n";

			}

		}

		print TEXOUT "\\begin{spacing}{.8}\n";
		print TEXOUT "\\noindent\n";

		print TEXOUT &Tab::texify("Keep this card until the end of the
		tournament in case there is a question of missing an assignment.
		Missed assignments incur a \$50 fine.  During free rounds, please
		wait in the Judges' Lounge area as a standby judge for at least 20
		minutes beyond the starting time of the round.")."\n";

		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\end{spacing}\n";
		print TEXOUT "\\noindent\n";

	} elsif ($group_type{$group->id} eq "jpools") { 

		print TEXOUT "\\bigskip\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\Large {\\bf Saturday: ".Tab::texify($group->name)." } \\dotfill \\large {\\bf at ".Tab::texify($jpool_site{$judge->setting("prelim_jpool")})."}\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\normalsize\n";

		print TEXOUT "\\begin{spacing}{.8}\n";
		print TEXOUT "\\noindent\n";

		print TEXOUT &Tab::texify("The assignments below are tentative.
		You should attend all judge meetings and be attentive for changes
		to your schedule.  Even if you have Round 1 off, you MUST 
		attend the opening meeting to pick up your ballot packet.")."\n";

		print TEXOUT "\\smallskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\end{spacing}\n";
		print TEXOUT "\\noindent\n";

		my %timeslot_panel = map {$_->round->timeslot->id => $_} $m->comp("/funclib/judge_panels.mas", judge => $judge);

		my $tabular = "\\begin{tabular}{p{1.0in}p{.75in}p{.35in}p{.75in}p{3.225in}} \n";

		foreach my $timeslot (@{$jpool_timeslots{$judge->setting("prelim_jpool")}}) { 

			my $panel = $timeslot_panel{$timeslot->id};

			if ($panel) { 

				my $start = $panel->round->start_time;
				$start = $timeslot->start unless $start;
				$start->set_time_zone($tz);

				print TEXOUT "\\normalsize\n";

				print TEXOUT $tabular;
				print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\n" unless $switch++ % 2;

				print TEXOUT "{\\bf ".$panel->round->realname." }";
				print TEXOUT " & ";
				print TEXOUT Tab::nicetime($start)." ";
				print TEXOUT " & ";
				print TEXOUT $panel->round->event->abbr." & ";
				print TEXOUT "Section ".$panel->letter." & ";
				print TEXOUT "Room: ".Tab::texify($panel->room->name)." " if $panel->room;
				print TEXOUT "\\end{tabular}\n";
				print TEXOUT "\\newline\n";

			} else  { 

				my $start = $timeslot->start;
				$start->set_time_zone($tz);

				print TEXOUT "\\normalsize\n";

				print TEXOUT $tabular;
				print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\n" unless $switch++ % 2;

				print TEXOUT "{\\bf ".$timeslot->name." }";
				print TEXOUT " & ";
				print TEXOUT Tab::nicetime($start)." ";
				print TEXOUT " & ";
				print TEXOUT "& {\\bf Standby } & ";
				my $standby_until = $start->clone;
				$standby_until->add(minutes => 20);
				print TEXOUT "Please wait in the Judge Call Room until ".Tab::nicetime($standby_until);
				print TEXOUT "\\end{tabular}\n";
				print TEXOUT "\\newline\n";

			}

		}

		print TEXOUT "\\begin{spacing}{.8}\n";
		print TEXOUT "\\noindent\n";

		print TEXOUT &Tab::texify("Keep this card until the end of the
		tournament in case there is a question of missing an assignment.
		Missed assignments incur a \$50 fine.  During free rounds, please
		wait in the Judges' Lounge area as a standby judge for at least 20
		minutes beyond the starting time of the round.")."\n";

		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\end{spacing}\n";
		print TEXOUT "\\noindent\n";

	} elsif ($group_type{$group->id} eq "debate" || $group_type{$group->id} eq "pf" || $group_type{$group->id} eq "ld" || $group_type{$group->id} eq "policy") { 
		
		print TEXOUT "\\vspace{.35in}\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\Large {\\bf Saturday: ".Tab::texify($group->name)." } \\dotfill \\large {\\bf at ".Tab::texify($group_site{$group->id})."}\n";
		print TEXOUT "\\bigskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\normalsize \n";
		print TEXOUT "In ".$group->name.", all judges are responsible for ALL FIVE preliminary rounds.  Judges will be ";
		print TEXOUT "informed of their judging assignments throughout the day prior to each round at the contest site.\n";
		print TEXOUT "\\vspace{.5in}\n";
		print TEXOUT "\\newline\n";

	} elsif ($group_type{$group->id} eq "TabRoom") { 

		print TEXOUT "\\bigskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\Large {\\bf Tab Room Staff}\n";
		print TEXOUT "\\smallskip\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\begin{tabular}{p{6.5in}} \n";
		print TEXOUT "\\large \n";
		print TEXOUT " You have been assigned to work in the Tabulation Room.  Please contact the tournament officials if you ";
		print TEXOUT " have any questions about your assignment or where you are supposed to report.\\\\ \n";
		print TEXOUT "\\end{tabular}\n";
		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";

		if ($judge->setting('special_job')) {
			print TEXOUT "\\large {\\bf Your Assignment: \\dotfill ".$judge->setting('special_job')." }\n";
			print TEXOUT "\\medskip\n";
			print TEXOUT "\\newline\n";
		}

	} else { 

		print TEXOUT "\\bigskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\Large {\\bf Sunday Only:".ucfirst($group_type{$group->id})." ".$group->id."}\n";
		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\begin{tabular}{p{6.5in}} \n";
		print TEXOUT "\\large \n";
		print TEXOUT "You are assigned no prelim rounds on Saturday.  Your Sunday assignments are below.\n";
		print TEXOUT "\\end{tabular}\n";
		print TEXOUT "\\vspace{.35in}\n";
		print TEXOUT "\\newline\n";

	}

	my @elim_jpools = $m->comp("/funclib/judge_jpools.mas", judge => $judge, limit => "not_event_jpools");

	if (@elim_jpools) { 

		my $sunday_group = $elim_jpools[0]->judge_group;
		my $sunday_site = $elim_jpools[0]->site->name;

		print TEXOUT "\\Large {\\bf Sunday: ".Tab::texify($sunday_group->name)." } \\dotfill \\large {\\bf at ".Tab::texify($sunday_site)."}\n";

		print TEXOUT "\\bigskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\normalsize \n";

		print TEXOUT Tab::texify("Elim round ballot are given out at a meeting prior to each round.  Your elim jpools ");
		print TEXOUT Tab::texify("are listed below.  Consult the tournament booklet for the time & location of each jpool ");
		print TEXOUT Tab::texify("meeting.  Failure to appear will result in a \$50 fine.");

		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\large\n";

		my $length = 1 / scalar @elim_jpools;

		foreach my $jpool (@elim_jpools) {
			print TEXOUT "\\parbox[c][][c]{".$length."\\textwidth}{\\centering \\bf ".$jpool->name."}\n";
		}

		print TEXOUT "\\newline\n";

	} elsif ($group_type{$group->id} ne "TabRoom") { 

		print TEXOUT "\\Large {\\bf No Elims}\n";
		print TEXOUT "\\bigskip\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\large \n";
		print TEXOUT "\\begin{tabular}{p{6.5in}} \n";
		print TEXOUT "You are not assigned to any elimination pools; you will not need to judge rounds Sunday.\n";
		print TEXOUT "\\end{tabular}\n";
		print TEXOUT "\\vspace{.35in}\n";
		print TEXOUT "\\newline\n";

	}

	print TEXOUT "\\vfil }\n";

	close TEXOUT;

	$m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, tail => 1, no_header => 1);

</%init>
