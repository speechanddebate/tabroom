<%args>
	$group
</%args>
<%init>

	return unless $group;
	my @judges  = $group->judges;

	my @timeslots;
	my %need_by_timeslot = ();

	foreach my $round ($m->comp("/funclib/group_rounds.mas", group => $group)) { 
		my $judges = $round->setting("num_judges");
		$judges = 1 unless $judges;
		my $need = $judges * scalar $round->panels;

		push (@timeslots, $round->timeslot);
		$need_by_timeslot{$round->timeslot->id} += $need;
	}

	my %seen = (); 
	@timeslots = grep { ! $seen{$_->id} ++ } @timeslots;
	@timeslots = sort {$a->start->epoch <=> $b->start->epoch} @timeslots;

	my $max;

	while (@timeslots) { 

		my $total;

		my $timeslot = shift @timeslots;
		$total += $need_by_timeslot{$timeslot->id};

		foreach my $other (@timeslots) { 

			$total += $need_by_timeslot{$other->id} if $timeslot->start->epoch < $other->end->epoch && $timeslot->end->epoch > $other->start->epoch;

		}

		$max = $total if $max < $total;

	}

	return $max;


</%init>

