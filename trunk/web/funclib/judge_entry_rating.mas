<%args>
	$entry
	$type => undef
</%args>
<%init>

	my $abbr = $entry->event->abbr;

	if ($type eq "rated_tier") {

	    my $dbh = Tab::DBI->db_Main(); 
    
  		my $sth = $dbh->prepare('
			select distinct judge.id, rating_tier.name as tier
			from judge, rating, entry, rating_tier
			where judge.id = rating.judge
			and judge.active = 1
			and judge.school != entry.school
			and rating.entry = entry.id
			and rating.rating_tier = rating_tier.id
			and rating_tier.strike is null
			and entry.id = '.$entry->id.'
			order by judge.id
		');

		$sth->execute();

		my %judge_ratings = ();	

	    while(my ($judge_id, $rating) = $sth->fetchrow_array() ) { 
			$judge_ratings{$judge_id} = $rating;
    	}   

		return %judge_ratings;

	} elsif ($type eq "struck_tier") {

		Tab::Judge->set_sql( by_entry_rated => "
			select distinct judge.*
			from judge, rating, entry, rating_tier
			where judge.id = rating.judge
			and judge.active = 1
			and judge.school != entry.school
			and rating.entry = entry.id
			and rating.rating_tier = rating_tier.id
			and rating_tier.strike = 1
			and entry.id = ? 
			order by judge.id
		");

		return Tab::Judge->search_by_entry_rated($entry->id);

	} elsif ($type eq "ordinal") {

		Tab::Judge->set_sql( by_entry_ordinal => "
			select distinct judge.*
			from judge, rating, entry
			where judge.id = rating.judge
			and judge.active = 1
			and judge.school != entry.school
			and rating.entry = entry.id
			and entry.id = ? 
			and rating.ordinal > 0
			order by judge.id
		");

		return Tab::Judge->search_by_entry_ordinal($entry->id);

	} elsif ($type eq "rated") {

		Tab::Judge->set_sql( by_entry_rated => "
			select distinct judge.*
			from judge, rating, entry
			where judge.id = rating.judge
			and judge.active = 1
			and judge.school != entry.school
			and rating.entry = entry.id
			and entry.id = ? 
			order by judge.id
		");

		return Tab::Judge->search_by_entry_rated($entry->id);

	} elsif ($type eq "conflicted") { 

		Tab::Judge->set_sql( by_personal_conflict => "
			select distinct judge.*
			from judge, strike, entry
			where judge.id = strike.judge
			and strike.entry = entry.id
			and judge.school != entry.school
			and entry.id = ? 
			order by judge.id
		");

		Tab::Judge->set_sql( by_school_conflict => "
			select distinct judge.*
			from judge, strike, entry
			where judge.id = strike.judge
			and strike.school = entry.school
			and judge.school != entry.school
			and entry.id = ? 
			order by judge.id
		");

		Tab::Judge->set_sql( by_event_conflict => "
			select distinct judge.*
			from judge, strike, entry
			where judge.id = strike.judge
			and strike.event = entry.event
			and judge.school != entry.school
			and entry.id = ? 
			order by judge.id
		");

		my @p_judges = Tab::Judge->search_by_personal_conflict($entry->id);
		my @s_judges = Tab::Judge->search_by_school_conflict($entry->id);
		my @e_judges = Tab::Judge->search_by_event_conflict($entry->id);
		my @o_judges = $entry->school->judges(judge_group => $entry->event->judge_group->id);

		foreach my $p (@p_judges) { 
			$p->pref("Entry Conflict");
		}

		foreach my $s (@s_judges) { 
			$s->pref("School Conflict");
		}

		foreach my $e (@e_judges) { 
			$e->pref("Does not judge $abbr");
		}

		foreach my $o (@o_judges) { 
			$o->pref("Own Judge");
		}

		my @judges = (@p_judges, @s_judges, @e_judges, @o_judges);

		my %seen = (); 
		@judges = grep { ! $seen{$_->id} ++ } @judges;

		return @judges;

	}

</%init>
