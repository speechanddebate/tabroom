<%args>
	$circuit
	$startdate => undef
	$enddate => undef
</%args>
<%init>

	my $debug=0;	
	use Time::HiRes qw( time );
	use Data::Dumper;
	my $start = time(); 
	my $ntoshow=300;

	#Get date ranges
	my ($start_date, $end_date) = $m->comp("/funclib/seasonal_date_range.mas");			

	if ($debug) {print "Start=".$start_date." end=".$end_date."<br>";}
		
#CREATE AN HONORS_WEIGHT FOR ALL EVENTS WITHOUT AN EVENT_SETTING FOR ONE

  $m->comp("/funclib/reset_event_rating_weights.mas", circuit_id => $circuit);
  my $end = time();
  if ($debug) { print "Time to event weight pull:  "; printf("%.2f\n", $end - $start); print "<br>"; }

#NOW PULL USERS AND POINTS

	Tab::Student->columns(TEMP => qw/points/);
	Tab::Student->columns(TEMP => qw/avg_points/);
	Tab::Student->columns(TEMP => qw/chapter/);
	Tab::Student->columns(TEMP => qw/nevents/);
	Tab::Student->set_sql(pull_competitors => "
		select student.*, sum((result.percentile/10) * setting.value) as points, avg((result.percentile/10) * setting.value) as avg_points,
		chapter.name as chapter, count(entry.id) as nevents
		from student, entry_student, entry, result, setting, chapter, tourn, chapter_circuit, result_set
		where student.chapter = chapter.id
		and chapter.id=chapter_circuit.chapter
		and chapter_circuit.circuit=43
		and entry_student.student=student.id
		and entry.id=entry_student.entry
		and result.entry=entry.id
		and setting.event=entry.event
		and setting.tag='honors_weight'
		and setting.type='event'
		and entry.dropped=0
		and result.percentile>0
		and result_set.id=result.result_set
		and result_set.label='Final Places'
		and tourn.id=entry.tourn
		and tourn.start>='$start_date'
		and tourn.end<='$end_date'
		group by student.id
		order by points desc
	");
	my @competitor = Tab::Student->search_pull_competitors;

	my $x;
	my %team_rating;
	foreach my $comp (@competitor) { $x++;
	 	
		if ($debug) {
			print $x." ";
			print $comp->id." " ;
			print $comp->first." ".$comp->last;
			print $comp->chapter." ";
			print $comp->nevents." ";
			printf("%.2f\n", $comp->points);
			print "<br>";
		}
		
		$team_rating{$comp->id}{'total'} = $comp->points;
		$team_rating{$comp->id}{'avg'} = $comp->avg_points;
	}

	if ($debug) {
	 $end = time();
	 print "processing time:  "; printf("%.2f\n", $end - $start);
	 print "This many records:".scalar(@competitor)."<br>";
	}

	return %team_rating ;
	
</%init>
