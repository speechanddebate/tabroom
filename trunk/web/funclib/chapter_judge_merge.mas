<%args>
	$account        => undef
	$mergee_id      => undef
	$destination_id => undef
	$mergee         => undef
	$destination    => undef
	$check_grad     => undef
</%args>
<%init>

	$mergee = Tab::ChapterJudge->retrieve($mergee_id) if $mergee_id && not defined $mergee;
	$destination = Tab::ChapterJudge->retrieve($destination_id) if $destination_id && not defined $destination;

	return unless $mergee && $destination;

    Tab::Judge->set_sql( steal => "
        update judge
        set chapter_judge = ?
        where chapter_judge = ?
    ");

	$destination->account($mergee->account->id) if $mergee->account && not defined $destination->account;
	$destination->started($mergee->started) if $mergee->started && not defined $destination->started;
	$destination->notes($mergee->notes) if $mergee->notes && not defined $destination->notes;
	$destination->notes_timestamp($mergee->notes_timestamp) if $mergee->notes_timestamp && not defined $destination->notes_timestamp;
	$destination->retired("");
	$destination->cell($mergee->cell) if $mergee->cell && not defined $destination->cell;
	$destination->paradigm($mergee->paradigm) if $mergee->paradigm && not defined $destination->paradigm;
	$destination->diet($mergee->diet->id) if $mergee->diet && not defined $destination->diet;
	$destination->identity($mergee->identity->id) if $mergee->identity && not defined $destination->identity;
	$destination->update;

 	Tab::log($account->email." transferring ".$mergee->id." records to ".$destination->id) if $account; 

	Tab::Judge->sql_steal->execute($destination->id, $mergee->id);

	$mergee->delete;

	return;

</%init>
