<%args>
	$panel
	$published    => undef
	$post_results => undef
	$no_drops     => undef
</%args>
<%init>

	return unless $panel && $panel->id;

	if ($post_results) { 

		Tab::Entry->set_sql( by_panel => "
			select distinct entry.*, ballot.speakerorder as speaks, ballot.side as side, ballot.id as ballot
			from entry, ballot, panel, round
			where ballot.entry = entry.id
			and ballot.panel = ?
			and ballot.panel = panel.id
			and panel.round = round.id
			and round.post_results = 1
			and entry.dropped = 0
			order by ballot.speakerorder, ballot.side, entry.code");

		my @entries = Tab::Entry->search_by_panel( $panel->id );
		my %seen = (); 
		@entries = grep { ! $seen{$_->id} ++ } @entries;
		return @entries;

	} elsif ($published) { 

		Tab::Entry->set_sql( by_panel => "
			select distinct entry.*, ballot.speakerorder as speaks, ballot.side as side, ballot.id as ballot
			from entry, ballot, panel, round
			where ballot.entry = entry.id
			and ballot.panel = ?
			and ballot.panel = panel.id
			and panel.round = round.id
			and entry.dropped = 0
			and round.published = 1
			order by ballot.speakerorder, ballot.side, entry.code");

		my @entries = Tab::Entry->search_by_panel( $panel->id );
		my %seen = (); 
		@entries = grep { ! $seen{$_->id} ++ } @entries;
		return @entries;

	} else { 

		my $limit = "and entry.dropped = 0" if $no_drops;

		Tab::Entry->set_sql( by_panel => "
			select distinct entry.*, ballot.speakerorder as speaks, ballot.side as side, ballot.id as ballot
			from entry, ballot
			where ballot.entry = entry.id
			and ballot.panel = ?
			".$limit."
			group by entry.id
			order by ballot.speakerorder, ballot.side, entry.code
		");

		
		return Tab::Entry->search_by_panel( $panel->id );

	}

</%init>

