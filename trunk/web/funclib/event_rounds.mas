<%args>
	$event
	$done     => undef
	$entries  => undef
	$empties  => undef
	$breakout => undef
	$no_chair => undef
</%args>
<%init>

	my $limit;

	if ($breakout) { 

		$limit .= " 
			and exists (
				select other.id
				from round other
				where other.id = round.id
				and (
					(round.type != 'elim' and round.type != 'final')
					or exists ( 
						select round_setting.id 
							from round_setting
							where round_setting.round = other.id 
							and round_setting.tag = 'use_for_breakout'
							and round_setting.value = ".$breakout."
					)
				)
			)
		";

	}

	if ($done) { 

		my $chair_limit = "and ballot.chair != 1" if $no_chair;

		Tab::Round->set_sql( done_by_event => "
			select distinct round.* 
			from round, panel
			where round.event = ? 
			and round.id = panel.round
			$limit
			and not exists ( 
				select ballot.id 
				from ballot, entry
				where ballot.audit != 1
				$chair_limit
				and ballot.panel = panel.id
				and ballot.entry = entry.id
				and entry.dropped = 0
			)
			and exists ( 
				select ballot.id 
				from ballot
				where ballot.panel = panel.id
			)
			order by round.name desc
		");

		return Tab::Round->search_done_by_event($event->id);

	} elsif ($entries) { 

		Tab::Round->set_sql( rounds_with_entry => "
			select distinct round.* 
			from round, panel, ballot
			where round.event = ? 
			and round.id = panel.round
			and panel.id = ballot.panel
			and ballot.entry > 1
			$limit
			order by round.name
		");

		return Tab::Round->search_rounds_with_entry($event->id);

	} elsif ($empties) { 

		Tab::Round->set_sql( rounds_without_entries  => "
			select distinct round.*
				from round 
				where round.event = ?
				$limit
				and not exists    
					(select distinct panel.id 
						from ballot, entry, panel
						where panel.round = round.id
						and ballot.panel = panel.id    
						and ballot.entry = entry.id ) 
				order by round.name
		");

		Tab::Round->set_sql( rounds_without_panels  => "
			select distinct round.* 
				from round
				where round.event = ? 
				$limit
				and not exists ( 
					select panel.id
					from panel
					where panel.round = round.id
				)
				order by round.name
		");

		my @rounds = Tab::Round->search_rounds_without_entries($event->id), Tab::Round->search_rounds_without_panels($event->id);

		my %seen = (); 
		@rounds = grep { ! $seen{$_->id} ++ } @rounds;

		return @rounds;

	} else { 

		return $event->rounds;

	}

</%init>

