<%args>
	$region
	$jpool   => undef
	$tourn   => undef
	$alt     => undef
	$group   => undef
	$elim    => undef
	$covers  => undef
	$ratings => undef
</%args>
<%init>

	if ($group && $group->setting("tab_room")) { 

		Tab::Judge->set_sql(by_region_and_group => "
			select distinct judge.*
			from judge, school
			where judge.school = school.id
			and school.region = ? 
			and judge.judge_group = ? 
			group by judge.id
			order by judge.code
		");

		return Tab::Judge->search_by_region_and_group($region->id, $group->id);

	} elsif ($group && $covers) { 

		Tab::Judge->set_sql(covers_by_region_and_group => "
			select distinct judge.*, group_concat(distinct rating.id, rating_tier.name) as avg
			from judge, school, rating, rating_tier
			where judge.school = school.id
			and school.region = ? 
			and judge.covers = ?
			and judge.id = rating.judge
			and rating.rating_tier = rating_tier.id
			group by judge.id
			order by judge.code
		");

		return Tab::Judge->search_covers_by_region_and_group($region->id, $group->id);

	} elsif ($group && $alt) { 

		Tab::Judge->set_sql(alt_by_region_and_group => "
			select distinct judge.*, group_concat(distinct rating.id, rating_tier.name) as avg
			from judge, school, rating, rating_tier
			where judge.school = school.id
			and school.region = ? 
			and judge.alt_group = ? 
			and judge.id = rating.judge
			and rating.rating_tier = rating_tier.id
			group by judge.id
			order by judge.code
		");

		return Tab::Judge->search_alt_by_region_and_group($region->id, $group->id);

	} elsif ($group) { 

		Tab::Judge->set_sql(by_region_and_group => "
			select distinct judge.*, group_concat(distinct rating.id, rating_tier.name) as avg
			from judge, school, rating, rating_tier
			where judge.school = school.id
			and school.region = ? 
			and judge.judge_group = ? 
			and judge.id = rating.judge
			and rating.rating_tier = rating_tier.id
			group by judge.id
			order by judge.code
		");

		return Tab::Judge->search_by_region_and_group($region->id, $group->id);

	} elsif ($jpool) { 

		Tab::Judge->set_sql(by_region_and_jpool => "
			select distinct judge.*, group_concat(distinct rating.id, rating_tier.name) as avg
			from judge, school, rating, rating_tier, jpool_judge
			where judge.school = school.id
			and school.region = ? 
			and jpool_judge.judge = judge.id
			and jpool_judge.jpool = ? 
			and judge.id = rating.judge
			and rating.rating_tier = rating_tier.id
			group by judge.id
			order by judge.code
		");

		return Tab::Judge->search_by_region_and_jpool($region->id, $jpool->id);

	} elsif ($elim) { 

		Tab::Judge->set_sql(by_region_and_elim => "
			select distinct judge.*, group_concat(distinct rating.id, rating_tier.name) as avg
			from judge, school, rating, rating_tier
			where judge.school = school.id
			and school.region = ? 
			and school.tourn = ? 
			and judge.id = rating.judge
			and rating.rating_tier = rating_tier.id
			and not exists (
				select jpool_judge.id
				from jpool_judge, jpool
				where jpool_judge.jpool = jpool.id
				and jpool.judge_group != ?
				and jpool_judge.judge = judge.id
				and exists (select setting.id from setting where setting.jpool = jpool.id and setting.tag = 'registrant')
				and not exists (select setting.id from setting where setting.jpool = jpool.id and setting.tag = 'event_based')
			)
			group by judge.id
			order by judge.code
		");

		return Tab::Judge->search_by_region_and_elim($region->id, $tourn->id, $elim->id);

	} elsif ($tourn && $ratings) { 

		Tab::Judge->set_sql(by_region_and_tourn => "
			select distinct judge.*, group_concat(distinct rating.id, rating_tier.name) as avg, region.name as regname, region.code as regcode, school.name as schoolname
			from judge, school, rating, rating_tier, region
			where judge.school = school.id
			and school.region = region.id
			and region.id = ? 
			and school.tourn = ? 
			and judge.id = rating.judge
			and rating.rating_tier = rating_tier.id
			group by judge.id
			order by judge.code
		");

		return Tab::Judge->search_by_region_and_tourn($region->id, $tourn->id);

	} elsif ($tourn) { 

		Tab::Judge->set_sql(by_region_and_tourn => "
			select distinct judge.*, region.name as regname, region.code as regcode, school.name as schoolname
			from judge, school, region
			where judge.school = school.id
			and school.region = region.id
			and region.id = ? 
			and school.tourn = ? 
			group by judge.id
			order by judge.code
		");

		return Tab::Judge->search_by_region_and_tourn($region->id, $tourn->id);

	}


</%init>

