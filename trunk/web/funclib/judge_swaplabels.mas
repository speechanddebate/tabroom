<%args>
	$judge_array_ref
	$settings_ref
	$busy => undef
</%args>
<%init>

	use Math::Round;
	use POSIX;

	my %judge_strings;
	my %judge_headers; 

	my %settings = %{$settings_ref};

	my %others = %{$settings{"others_ref"}};
	my %judge_use = %{$settings{"judge_use_ref"}};
	my %rating_by_judge = %{$settings{"rating_by_judge_ref"}};

	my $affref = $settings{"affref"};
	my $negref = $settings{"negref"};

	foreach my $judge (@{$judge_array_ref}) { 
	
		if ($settings{"diversity"}) { 
			$judge_strings{$judge->id}{"a-Div"} = "Y" if $judge->setting("diverse");
			$judge_headers{"a-Div"} = 1
		}

		if ($settings{"prefs"}) { 

			my $rating;

			foreach my $pref (${$affref}{$judge->id}, ${$negref}{$judge->id}) { 

				if ($pref) { 
					$pref = 1 if $pref < 1;
					$pref = round($pref);
				} else { 
					$pref = "x";
				}

				$rating .= "-" if $rating;
				$rating .= $pref;
			}

			$judge_strings{$judge->id}{"b-Pref"} = $rating;
			$judge_headers{"b-Pref"} = length($rating) if length($rating) > $judge_headers{"b-Pref"};

			$judge_strings{$judge->id}{"c-AvPf"} = $m->comp("/funclib/judge_avg_rating.mas", judge => $judge);
			$judge_headers{"c-AvPf"} = length($judge_strings{$judge->id}{"c-AvPf"}) if length($judge_strings{$judge->id}{"c-AvPf"}) > $judge_headers{"c-AvPf"};

		}
		
		if ($settings{"tab_ratings"}) { 
			$judge_strings{$judge->id}{"d-TabRt"} = $judge->tab_rating;
			$judge_headers{"d-TabRt"} = length($judge->tab_rating) if length($judge->tab_rating) > $judge_headers{"Rtng"};
		}

		if ($settings{"coach_ratings"}) { 
			$judge_strings{$judge->id}{"e-Qual"} = $rating_by_judge{$judge->id};
			$judge_strings{$judge->id}{"e-Qual"} = "x" unless $rating_by_judge{$judge->id};
			$judge_headers{"e-Qual"} = length($judge->tab_rating) if length($judge->tab_rating) > $judge_headers{"e-Qual"};
		}

		my $usage; 

		if ($settings{"rounds_per"}) {

			$usage = $judge_use{$judge->id}{'left'} ."/".($judge_use{$judge->id}{'judged_already'} + $judge_use{$judge->id}{'will_judge'})."/".$judge_use{$judge->id}{'oblig'};

		} else { 

			$usage = $judge_use{$judge->id}{'judged_all'}; # This figure includes prelims and elims both 

		}

		$judge_strings{$judge->id}{"f-Use"} = $usage;
		$judge_headers{"f-Use"} = length($usage) if length($usage) > $judge_headers{"f-Use"};

		unless ($settings{"coach_ratings"} || $settings{"tab_ratings"} || $settings{"prefs"}) { 
			$judge_strings{$judge->id}{"g-Own"} = $judge->score;
			$judge_headers{"g-Own"} = length($judge->score) if length($judge->score) > $judge_headers{"g-Own"};
		}

		if ($settings{"ncfl"} || $settings{"region"}) { 
			my $key = "h-Reg";
			$key = "h-Dio" if $settings{"ncfl"};
			$judge_strings{$judge->id}{$key} = $judge->regcode;
			$judge_headers{$key} = length($judge->regcode) if length($judge->regcode) > $judge_headers{$key};
		} 
		
		my $school;

		if ($settings{"no_school_codes"}) { 
			$school .= substr(&Tab::short_name($judge->schoolname),0,10);
		} elsif ($judge->schoolcode eq "--") { 
			$school .= "HIRED";
		} else { 
			$school .= substr($judge->schoolcode." ".$judge->schoolname,0,10);
		}

		$judge_strings{$judge->id}{"i-School"} = $school;
		$judge_headers{"i-School"} = length($school) if length($school) > $judge_headers{"i-School"};

		unless ($settings{"no_judge_codes"}) { 
			$judge_strings{$judge->id}{"j-JCode"} = $judge->code;
			$judge_headers{"j-JCode"} = length($judge->code) if length($judge->code) > $judge_headers{"j-JCode"};
		}

		my $judge_name = $judge->first." ".$judge->last;
		$judge_strings{$judge->id}{"k-Name"} = $judge_name;
		$judge_headers{"k-Name"} = length($judge_name) if length($judge_name) > $judge_headers{"k-Name"};

		if ($others{$judge->id}{"other_event"}) {

			my $judge_other;

			$judge_other .= $others{$judge->id}{"other_event"}."  ";
			$judge_other .= "Rd: ".$others{$judge->id}{"other_round"}." ";
			$judge_other .= "Rm: ".$others{$judge->id}{"other_room"}." ";
			$judge_strings{$judge->id}{"l-Other Rnd"} = $judge_other;
			$judge_headers{"l-Other Rnd"} = length($judge_other) if length($judge_other) > $judge_headers{"l-Other Rnd"};

		} elsif ($others{$judge->id}{"other_room"}) {

			my $judge_other;

			if ($busy ) { 
				$judge_other .= "Bkt: ".$others{$judge->id}{"bracket"}." " if $others{$judge->id}{"bracket"};
				$judge_other .= "Prf: ".$others{$judge->id}{"prefs"}." " if $settings{"prefs"};
			}

			$judge_other .= "Rm: ".$others{$judge->id}{"other_room"}." ";
			$judge_other .= "Flt ".$others{$judge->id}{"other_flight"} if $others{$judge->id}{"other_flight"} && $settings{"round_flighted"} > 1;

			$judge_strings{$judge->id}{"l-Other Rnd"} = $judge_other;
			$judge_headers{"l-Other Rnd"} = length($judge_other) if length($judge_other) > $judge_headers{"l-Other Rnd"};
		}

	}

	my %fields;

	foreach my $fullkey (sort keys %judge_headers) { 

		my ($junk, $key) = split(/-/, $fullkey); 

		$judge_headers{$fullkey} = length($key) if $judge_headers{$fullkey} < length($key);

		unless ($key eq "Other Rnd") { 

			my $needed = ($judge_headers{$fullkey} - length($key)) / 2;

			foreach (1..floor($needed)) { 
				$key = "&nbsp;".$key;
			}

			foreach (1..ceil($needed)) { 
				$key = $key."&nbsp;";
			}

		}

		$fields{"label"} .= "&nbsp;".$key."&nbsp;";
	}


	foreach my $judge (@{$judge_array_ref}) { 

		foreach my $key (sort keys %judge_headers) { 

			my $string = $judge_strings{$judge->id}{$key}; 

			$string =~ s/^\s+//;
			$string =~ s/\s+$//;

			if ($key eq "l-Other Rnd") { 

			} elsif ($key eq "k-Name") { 

				my $needed = $judge_headers{$key} - length($string);

				foreach (1 .. ceil($needed)) { 
					$string = $string."&nbsp;";
				}

			} else { 
		
				my $needed = $judge_headers{$key} - length($string);
				$needed = $needed / 2;

				foreach (1 .. floor($needed)) { 
					$string = "&nbsp;".$string;
				}

				foreach (1 .. ceil($needed)) { 
					$string = $string."&nbsp;";
				}

			}

			$fields{$judge->id} .= "&nbsp;".$string."&nbsp;";

		}

	}

	return %fields;

</%init>
