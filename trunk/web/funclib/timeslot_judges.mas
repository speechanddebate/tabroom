<%args>
	$timeslot
	$status => undef
	$event  => undef
	$limit  => undef
	$site   => undef
	$audit  => undef
	$flight => undef
</%args>
<%init>

	my $type = 'and ballot_value.tag = "points" ' if $audit eq "Points";
	$type = 'and ballot_value.tag = "rank" ' if $audit eq "Rank";

	my $audit_line = "and ballot.audit != 1 " if $audit ne "Points";
	my $flight_line = "and panel.flight = $flight " if $flight;
	my $site_line = "and round.site = ".$site->id if $site;

	$limit = "and round.event = ".$event->id if $event;

	if ($status eq "half") { 

		Tab::Judge->set_sql( half_by_timeslot => "
			select distinct judge.*, panel.id as panelid
			from panel, round, ballot, judge, event, entry
			where judge.id = ballot.judge
			and ballot.panel = panel.id
			and panel.round = round.id
			and round.timeslot = ? 
			".$audit_line."
			".$flight_line."
			".$site_line."
			".$limit."
			and ballot.entry = entry.id
			and entry.dropped = 0
			and event.type != \"wudc\"
			and round.event = event.id
			and exists ( 
				select id from ballot_value 
				where ballot_value.ballot = ballot.id
				and ballot_value.value is not null
				and ballot_value.value > 0
				".$type."
			)
			group by panel.id, judge.id
			order by judge.code, judge.last
		");

		Tab::Judge->set_sql( wudc_half_by_timeslot => "
			select distinct judge.*, panel.id as panelid
			from panel, round, ballot, judge, event, entry
			where judge.id = ballot.judge
			and ballot.panel = panel.id
			and panel.round = round.id
			and round.timeslot = ? 
			".$audit_line."
			".$flight_line."
			".$site_line."
			".$limit."
			and ballot.entry = entry.id
			and entry.dropped = 0
			and event.type = \"wudc\"
			and round.event = event.id
			and ballot.chair = 1
			and exists ( select id from ballot_value where ballot_value.ballot = ballot.id ".$type.")
			group by panel.id
			order by judge.code, judge.last
		");

		return (Tab::Judge->search_half_by_timeslot($timeslot->id), Tab::Judge->search_wudc_half_by_timeslot($timeslot->id));

	} elsif ($status eq "full") { 

		Tab::Judge->set_sql( full_by_timeslot => "
			select distinct judge.*, panel.id as panelid, ballot.id as ballbuster
			from panel, round, ballot, judge, event, entry
			where judge.id = ballot.judge
			and ballot.panel = panel.id
			and panel.round = round.id
			and round.timeslot = ? 
			and event.type != \"wudc\"
			and round.event = event.id
			".$audit_line."
			".$flight_line."
			".$site_line."
			".$limit."
			and ballot.entry = entry.id
			and ballot.bye != 1
			and ballot.noshow != 1
			and entry.dropped = 0
			and not exists ( 
				select id from ballot_value 
				where ballot_value.ballot = ballot.id 
				and ballot_value.value is not null
				".$type."  
			)
			group by panel.id, judge.id
			order by judge.code, judge.last
		");

		Tab::Judge->set_sql( wudc_full_by_timeslot => "
			select distinct judge.*, panel.id as panelid
			from panel, round, ballot, judge, event, entry
			where judge.id = ballot.judge
			and ballot.panel = panel.id
			and panel.round = round.id
			and round.timeslot = ? 
			".$audit_line."
			".$flight_line."
			".$site_line."
			".$limit."
			and ballot.entry = entry.id
			and entry.dropped = 0
			and round.event = event.id
			and event.type = \"wudc\"
			and ballot.chair = 1
			and not exists ( 
				select id from ballot_value where ballot_value.ballot = ballot.id
				".$type." 
			)
			group by panel.id
			order by judge.code, judge.last
		");

		return (Tab::Judge->search_full_by_timeslot($timeslot->id), Tab::Judge->search_wudc_full_by_timeslot($timeslot->id));

	} elsif ($status eq "done") { 
	
		Tab::Judge->set_sql( done_by_timeslot => "
			select distinct judge.*
			from panel, round, ballot, judge, event, entry
			where judge.id = ballot.judge
			and ballot.panel = panel.id
			and panel.round = round.id
			and round.timeslot = ? 
			and ballot.audit = 1
			".$flight_line."
			".$site_line."
			".$limit."
			and ballot.entry = entry.id
			and entry.dropped = 0
			and round.event = event.id
			and event.type != \"wudc\"
			group by panel.id, judge.id
			order by judge.code, judge.last
		");

		Tab::Judge->set_sql( wudc_done_by_timeslot => "
			select distinct judge.*
			from panel, round, ballot, judge, event, entry
			where judge.id = ballot.judge
			and ballot.panel = panel.id
			and panel.round = round.id
			and round.timeslot = ? 
			and round.event = event.id
			and event.type = \"wudc\"
			".$flight_line."
			".$site_line."
			".$limit."
			and ballot.audit = 1
			and ballot.entry = entry.id
			and entry.dropped = 0
			and ballot.chair = 1
			group by panel.id
			order by judge.code, judge.last
		");

		return (Tab::Judge->search_done_by_timeslot($timeslot->id), Tab::Judge->search_wudc_done_by_timeslot($timeslot->id));

	} elsif ($status eq "collected") { 

		Tab::Judge->set_sql( collected_by_timeslot => "
			select distinct judge.*, panel.flight as tier, panel.id as panelid, ballot.collected as avg
			from panel, round, ballot, judge, event, entry
			where judge.id = ballot.judge
			and ballot.panel = panel.id
			and panel.round = round.id
			and round.timeslot = ? 
			".$flight_line."
			".$site_line."
			".$limit."
			and ballot.entry = entry.id
			and entry.dropped = 0
			and ballot.collected_by != 0
			and round.event = event.id
			and event.type != \"wudc\"
			group by panel.id, judge.id
			order by judge.code, judge.last
		");

		Tab::Judge->set_sql( wudc_collected_by_timeslot => "
			select distinct judge.*
			from panel, round, ballot, judge, event, entry
			where judge.id = ballot.judge
			and ballot.panel = panel.id
			and ballot.collected_by != 0
			and panel.round = round.id
			and round.timeslot = ? 
			and round.event = event.id
			and event.type = \"wudc\"
			".$flight_line."
			".$site_line."
			".$limit."
			and ballot.entry = entry.id
			and entry.dropped = 0
			and ballot.chair = 1
			group by panel.id
			order by judge.code, judge.last
		");

		return (Tab::Judge->search_collected_by_timeslot($timeslot->id), Tab::Judge->search_wudc_collected_by_timeslot($timeslot->id));

	} elsif ($status eq "uncollected") { 

		Tab::Judge->set_sql( uncollected_by_timeslot => "
			select distinct judge.*, panel.flight as tier, panel.id as panelid
			from panel, round, ballot, judge, event, entry
			where judge.id = ballot.judge
			and ballot.panel = panel.id
			and panel.round = round.id
			and round.timeslot = ? 
			".$flight_line."
			".$site_line."
			".$limit."
			and ballot.entry = entry.id
			and entry.dropped = 0
			and ballot.collected_by = 0
			and round.event = event.id
			and event.type != \"wudc\"
			and ballot.audit = 0
			group by panel.id, judge.id
			order by judge.code, judge.last
		");

		Tab::Judge->set_sql( wudc_uncollected_by_timeslot => "
			select distinct judge.*
			from panel, round, ballot, judge, event, entry
			where judge.id = ballot.judge
			and ballot.panel = panel.id
			and ballot.collected_by = 0
			and panel.round = round.id
			and round.timeslot = ? 
			and round.event = event.id
			and event.type = \"wudc\"
			".$flight_line."
			".$site_line."
			".$limit."
			and ballot.entry = entry.id
			and entry.dropped = 0
			and ballot.audit = 0
			and ballot.chair = 1
			group by panel.id
			order by judge.code, judge.last
		");

		return (Tab::Judge->search_uncollected_by_timeslot($timeslot->id), Tab::Judge->search_wudc_uncollected_by_timeslot($timeslot->id));

	} else { 

		Tab::Judge->set_sql( by_timeslot => "
			select distinct judge.*, ballot.audit as avg
			from panel, round, judge, ballot, entry, event
			where panel.round = round.id
			and round.timeslot = ? 
			and panel.id = ballot.panel
			and round.event = event.id
			and ballot.judge = judge.id
			and ballot.entry = entry.id
			and entry.dropped = 0
			".$flight_line."
			".$site_line."
			".$limit."
			group by panel.id, judge.id
			order by panel.letter
		");

		return Tab::Judge->search_by_timeslot($timeslot->id);
	}

</%init>

