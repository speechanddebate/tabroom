<%args>
	$individual => undef
	$tourn_id => undef
	$start_date => undef
</%args>
<%perl>

	my $debug=0;
	my $dbh = Tab::DBI->db_Main();
        my %judge_time;
	$start_date = '2014-01-01' unless $start_date;
	#print "start date is $start_date ";
	#print "tourn is $tourn_id, individual=$individual<br>";
	
	unless ($individual) {
	
		my $tourn_str = "tourn_circuit.circuit=43 and tourn.id=tourn_circuit.tourn ";
		$tourn_str = "tourn.id=$tourn_id " if $tourn_id;
		my $j_sth = $dbh->prepare("
		    select distinct judge, ballot.timestamp, timeslot.start, avg(TIMESTAMPDIFF(MINUTE, timeslot.start, ballot.timestamp)) as timediff,
		    person.first, person.last, round.name, count(distinct panel.id) as rds_judged, person.id
		    from ballot, panel, judge, round, person, tourn, timeslot, tourn_circuit, event
		    left join setting tag1 on tag1.event=event.id and tag1.tag='level' and tag1.type = 'event'
		    left join setting tag2 on tag2.event=event.id and tag2.tag='online_ballots' and tag2.type = 'event'
		    where $tourn_str
		    and event.tourn=tourn.id
		    and round.event=event.id
		    and timeslot.id=round.timeslot
		    and panel.round=round.id
		    and panel.bye=0
		    and ballot.bye=0
		    and ballot.noshow=0
		    and ballot.panel = panel.id
		    and ballot.audit = 1
		    and judge.id=ballot.judge
		    and person.id=judge.account
		    and TIMESTAMPDIFF(MINUTE, timeslot.start, ballot.timestamp) < 200
		    and TIMESTAMPDIFF(MINUTE, timeslot.start, ballot.timestamp) > 92
		    and tag1.value='open'
		    and tag2.value=1
		    and timeslot.start > '$start_date'
		    group by person.id
		    order by timediff
		    ");
	
		$j_sth->execute();
	
		while (my ($judge, $timestamp, $start_time, $timediff, $first, $last, $name, $rds_judged, $id)  = $j_sth->fetchrow_array() ) {
			#print $judge." ".$first." ".$last." ".$timediff." and judged $rds_judged <Br>";
			$judge_time{$judge}{'name'} = $last.", ".$first;
			$judge_time{$judge}{'rds'} = $rds_judged;
			$judge_time{$judge}{'avg'} = $timediff;
			$judge_time{$judge}{'person_id'} = $id;
		}
		
		return %judge_time;
	}
	
#select distinct judge, ballot.timestamp, panel.started,
#TIMESTAMPDIFF(MINUTE, panel.started, ballot.timestamp) as timediff
#from ballot, panel where panel.round=83895 and ballot.panel = panel.id
#order by timediff;

	if ($individual) {

		my $j2_sth = $dbh->prepare("
		    select distinct judge, ballot.timestamp, timeslot.start, TIMESTAMPDIFF(MINUTE, timeslot.start, ballot.timestamp) as timediff,
		    person.first, person.last, round.name, tourn.name as tourn_name, ballot.panel, tourn.start as tourn_start, round.label, event.name as event_name, event.id
		    from ballot, panel, judge, round, person, tourn, timeslot, tourn_circuit, event
		    left join setting tag1 on tag1.event=event.id and tag1.tag='level' and tag1.type = 'event'
		    left join setting tag2 on tag2.event=event.id and tag2.tag='online_ballots' and tag2.type = 'event'
		    where tourn_circuit.circuit=43
		    and tourn.id=tourn_circuit.tourn
		    and event.tourn=tourn.id
		    and round.event=event.id
		    and timeslot.id=round.timeslot
		    and panel.round=round.id
		    and panel.bye=0
		    and ballot.bye=0
		    and ballot.noshow=0
		    and ballot.panel = panel.id
		    and ballot.audit = 1
		    and judge.id=ballot.judge
		    and judge.account=$individual
		    and person.id=judge.account
		    and tag1.value='open'
		    and tag2.value=1
		    and timeslot.start > '$start_date'
		    and TIMESTAMPDIFF(MINUTE, timeslot.start, ballot.timestamp) < 200
		    and TIMESTAMPDIFF(MINUTE, timeslot.start, ballot.timestamp) > 92
		    ");
	
		#and setting.event=event.id
		#and setting.tag='online_ballots'
		#and setting.value=1

		$j2_sth->execute();
	
		while (my ($judge, $timestamp, $start, $timediff, $first, $last, $name, $tourn_name, $panel, $tourn_start, $label, $event_name)  = $j2_sth->fetchrow_array() ) {
			#print $judge." ".$first." ".$last." ".$timediff." in round $name start $start ends at $timestamp<Br>";
			#print "tourn is $tourn_name and round is $name<Br>";
			$judge_time{$panel}{'tourn'} = $tourn_name;
			$judge_time{$panel}{'tourn_start'} = $tourn_start;
			$judge_time{$panel}{'event'} = $event_name;
			$judge_time{$panel}{'rd'} = $name;
			$judge_time{$panel}{'rd'} = $label if $label;
			$judge_time{$panel}{'decision_time'} = $timediff;
		}
		
		return %judge_time;
		
	}
</%perl>
