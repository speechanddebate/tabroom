<%args>
	$xml          => undef
	$round        => undef
	$round_id     => undef
	$from_pairing => undef
	$fromjava     => undef
</%args>
<%init>

	unless ($round) {
		$round = Tab::Round->retrieve($round_id);
	}
	
	Tab::Ballot->set_sql( remove_ballots => "
		delete ballot.*
		from ballot, panel
		where ballot.panel = panel.id
		and panel.round = ?
	");

	Tab::BallotValue->set_sql( remove_scores => "
		delete ballot_value.* 
		from ballot_value, ballot, panel
		where ballot_value.ballot = ballot.id
		and ballot.panel = panel.id
		and panel.round = ?
	");

	Tab::Result->set_sql( remove_bracket => "
		delete result_value.*, result.*
		from  result_value, result, result_set
		where result_set.bracket = 1
		and result_set.id = result.result_set
		and result.round = ? 
		and result.id = result_value.result
	");

	Tab::Panel->set_sql( remove_panels => "
		delete from panel where round = ? ");

	Tab::BallotValue->sql_remove_scores->execute($round->id);
	Tab::Ballot->sql_remove_ballots->execute($round->id);
	Tab::Panel->sql_remove_panels->execute($round->id);
	Tab::Result->sql_remove_bracket->execute($round->id);

	$round->published("0") unless $xml;
	$round->post_results("0") unless $xml;
	$round->created("");
	$round->setting("blasted", 0);
	$round->setting("publish_entry_list", 0);
	$round->update unless $xml;

	if ($from_pairing || $fromjava) {
		$m->redirect("/panel/manipulate/manual_powermatch.mhtml?round_id=$round_id&msg=Round deleted");
	}
	
	return;

</%init>
		
