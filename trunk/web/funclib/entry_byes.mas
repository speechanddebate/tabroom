<%args>
	$event	  => undef
	$round    => undef
	$last     => undef
	$public   => undef
	$elimstoo => undef
	$forfeits => undef
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main(); 

	my $round_limit = " and round.name <= ".$round->name." " if $round && $round->name;
	$round_limit .= " and round.post_results > 0 " if $public;
	undef $round_limit if $last;

	my $lastq = 'and round.type != "elim" and round.type != "final" ';
	$lastq = " and round.name = ".$round->name if $last;
	undef $lastq if $elimstoo;

	my %entry_byes = ();
	my %entry_forfeits = ();

	my $bye_sth = $dbh->prepare('
		select entry.id, ballot.bye, panel.bye, ballot_value.tag, ballot_value.value, ballot.noshow
		from round
		left join panel on panel.round = round.id
		left join ballot on ballot.panel = panel.id
		left join entry on entry.id = ballot.entry
		left join ballot_value on ballot_value.ballot = ballot.id and ballot_value.tag = "ballot"
		where round.event = '.$event->id."
		$round_limit
		$lastq
		group by ballot.entry
		order by ballot.entry
	");

	$bye_sth->execute();

	while( my ($entry_id, $bbye, $pbye, $tag, $value, $forfeit) = $bye_sth->fetchrow_array() ) {

		next unless ($bbye > 0 || $pbye > 0 || $forfeit > 0);
		if ($tag && $tag eq "ballot") { 
			$entry_byes{$entry_id}++ if $value == 1 && ($pbye || $bbye);
		} elsif ($pbye) { 
			$entry_byes{$entry_id}++;
		} elsif ($bbye) { 
			$entry_byes{$entry_id}++;
		} elsif ($forfeit) {
			$entry_forfeits{$entry_id}++;
		}
	}

	return (\%entry_byes, \%entry_forfeits) if $forfeits;
	return %entry_byes;

</%init>
