<%args>
	$tourn
	$by_region => undef
	$by_entry  => undef
	$by_result => undef
</%args>
<%perl>

	if ($by_entry) { 

		my $dbh = Tab::DBI->db_Main();

		my $sth = $dbh->prepare("
			select distinct entry_student.id, entry.id, entry_student.student
			from entry_student, entry, event
			where entry.event = event.id
			and event.tourn = ".$tourn->id."
			and entry.id = entry_student.entry
			group by entry_student.id
			order by event.id, entry.id
		");

		my %entry_students;

		$sth->execute();

		while (my ($id, $entry, $student)  = $sth->fetchrow_array() ) {
			push @{$entry_students{$entry}}, $student;
		}

		return %entry_students;

	} elsif ($by_region) { 

		Tab::Student->set_sql( region_by_tourn => "
			select distinct student.*, entry.id as entry, region.id as region
			from student, entry_student, entry, school, region
			where student.id = entry_student.student
			and entry_student.entry = entry.id
			and entry.tourn = ? 
			and entry.school = school.id
			and school.region = region.id
			order by school.name, student.last ");

		return Tab::Student->search_region_by_tourn($tourn->id);

	} elsif ($by_result) { 

		Tab::Student->set_sql( by_result_tourn => "
			select distinct student.*, chapter.name as school, chapter.id as code, chapter.level as event, chapter.district_id as region
			from student, ballot_value, ballot, entry, event, chapter
			where event.tourn = ? 
			and entry.event = event.id
			and entry.id = ballot.entry
			and ballot.id = ballot_value.ballot
			and ballot_value.student = student.id
			and student.chapter = chapter.id
			order by student.chapter, student.last ");

		return Tab::Student->search_by_result_tourn($tourn->id);

	} else { 


		Tab::Student->set_sql( by_tourn => "
			select distinct student.*, entry.id as entry, school.id as school
			from student, entry_student, entry, school, event
			where student.id = entry_student.student
			and entry_student.entry = entry.id
			and entry.event = event.id
			and event.tourn = ? 
			and entry.school = school.id
			group by student.id
			order by school.name, student.last
			");

		return Tab::Student->search_by_tourn($tourn->id);

	}

</%perl>

