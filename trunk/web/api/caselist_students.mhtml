<%args>
	#Pass in a school by chapter ID code in the URL parameters
	$chapter_id => undef
	
</%args>
<%init>

	#Retrieve the chapter object by the chapter_id code
        my $chapter = Tab::Chapter->retrieve($chapter_id);
        
	#If chapter wasn't found, print an error and abort
	unless ($chapter) {
		$m->print("<?xml version='1.0' encoding='UTF-8' standalone='yes'?>\r\n<ERROR>School not found.</ERROR>");
		$m->abort;
 	}

	#Initiate new XML
	use XML::Simple;
	my $xs = new XML::Simple();

	#Print the start of the XML
	$r->content_type("application/xml");
	$m->print("<?xml version='1.0' encoding='UTF-8' standalone='yes'?>\r\n");
	$m->print("<STUDENTS>\r\n");

	#Set the school name for the XML
	my $schoolname = $chapter->name;
	
	#Get all students from the school
        my @students = $m->comp("/api/caselist_chapter_students.mas", chapter => $chapter);

	#Loop through all students and construct XML
	foreach my $student (@students) {
		my $firstname = $student->first;
		my $lastname = $student->last;
		my $fullname = $firstname . " " . $lastname;
		my $studentid = $student->id;
		$m->print("<STUDENT ");
		$m->print("id=\"");
		$m->print($studentid);
		$m->print("\">\n");
		my $xml_student = {
			SCHOOL_NAME => $schoolname,
			FIRST_NAME => $firstname,
			LAST_NAME => $lastname,
			FULL_NAME => $fullname,
			STUDENT_ID => $studentid
		};	
		$m->print($xs->XMLout($xml_student, RootName => "", NoAttr => 1, XMLDecl => 0));
		$m->print("</STUDENT>\n");
	}
	$m->print("</STUDENTS>");
</%init>
