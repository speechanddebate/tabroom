<%args>
	$timestring => undef
	$output     => "XML"
</%args>
<%init>

	use Tab::XML;
	use JSON;

	$timestring =~ s/T/ /g;

	my $start;
	eval { DateTime::Format::MySQL->parse_datetime($timestring) };

	if ($timestring && not defined $start) { 
		$m->print("TIMESTAMP FORMAT NOT VALID.  USE: YYYY-MM-DD HH:MM:SS");
		$m->abort;
	}
	$start = DateTime->now unless $start;

	my $grace = $start->clone;
	$grace->add(days => 1);

	Tab::Tourn->set_sql( by_date => "
		select distinct tourn.*
		from tourn
		where tourn.start <= ?
		and tourn.end >= ? 
		and tourn.hidden != 1
		order by tourn.name ");

	my @tourns = Tab::Tourn->search_by_date(
		DateTime::Format::MySQL->format_datetime($grace), 
		DateTime::Format::MySQL->format_datetime($start));

	my $tourns = [];
	my $events = [];
	
	foreach my $tourn (@tourns) { 

		my $xml_tourn = {
			ID           => $tourn->id,
			ID           => $tourn->id,
			TOURNNAME    => $tourn->name,
			STARTDATE    => Tab::xmldt($tourn->start),
			ENDDATE      => Tab::xmldt($tourn->end),
			DOWNLOADSITE => "tabroom.com"
		};

		push (@{$tourns}, $xml_tourn);
	
		foreach my $event ($tourn->events) { 

			my $xml_event = {
				EVENTNAME => $event->name,
				ID        => $event->id,
				TOURN     => $tourn->id
			};

			push (@{$events}, $xml_event);
		}
	}

	my $xml_hash = {
		TOURN => $tourns,
		EVENT => $events
	};

	if ($output eq "json") {

        my $json = JSON->new->allow_nonref;
		$r->content_type('application/json');
        print $json->pretty->encode( $xml_hash )

	} else { 

		$r->content_type('application/xml');
		my $xs = new XML::Simple();
		print $xs->XMLout($xml_hash, RootName => 'TOURNLIST', NoAttr => 1, XMLDecl => 1);

	}
	
</%init>
