<%args>
	$tourn_id
	$event_id    => undef
	$sorttype    => undef
</%args>

<%init>

	use Data::Dumper;
	use Time::HiRes qw( time );
	my $start = time(); 
	
	#some initial variables we'll need later
	unless ( $event_id ) {
		$m->print("No event identifier has been received; hit the back button on your browser and try again.<br>");
		$m->abort;
	}

	my $event = Tab::Event->retrieve( $event_id );	
	my $cumesheet_published;
	foreach my $result_set ($event->result_sets) {
		if ($result_set->label eq "Cume Sheet" and $result_set->published == 1) { $cumesheet_published = 1 };
	}
	unless ( $cumesheet_published ) {
		$m->print( "The tournament director has not yet authorized the release of prelim seeds; use the back button on your browser.<br>" ) ;
		$m->abort;
	}
	my @temp = Tab::TournCircuit->search( tourn=> $event->tourn );
	my $circuit_id=$temp[0]->circuit; 
	my $year = Tab::school_year->year;
	
	my @ballots;
	Tab::BallotValue->columns(TEMP => qw/panel_bye/);						
	Tab::BallotValue->columns(TEMP => qw/ballot_bye/);
	Tab::BallotValue->columns(TEMP => qw/judge/);	
	Tab::BallotValue->columns(TEMP => qw/judge_name/);	
	Tab::BallotValue->columns(TEMP => qw/panel/);	
	Tab::BallotValue->columns(TEMP => qw/entry/);
	Tab::BallotValue->columns(TEMP => qw/tag/);
	Tab::BallotValue->columns(TEMP => qw/score /);
	Tab::BallotValue->columns(TEMP => qw/ballot_id /);
	Tab::BallotValue->columns(TEMP => qw/round /);
	Tab::BallotValue->columns(TEMP => qw/round_label /);
	Tab::BallotValue->set_sql(pull_entry => "
		SELECT ballot_value.*, entry.id as entry, ballot.judge as judge, panel.id as panel, round.name as round, CAST(round AS DECIMAL(10,2)), round.label as round_label, panel.bye as panel_bye, ballot.bye as ballot_bye, CONCAT(judge.last, ', ', judge.first) as judge_name, ballot.id as ballot_id
		FROM ballot, entry, ballot_value, panel, round, judge
		WHERE entry.event=$event_id
		and ballot.entry=entry.id
		and ballot_value.ballot=ballot.id
		and ballot_value.tag != 'rfd'
		and panel.id=ballot.panel
		and round.id=panel.round
		and judge.id=ballot.judge
		and round.published = 1
		order by entry.id asc, round asc, ballot.id asc, ballot_value.tag asc
	");
	@ballots = Tab::BallotValue->search_pull_entry;

	#So it stores all the ballot_values in two hashes, one for scores, one for judges
	#For %team_scores, it goes {entry.id}{round.id}{student}, and note that if it stores a zero for student it's a team score
	my %team_scores;
	my %team_judges;
	foreach my $ballot (@ballots) {
		if ($team_scores{$ballot->entry}{$ballot->round}{$ballot->ballot_id}{$ballot->student}) {
			$team_scores{$ballot->entry}{$ballot->round}{$ballot->ballot_id}{$ballot->student} .= ' - '.$ballot->value;
		} else {
			$team_scores{$ballot->entry}{$ballot->round}{$ballot->ballot_id}{$ballot->student} = $ballot->value;
		}
		if ( $ballot->tag eq "ballot" ) {
			$team_scores{$ballot->entry}{$ballot->round}{$ballot->ballot_id}{0} .= ' '.$ballot->value;
		}
		if ( $ballot->panel_bye or $ballot->ballot_bye ) { 
			$team_scores{$ballot->entry}{$ballot->round}{$ballot->ballot_id}{$ballot->student} = 2;
		}
		$team_judges{$ballot->entry}{$ballot->round}{$ballot->ballot_id}{'id'} = $ballot->judge;
		$team_judges{$ballot->entry}{$ballot->round}{$ballot->ballot_id}{'name'} = $ballot->judge_name;
		$team_judges{$ballot->entry}{$ballot->round}{'panel'} = $ballot->panel;
		$team_judges{$ballot->entry}{$ballot->round}{'round_label'} = $ballot->round_label;
	}
	
	#set opponent
	foreach my $entry_key ( keys %team_scores) {
		foreach my $round_key ( keys %{$team_scores{$entry_key}} ) {			
			my @opponents = Tab::Ballot->search( panel => $team_judges{$entry_key}{$round_key}{'panel'} );				
			foreach my $oppon (@opponents) {
				if ($oppon->entry->id != $entry_key) { $team_judges{$entry_key}{$round_key}{'oppn'} = $oppon->entry->code };
			}
		}
	}

	#pull round info
	my $n_prelims; my $hi_prelim; 
	my @rounds = $m->comp("/funclib/event_rounds.mas", event => $event, done => "yes");
	foreach my $round ( @rounds ) {
		if ($round->type ne 'elim' and $round->type ne 'final' ) {
			$n_prelims++;
			if ($round->name > $hi_prelim) { $hi_prelim = $round };
		}
	}


	#create a hash for team info for sorting
	
	my %team_entry_info;
	foreach my $entry_key ( keys %team_scores) {
		my $entry_names = Tab::Entry->retrieve( $entry_key );				
		$team_entry_info{$entry_key}{'school'} = $entry_names->school->name;
		$team_entry_info{$entry_key}{'fullname'} = $entry_names->name;
		$team_entry_info{$entry_key}{'seed'} = 999;
	}

	#Add byes in
	my @panels;
	Tab::Panel->columns(TEMP => qw/entry /);	
	Tab::Panel->columns(TEMP => qw/round_id /);	
	Tab::Panel->columns(TEMP => qw/ballot_id /);	
	Tab::Panel->set_sql(pull_panels => "
		SELECT ballot.bye, panel.bye, panel.id, ballot.entry as entry, round.name as round_id, ballot.id as ballot_id
		FROM ballot, panel, round
		WHERE round.event=$event_id
		and panel.round=round.id
		and ballot.panel=panel.id
		and (ballot.bye=1 or panel.bye=1)
	");
	@panels = Tab::Panel->search_pull_panels;
	foreach my $panel (@panels) {
		if ( $team_entry_info{$panel->entry} ) {
			$team_scores{$panel->entry}{$panel->round_id}{$panel->ballot_id}{0} = 2;
		}
	}


	#now load results info

	my ($entries_ref, $tbs_ref, $desc_ref, $noshow_ref, $meh, $panrank_ref, $panletter_ref, $long_desc_ref) = $m->comp("/tabbing/results/order_entries.mas", long_names => 1, round => $hi_prelim);
	my $x;

	#figure out where in the sort order wins and points are	
	my $win_str; my $pts_str;
	foreach my $key ( keys %{$desc_ref} ) {
		if ( ${$desc_ref}{$key} eq 'W' ) { $win_str = $key } ;
		if ( ${$desc_ref}{$key} eq 'Pts' ) { $pts_str = $key } ;
	}

	#assign wins and points
	foreach my $key (sort {$a <=> $b} keys %{$entries_ref}) { 
		$x++;
		foreach my $entry_id (@{${$entries_ref}{$key}}) { 
			$team_entry_info{$entry_id}{'seed'}=$x;
			$team_entry_info{$entry_id}{'wins'}= ${$tbs_ref}{$entry_id."-".$win_str} ;
			$team_entry_info{$entry_id}{'points'}= ${$tbs_ref}{$entry_id."-".$pts_str} ;
		}
	}
	
#	my $sort_str="sort { $team_entry_info{$a}->{'school'} cmp $team_entry_info{$b}->{'school'} }";
	my @team_entry_order;
	if ($sorttype eq 'alpha') {
		@team_entry_order = sort { $team_entry_info{$a}->{'school'} cmp $team_entry_info{$b}->{'school'} } keys %team_entry_info;
	} else {
		@team_entry_order = sort { $team_entry_info{$a}->{'seed'} <=> $team_entry_info{$b}->{'seed'} } keys %team_entry_info;
	} ;
		
	my @decision;
	$decision[0]="Loss";	
	$decision[1]="Win";	
	$decision[2]="bye/fft";	
</%init>

	<& menu.mas, tourn_id => $tourn_id, event_id => $event_id, whoami => "cumesheet" &>

	<h2> <% $event->tourn->name %> Debate Cumulative Results sheet for <% $event->name %> </h2>

	<div class="main">

	<script>
		
		functiontest = function() {
			var MasterTable = document.getElementById("table_body");
			var TableRows = MasterTable.getElementsByTagName("tr");
			for (var i = 0; i < TableRows.length; i++) {
				TableRows[i].style.display = (TableRows[i].style.display === "none") ? "table-row" : "none" ;
			}
			
		}

		showall = function() {
			var MasterTable = document.getElementsByTagName("tr");
			for (var i = 0; i < MasterTable.length; i++) {
				MasterTable[i].style.display = "table-row";
			}
			
		}

		hideall = function() {
			var MasterTable = document.getElementsByClassName("none");
			for (var i = 0; i < MasterTable.length; i++) {
				MasterTable[i].style.display = "none";
			}
			
		}

		var row_name ="team1";
		functiontest2 = function(row_name) {
//			var TableRows = document.getElementsByName("team1");
//			window.alert("Received variable is:" + row_name);
			var TableRows = document.getElementsByName(row_name);
			for (var i = 0; i < TableRows.length; i++) {
				TableRows[i].style.display = (TableRows[i].style.display === "none") ? "table-row" : "none" ;
			}
			
		}
		
	</script>

	<table>
	<td><a onclick="showall();" >Show detail for all teams</a></td>
	<td><a onclick="hideall();" >Hide detail for all teams</a> </td>
	<td><a href="debate_cumesheet.mhtml?event_id=<% $event_id %>&sorttype=seed&tourn_id=<% $tourn_id %>"> sort by seed </a></td>
	<td><a href="debate_cumesheet.mhtml?event_id=<% $event_id %>&sorttype=alpha&tourn_id=<% $tourn_id %>"> sort alphabetically </a></td>
	</table><br>
	
		<table>
		
			<tbody id="table_body">


%#			foreach my $entry_key ( sort { $team_entry_info{$a}->{'school'} cmp $team_entry_info{$b}->{'school'} } keys %team_entry_info) {
%			foreach my $entry_key ( @team_entry_order ) {

%			my @temp_array = Tab::EntryStudent->search( entry=>$entry_key);				

			<tr class="yellowrow" >
				<td><% $team_entry_info{$entry_key}{'school'} %></td>
				<td>
%				#Add a hyperlink to the bid sheets if its a 2-person team				
%				if ( scalar(@temp_array) == 2) {				
				<a href="/index/results/team_lifetime_record.mhtml?id1=<% $temp_array[0]->student %>&id2=<% $temp_array[1]->student %>">
%				}				
				<% $team_entry_info{$entry_key}{'fullname'} %>
				</td>
%				my $n_panels = scalar keys %{$team_scores{$entry_key}};				
%				if ($n_panels > $n_prelims) { $n_panels = $n_prelims };
				<td style="white-space:nowrap;"> <% $team_entry_info{$entry_key}{'wins'} %>-<% $n_panels-$team_entry_info{$entry_key}{'wins'} %></td>
				<td style="white-space:nowrap;"> <% $team_entry_info{$entry_key}{'points'} %> pts </td>
				<td style="white-space:nowrap;"> seed <% $team_entry_info{$entry_key}{'seed'} %></td>
				<td align="right"><a onclick="functiontest2('team<% $entry_key %>');">hide/show</a></td>
			</tr>
			<tr class="none" name="team<% $entry_key %>" bgcolor="LightGray" >
				<td>Round</td>
				<td>Opponent</td>
				<td>Judge</td>
				<td>Decision</td>				
%				foreach my $entry_student (@temp_array) {
				<td>
				<a href="/index/results/speaker_detail.mhtml?spkr_id=<% $entry_student->student %>&year=<% $year %>&event_type=debate&circuit_id=<% $circuit_id %>">
				<% $entry_student->student->first  %> <% $entry_student->student->last %>
				</td>
%				}
			</tr>

%			my $ctr=0; my $bg_color="";

%			foreach my $round_key ( sort { $a <=> $b} keys %{$team_scores{$entry_key}} ) {			

%			$ctr++;
%			$bg_color=""; if ($ctr % 2 == 0) { $bg_color="Gainsboro" };

			<tr class="none" name="team<% $entry_key %>" bgcolor="<% $bg_color %>">
		
				<td>
%				if ( $team_judges{$entry_key}{$round_key}{'round_label'} ) { print $team_judges{$entry_key}{$round_key}{'round_label'} }
%				else { print $round_key.' '.$team_judges{$entry_key}{$round_key}{'round_label'}  } ;				
%#					<% $round_key %>
				</td>
				<td>
					<% $team_judges{$entry_key}{$round_key}{'oppn'} %>
				</td>

				<td>
%				foreach my $ballot_key ( sort keys %{$team_scores{$entry_key}{$round_key}} ) {			
					<% $team_judges{$entry_key}{$round_key}{$ballot_key}{'name'} %><br>
%				}
				</td>
				<td>
%				foreach my $ballot_key ( sort keys %{$team_scores{$entry_key}{$round_key}} ) {							
%					if ($decision[$team_scores{$entry_key}{$round_key}{$ballot_key}{0}] eq 'bye/fft') { print "bye/fft" }; 
%					if ($decision[$team_scores{$entry_key}{$round_key}{$ballot_key}{0}] ne 'bye/fft') { print $decision[$team_scores{$entry_key}{$round_key}{$ballot_key}{0}] };
					<br>
%				}									
				</td>					

%				foreach my $entry_student (@temp_array) {
				<td style="white-space:nowrap;">
%					foreach my $ballot_key ( sort keys %{$team_scores{$entry_key}{$round_key}} ) {							
					<% $team_scores{$entry_key}{$round_key}{$ballot_key}{$entry_student->student} %><br>
%					}					
				</td>
%				}
			</tr>
%			}

%			}	
			</tbody>
		</table>	

% my $end = time(); print "<br>Load time ";
% printf("%.2f\n", $end - $start);

	</div>
