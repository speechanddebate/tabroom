<%args>
	$account    => undef
	$chapter    => undef
	$chapter_id => undef
	$year       => undef
	$circuit_id => undef	
</%args>
<%init>
	
	$chapter = Tab::Chapter->retrieve($chapter_id) if $chapter_id;
	$m->abort unless $chapter;

	use Time::HiRes qw( time );
	use POSIX qw(strftime);
	my $code_start = time(); 
	##Tab::debuglog("CODE STARTS");


	unless ($year) { 
		my $this_year = Tab::school_year;
		$year = $this_year->year;
	}

	my $start_string = "07/01/$year";
	my $end_string = "06/30/".($year + 1);

	my $start_dt = Tab::dtme($start_string);	
	my $end_dt = Tab::dtme($end_string);	

	my $code_end = time(); ##Tab::debuglog("Time before first pull ".sprintf("%.2f", $code_end-$code_start) );

	#Load results for debate teams; can't link to entries in 1 pull because so many tourneys
	#don't publish final results

	Tab::ResultValue->columns(TEMP => qw/event_name/);	
	Tab::ResultValue->columns(TEMP => qw/tourn_name/);	
	Tab::ResultValue->columns(TEMP => qw/entry_id/);		
	Tab::ResultValue->columns(TEMP => qw/rank/);		
	Tab::ResultValue->set_sql(pull_results => "
		select result_value.*, event.name as event_name, entry.id as entry_id, tourn.name as tourn_name, result.rank as rank
		from entry, school, event, tourn, result_set, result_value, result
		where entry.school=school.id
		and school.chapter = $chapter_id
		and result.entry=entry.id
		and event.id=entry.event
		and tourn.id=entry.tourn
		and result_set.tourn=tourn.id
		and result.result_set=result_set.id
		and result_value.result=result.id
		and tourn.start >= '$start_dt'
		and tourn.end <=  '$end_dt'
		and result_set.label='Final Places'
		and result_set.published=1
		and result_value.tag='Place'
		and event.type !='speech'
		and event.type !='congress'
		order by rank asc
	");
	
	my @chpt_result = Tab::ResultValue->search_pull_results;
	my %debate_results;	
	foreach my $result (@chpt_result) {
		$debate_results{$result->entry_id}{'place'} = $result->value;
		$debate_results{$result->entry_id}{'rank'} = $result->rank;
		$debate_results{$result->entry_id}{'percentile'} = $result->result->percentile;
	}

	$code_end = time(); ##Tab::debuglog("Time AFTER first pull ".sprintf("%.2f", $code_end-$code_start) );
	
	#now pull debate entries and link them back to the result_set values
	Tab::Entry->set_sql(pull_entry => "
		SELECT entry.*, tourn.start as tourn_start
		FROM entry, school, event, tourn
		WHERE school.chapter = $chapter_id
		and entry.school=school.id
		and tourn.id=event.tourn
		and event.id=entry.event
		and tourn.start >= '$start_dt'
		and tourn.end <=  '$end_dt'
		and event.type != 'speech'
		and event.type != 'congress'
	");
	
	my @debate_entries = Tab::Entry->search_pull_entry;
	$code_end = time(); ##Tab::debuglog("Time AFTER first pull ".sprintf("%.2f", $code_end-$code_start) );	
	
	foreach my $entry (@debate_entries) {
		$debate_results{$entry->id}{'name'} = $entry->name;
		$debate_results{$entry->id}{'tourn'} = $entry->event->tourn->name;
		$debate_results{$entry->id}{'tourn_start'} = Tab::pickerdate($entry->event->tourn->start);
		$debate_results{$entry->id}{'event'} = $entry->event->name;	
		my %win = $m->comp("/funclib/entry_wins.mas", event => $entry->event, public => 1 );
		$debate_results{$entry->id}{'wins'} = $win{$entry->id};
		$debate_results{$entry->id}{'wins'} = 0 unless $debate_results{$entry->id}{'wins'};
		my %loss = $m->comp("/funclib/entry_losses.mas", event => $entry->event, public => 1 );
		$debate_results{$entry->id}{'losses'} = $loss{$entry->id};
		$debate_results{$entry->id}{'losses'} = 0 unless $debate_results{$entry->id}{'losses'};
		$debate_results{$entry->id}{'rank'} = "" unless $debate_results{$entry->id}{'rank'};
	}
	
	#speaker awards
	Tab::EntryStudent->columns(TEMP => qw/place/);		
	Tab::EntryStudent->set_sql(pull_speakers => "
		select entry_student.*, result_value.value as place
		from entry_student, school, entry, student, result, event, tourn, result_set, result_value
		where entry.id=entry_student.entry
		and entry.school=school.id
		and school.chapter = $chapter_id
		and student.id=entry_student.student
		and result.student=entry_student.student
		and event.id=entry.event
		and tourn.id=entry.tourn
		and tourn.start >= '$start_dt'
		and tourn.end <=  '$end_dt'
		and result_set.tourn=tourn.id
		and result_set.id=result.result_set
		and result_set.label='Speaker Awards'
		and result_set.published=1		
		and result_value.result=result.id
		and result_value.tag='Order'
		and event.type !='speech'
		and event.type !='congress'
		order by result_value.value+0
	");
	my @speakers = Tab::EntryStudent->search_pull_speakers;
	$code_end = time(); ##Tab::debuglog("Time AFTER speaker pull ".sprintf("%.2f", $code_end-$code_start) );	

	#now pull IE entries and link them back to the result_set values
	Tab::Entry->columns(TEMP => qw/competitor_name/);			
	Tab::Entry->columns(TEMP => qw/rank_total/);				
	Tab::Entry->columns(TEMP => qw/rank_avg/);					
	Tab::Entry->set_sql(pull_entry => "
		SELECT entry.*, Concat_WS(' ', student.first, student.last) as competitor_name, sum(ballot_value.value) as rank_total, avg(ballot_value.value) as rank_avg
		FROM entry, school, event, tourn, entry_student, student, ballot, ballot_value, panel, round
		WHERE school.chapter = $chapter_id
		and entry.school=school.id
		and tourn.id=event.tourn
		and event.id=entry.event
		and entry.id=entry_student.entry
		and student.id=entry_student.student
		and tourn.start >= '$start_dt'
		and tourn.end <=  '$end_dt'
		and (event.type = 'speech' or event.type = 'congress' )
		and ballot.entry=entry.id
		and ballot_value.ballot=ballot.id
		and ballot_value.tag='rank'
		and ballot.panel = panel.id
		and panel.round = round.id
		and round.post_results > 1
		group by entry.id
		order by rank_avg
	");
	
	my @ie_entries = Tab::Entry->search_pull_entry;
	$code_end = time(); ##Tab::debuglog("Time AFTER IE pull ".sprintf("%.2f", $code_end-$code_start) );	

	#pull the Final Places
	Tab::ResultValue->columns(TEMP => qw/entry_id/);		
	Tab::ResultValue->columns(TEMP => qw/rank/);		
	Tab::ResultValue->set_sql(pull_results => "
		select result_value.*, entry.id as entry_id
		from entry, school, event, tourn, result_set, result_value, result
		where entry.school=school.id
		and school.chapter = $chapter_id
		and result.entry=entry.id
		and event.id=entry.event
		and tourn.id=entry.tourn
		and result_set.tourn=tourn.id
		and result.result_set=result_set.id
		and result_value.result=result.id
		and tourn.start >= '$start_dt'
		and tourn.end <=  '$end_dt'
		and result_set.label='Final Places'
		and result_set.published = 1
		and result_value.tag='Place'
		and (event.type ='speech' or event.type ='congress')
	");

	my @ie_result = Tab::ResultValue->search_pull_results;
	$code_end = time(); ##Tab::debuglog("Time AFTER IE RESULTS pull ".sprintf("%.2f", $code_end-$code_start) );	
	my %ie_final_place;
	foreach my $result (@ie_result) {
		$ie_final_place{$result->entry_id} = $result->value ;
	}
	
</%init>

	<& menu.mas, circuit_id => $circuit_id, year => $year &>
	
	<div class="main">
	
		<h2>Seasonal Results for <% $chapter->short_name %></h2>

		<& /funclib/tablesorter.mas, table => "sortme" &>

		<h4>Debate Results</h4>

		<p class="explain"> 
			Final places will only be available if published by the tournament.
		</p>
				
		<table cellpadding="4" id="sortme">

			<thead>
				<tr class="yellowrow">
					<th class="smallish">
						Tourney
					</th>
					<th class="smallish">
						Dates
					</th>
					<th class="smallish">
						Event
					</th>
					<th class="smallish">
						Entry
					</th>
					<th class="smallish">
						Prelim Record
					</th>
					<th class="smallish">
						Finish
					</th>
					<th class="smallish">
						Rank Percentile
					</th>
				</tr>
				</tr>
			</thead>

			<tbody class='smallish'>

%				foreach my $key (sort {$debate_results{$a}->{'rank'} <=> $debate_results{$b}->{'rank'} || $debate_results{$b}->{'wins'} <=> $debate_results{$a}->{'wins'} || $debate_results{$a}->{'losses'} <=> $debate_results{$b}->{'losses'}} keys(%debate_results)) {			
%				if ( $debate_results{$key}{'wins'} > 0 || $debate_results{$key}{'losses'} > 0 ) {
    				<tr>
					<td> <% $debate_results{$key}{'tourn'}  %> </td>
					<td> <% $debate_results{$key}{'tourn_start'} %> </td>					
					<td> <% $debate_results{$key}{'event'}  %> </td>
					<td> <% $key %> <% $debate_results{$key}{'name'}  %> </td>
					<td> <% $debate_results{$key}{'wins'} %>-<% $debate_results{$key}{'losses'} %> </td>						
					<td> <% $debate_results{$key}{'place'} %> </td>											
					<td> 
						<% $debate_results{$key}{'rank'} ? $debate_results{$key}{'rank'}." - " : "" %>
						<% $debate_results{$key}{'percentile'} ? sprintf("%.1f", $debate_results{$key}{'percentile'}/10)."%" : "" %>
					</td>							
				</tr>
%				}	      
%				}					
			</tbody>

		</table>

		<h4>Debate Speaker Awards</h4>

		<p class="explain"> 
			Speaker awards will only be availble if published by the tournament.
		</p>
						
		<table cellpadding="4" id="sortme">
		
			<thead>
				<tr class="yellowrow">
					<th class="smallish">
						Tourney
					</th>
					<th class="smallish">
						Event
					</th>
					<th class="smallish">
						Speaker
					</th>
					<th class="smallish">
						Finish
					</th>
				</tr>
				</tr>
			</thead>

			<tbody>
%				foreach my $spkr (@speakers) {			
					<tr>
						<td> <% $spkr->entry->event->tourn->name %> </td>				
						<td> <% $spkr->entry->event->name %> </td>									
						<td> <% $spkr->student->first %> <% $spkr->student->last %> </td>
						<td> <% $spkr->place %> </td>					
					</tr>
%				}					
			</tbody>

		</table>

		<h4>Individual Events Awards</h4>

		<p class="explain"> 
			Final results will only be availble if published by the tournament.
		</p>		
		<table cellpadding="4" id="sortme">
		
			<thead>
				<tr class="yellowrow">
					<th class="smallish">
						Tourney
					</th>
					<th class="smallish">
						Date
					</th>
					<th class="smallish">
						Event
					</th>
					<th class="smallish">
						Speaker
					</th>
					<th class="smallish">
						Ranks (Total/Avg)
					</th>
					<th class="smallish">
						Final Place
					</th>
				</tr>
			</thead>

			<tbody>

%				foreach my $entry (@ie_entries) {			
					<tr>
						<td> <% $entry->event->tourn->name %> </td>				
						<td> <% Tab::pickerdate($entry->event->tourn->start) %> </td>									
						<td> <% $entry->event->name %> </td>				
						<td> <% $entry->competitor_name %> </td>				
						<td> <% $entry->rank_total %>/<% sprintf("%.2f", $entry->rank_avg) %> </td>				
						<td> <% $ie_final_place{$entry->id} %> </td>				
					</tr>
%				}					
			</tbody>

		</table>


	</div>
