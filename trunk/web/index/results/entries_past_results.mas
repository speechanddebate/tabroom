<%args>
	$id1 => undef
	$id2 => undef
	$startdate => undef
	$enddate => undef
</%args>
<%init>

	my $debug=0;	
	my $student1 = Tab::Student->retrieve($id1) if $id1;
	my $student2 = Tab::Student->retrieve($id2) if $id2;
	
	use Time::HiRes qw( time );
	use DateTime;
	use Date::Parse;
	use Data::Dumper;
	my $start = time(); 

	my $this_year = Tab::school_year;
	my $year = $this_year->year;
	my $start_string = "07/01/$year";
	my $end_string = "06/30/".($year + 1);
	my $start_dt = Tab::dtme($start_string);	
	my $end_dt = Tab::dtme($end_string);	

	# NOW PULL EVERY BALLOT FOR EVERY ENTRY THAT EITHER SPEAKER HAS BEEN ON

	Tab::Ballot->columns(TEMP => qw/entry_code/);
	Tab::Ballot->columns(TEMP => qw/ballot_value_id/);
	Tab::Ballot->columns(TEMP => qw/ballot_value_tag/);
	Tab::Ballot->columns(TEMP => qw/ballot_value_student/);
	Tab::Ballot->columns(TEMP => qw/ballot_value_value/);
	Tab::Ballot->columns(TEMP => qw/round_name/);
	Tab::Ballot->columns(TEMP => qw/round_type/);
	Tab::Ballot->columns(TEMP => qw/round_label/);
	Tab::Ballot->columns(TEMP => qw/event_name/);
	Tab::Ballot->columns(TEMP => qw/tourn_name/);
	Tab::Ballot->columns(TEMP => qw/tourn_id/);
	Tab::Ballot->columns(TEMP => qw/tourn_start/);	
	Tab::Ballot->columns(TEMP => qw/judge_name/);		

	Tab::Ballot->set_sql(pull_ballots => "
		select distinct ballot.id, ballot.*, ballot_value.*, ballot_value.tag as ballot_value_tag, ballot_value.student as ballot_value_student, round.name as round_name, round.label as round_label, event.name as event_name, tourn.name as tourn_name, tourn.start as tourn_start, ballot_value.value as ballot_value_value, round.type as round_type, tourn.id as tourn_id, ballot_value.id as ballot_value_id, CONCAT(judge.last, ', ', judge.first) as judge_name
		from ballot, entry_student, ballot_value, round, panel, event, tourn, judge
		where entry_student.student = ? 
		and ballot.entry=entry_student.entry
		and ballot_value.ballot=ballot.id
		and judge.id=ballot.judge		
		and panel.id=ballot.panel
		and round.id=panel.round
		and round.post_results = 2
		and event.id=round.event
		and tourn.id=event.tourn
		order by tourn_start desc, ballot.panel asc
	");

	my @ballots = Tab::Ballot->search_pull_ballots($student1->id) if $student1;
	push (@ballots, Tab::Ballot->search_pull_ballots($student2->id)) if $student2;

	my %seen = (); 
	@ballots = grep { ! $seen{$_->id} ++ } @ballots;

	my %panel;
	my %summary;
	my $last_entry = - 999;
	my @students;
	my $tourn_order = 1;

	print "This many ballots=".scalar(@ballots)."<br>" if $debug;
		
	foreach my $ballot (@ballots) { 

		if ($debug) { 
			print "ballot_id=".$ballot->id." tourn=".$ballot->tourn_id." rd=".$ballot->round_name." panel=".$ballot->panel." tag=".$ballot->ballot_value_tag; 
			print "judge=".$ballot->judge." value=".$ballot->ballot_value_value." student=".$ballot->ballot_value_student." ballot_value_id=".$ballot->ballot_value_id."<br>";
		}

		$panel{$ballot->panel}{'tourn'} = $ballot->tourn_name;
		$panel{$ballot->panel}{'tourn_id'} = $ballot->tourn_id;
		$panel{$ballot->panel}{'tourn_start'} = substr($ballot->tourn_start,0,10);
		$panel{$ballot->panel}{'event_name'} = $ballot->event_name;
		$panel{$ballot->panel}{'round_name'} = $ballot->round_name;
		$panel{$ballot->panel}{'round_label'} = $ballot->round_name;
		$panel{$ballot->panel}{'round_label'} = $ballot->round_label if $ballot->round_label;
		$panel{$ballot->panel}{'elim'} = 0;
		$panel{$ballot->panel}{'this_yr'} = 0;

		my $epoch = str2time($ballot->tourn_start);
		my $fake_dt = DateTime->from_epoch(epoch => $epoch);

		if ( $fake_dt >= $start_dt ) {
			$panel{$ballot->panel}{'this_yr'} = 1;
		}

		if ( $ballot->round_type eq "elim" || $ballot->round_type eq "final" ) { $panel{$ballot->panel}{'elim'} = 1 };

		if ( $ballot->ballot_value_tag eq "ballot" ) {

			$panel{$ballot->panel}{'judge'} .= "<span class=\"third nospace\">".$ballot->judge_name." </span> ";
			$panel{$ballot->panel}{'total_ballots'}++;
			$panel{$ballot->panel}{'ballots_won'} += $ballot->ballot_value_value;

			if ( $ballot->ballot_value_value == 1 ) { 
				$panel{$ballot->panel}{'decision_str'}.= "W"; 
			} else { 
				$panel{$ballot->panel}{'decision_str'}.= "L"; 
			}

			if ($debug) { 
				print " total_ballots:".$panel{$ballot->panel}{'total_ballots'};
				print " ballots_won:".$panel{$ballot->panel}{'ballots_won'};
			}
		}

		if ( lc($ballot->ballot_value_tag) eq "points" ) {

			if ($ballot->ballot_value_student == $student1->id) { 
				$panel{$ballot->panel}{'spkr1_pts'} .= $ballot->ballot_value_value." "; 
			}

			if ($ballot->ballot_value_student == $student2->id) { 
				$panel{$ballot->panel}{'spkr2_pts'} .= $ballot->ballot_value_value." "; 
			}

			print " student:".$ballot->ballot_value_student if $debug;
			print " pts1:".$panel{$ballot->panel}{'spkr1_pts'} if $debug;
			print " pts2:".$panel{$ballot->panel}{'spkr2_pts'} if $debug;
		}

		if ($last_entry != $ballot->entry ) {
		   	$tourn_order++;
			@students = $ballot->entry->students;
		}

    	$panel{$ballot->panel}{'tourn_order'}=$tourn_order;
    	foreach my $student (@students) {
			if ($student1 && $student->id == $student1->id) { $panel{$ballot->panel}{'spkr1_on_entry'} = 1; }
			if ($student2 && $student->id == $student2->id) { $panel{$ballot->panel}{'spkr2_on_entry'} = 1; }
		}

		$last_entry = $ballot->entry;
		print "<br>" if $debug;
	}

	foreach my $key ( keys %panel ) {

		my $dummy;

		if ( $panel{$key}{'spkr1_on_entry'} == 1 && $panel{$key}{'spkr2_on_entry'} == 1 ) { $dummy="together"; }
		if ( $panel{$key}{'spkr1_on_entry'} == 1 && $panel{$key}{'spkr2_on_entry'} != 1 ) { $dummy="spkr1"; }
		if ( $panel{$key}{'spkr1_on_entry'} != 1 && $panel{$key}{'spkr2_on_entry'} == 1 ) { $dummy="spkr2"; }

		if ( $panel{$key}{'elim'} == 0 ) {
			$summary{$dummy}{'prelim_ballots'} += $panel{$key}{'total_ballots'};
			$summary{$dummy}{'prelim_ballots_won'} += $panel{$key}{'ballots_won'};
			$summary{$dummy}{'prelim_rds'} ++;
			if ( $panel{$key}{'ballots_won'} > ( $panel{$key}{'total_ballots'} - $panel{$key}{'ballots_won'} ) ) {
				$summary{$dummy}{'prelim_wins'} ++;
			}
			if ($dummy eq "together" && $panel{$key}{'this_yr'} == 1 ) {
				$summary{'this_yr'}{'prelim_ballots'} += $panel{$key}{'total_ballots'};
				$summary{'this_yr'}{'prelim_ballots_won'} += $panel{$key}{'ballots_won'};
				$summary{'this_yr'}{'prelim_rds'} ++;
				if ( $panel{$key}{'ballots_won'} > ( $panel{$key}{'total_ballots'} - $panel{$key}{'ballots_won'} ) ) {
					$summary{'this_yr'}{'prelim_wins'} ++;
				}
			} elsif ($panel{$key}{'this_yr'} == 1 ) {
				$summary{'this_year_individual'}{'prelim_ballots'} += $panel{$key}{'total_ballots'};
				$summary{'this_year_individual'}{'prelim_ballots_won'} += $panel{$key}{'ballots_won'};
				$summary{'this_year_individual'}{'prelim_rds'} ++;
				if ( $panel{$key}{'ballots_won'} > ( $panel{$key}{'total_ballots'} - $panel{$key}{'ballots_won'} ) ) {
					$summary{'this_year_individual'}{'prelim_wins'} ++;
				}
			}

		} else {
			$summary{$dummy}{'elim_ballots'} += $panel{$key}{'total_ballots'};
			$summary{$dummy}{'elim_ballots_won'} += $panel{$key}{'ballots_won'};
			$summary{$dummy}{'elim_rds'} ++;
			if ( $panel{$key}{'ballots_won'} > ( $panel{$key}{'total_ballots'} - $panel{$key}{'ballots_won'} ) ) {
				$summary{$dummy}{'elim_wins'} ++;
			}
			if ($dummy eq "together" && $panel{$key}{'this_yr'} == 1 ) {
				$summary{'this_yr'}{'elim_ballots'} += $panel{$key}{'total_ballots'};
				$summary{'this_yr'}{'elim_ballots_won'} += $panel{$key}{'ballots_won'};
				$summary{'this_yr'}{'elim_rds'} ++;
				if ( $panel{$key}{'ballots_won'} > ( $panel{$key}{'total_ballots'} - $panel{$key}{'ballots_won'} ) ) {
					$summary{'this_yr'}{'elim_wins'} ++;
				}
			} elsif ($panel{$key}{'this_yr'} == 1 ) {

				$summary{'this_year_individual'}{'elim_ballots'} += $panel{$key}{'total_ballots'};
				$summary{'this_year_individual'}{'elim_ballots_won'} += $panel{$key}{'ballots_won'};
				$summary{'this_year_individual'}{'elim_rds'} ++;
				if ( $panel{$key}{'ballots_won'} > ( $panel{$key}{'total_ballots'} - $panel{$key}{'ballots_won'} ) ) {
					$summary{'this_year_individual'}{'elim_wins'} ++;
				}

			}
		}
	}
	
	if ($debug) {
	 	my $end = time();
 		print "hash creation processing time:  "; printf("%.2f\n", $end - $start);
	}
		
	return \%panel, \%summary ;

	
</%init>

