<%args>
	$id1 => undef
	$id2 => undef
	$startdate => undef
	$enddate => undef
	$circuit_id => undef
</%args>
<%init>

	my $debug=0;	
	use Time::HiRes qw( time );
	use Data::Dumper;
	my $start = time(); 

#NOW PULL EVERY BALLOT FOR EVERY ENTERY THAT EITHER SPEAKER HAS BEEN ON

	Tab::Ballot->columns(TEMP => qw/entry_code/);
	Tab::Ballot->columns(TEMP => qw/ballot_value_id/);
	Tab::Ballot->columns(TEMP => qw/ballot_value_tag/);
	Tab::Ballot->columns(TEMP => qw/ballot_value_student/);
	Tab::Ballot->columns(TEMP => qw/ballot_value_value/);
	Tab::Ballot->columns(TEMP => qw/round_name/);
	Tab::Ballot->columns(TEMP => qw/round_type/);
	Tab::Ballot->columns(TEMP => qw/round_label/);
	Tab::Ballot->columns(TEMP => qw/event_name/);
	Tab::Ballot->columns(TEMP => qw/tourn_name/);
	Tab::Ballot->columns(TEMP => qw/tourn_id/);
	Tab::Ballot->columns(TEMP => qw/tourn_start/);	
	Tab::Ballot->columns(TEMP => qw/judge_name/);		
	Tab::Ballot->set_sql(pull_ballots => "
		select distinct ballot.id, ballot.*, ballot_value.*, ballot_value.tag as ballot_value_tag, ballot_value.student as ballot_value_student, round.name as round_name, round.label as round_label, event.name as event_name, tourn.name as tourn_name, tourn.start as tourn_start, ballot_value.value as ballot_value_value, round.type as round_type, tourn.id as tourn_id, ballot_value.id as ballot_value_id, CONCAT(judge.last, ', ', judge.first) as judge_name
		from ballot, entry_student, ballot_value, round, panel, event, tourn, judge
		where ( entry_student.student= $id1 or entry_student.student = $id2 )
		and ballot.entry=entry_student.entry
		and ballot_value.ballot=ballot.id
		and judge.id=ballot.judge		
		and panel.id=ballot.panel
		and round.id=panel.round
		and event.id=round.event
		and tourn.id=event.tourn
		order by ballot.panel asc
	");
	my @ballots = Tab::Ballot->search_pull_ballots;

	my %panel;
	my %summary;
	my $last_entry = - 999;
	my @entry_student;
	
	print "This many ballots=".scalar(@ballots)."<br>" if $debug;
		
	foreach my $ballot (@ballots) { 
		print "ballot_id=".$ballot->id." tourn=".$ballot->tourn_id." rd=".$ballot->round_name." panel=".$ballot->panel." tag=".$ballot->ballot_value_tag." " if $debug;
		print "judge=".$ballot->judge." value=".$ballot->ballot_value_value." student=".$ballot->ballot_value_student." ballot_value_id=".$ballot->ballot_value_id."<br>" if $debug;
		$panel{$ballot->panel}{'tourn'} = $ballot->tourn_name;
		$panel{$ballot->panel}{'tourn_id'} = $ballot->tourn_id;
		$panel{$ballot->panel}{'tourn_start'} = $ballot->tourn_start;
		$panel{$ballot->panel}{'event_name'} = $ballot->event_name;
		$panel{$ballot->panel}{'round_name'} = $ballot->round_name;
		$panel{$ballot->panel}{'round_label'} = $ballot->round_name;
		$panel{$ballot->panel}{'round_label'} = $ballot->round_label if $ballot->round_label;
		$panel{$ballot->panel}{'elim'} = 0;
		if ( $ballot->round_type eq "elim" || $ballot->round_type eq "final" ) { $panel{$ballot->panel}{'elim'} = 1 };
		if ( $ballot->ballot_value_tag eq "ballot" ) {
			$panel{$ballot->panel}{'judge'} .= $ballot->judge_name." ";
			$panel{$ballot->panel}{'total_ballots'} ++;
			$panel{$ballot->panel}{'ballots_won'} += $ballot->ballot_value_value;
			if ( $ballot->ballot_value_value == 1 ) { $panel{$ballot->panel}{'decision_str'}.= "W"; } else { $panel{$ballot->panel}{'decision_str'}.= "L"; }
			print " total_ballots:".$panel{$ballot->panel}{'total_ballots'} if $debug;
			print " ballots_won:".$panel{$ballot->panel}{'ballots_won'} if $debug;
			
		}
		if ( lc($ballot->ballot_value_tag) eq "points" ) {
			if  ( $ballot->ballot_value_student == $id1 ) { $panel{$ballot->panel}{'spkr1_pts'} .= $ballot->ballot_value_value." "; }
			if  ( $ballot->ballot_value_student == $id2 ) { $panel{$ballot->panel}{'spkr2_pts'} .= $ballot->ballot_value_value." "; }
			print " student:".$ballot->ballot_value_student if $debug;
			print " pts1:".$panel{$ballot->panel}{'spkr1_pts'} if $debug;
			print " pts2:".$panel{$ballot->panel}{'spkr2_pts'} if $debug;
		}
		if ($last_entry != $ballot->entry ) {
			@entry_student = Tab::EntryStudent->search( entry => $ballot->entry );

		}
		foreach my $student (@entry_student) {
			if  ( $student->student == $id1 ) { $panel{$ballot->panel}{'spkr1_on_entry'} = 1; }
			if  ( $student->student == $id2 ) { $panel{$ballot->panel}{'spkr2_on_entry'} = 1; }
		}

		$last_entry = $ballot->entry;
		print "<br>" if $debug;
	}

	foreach my $key ( keys %panel ) {
		my $dummy;
		if ( $panel{$key}{'spkr1_on_entry'} == 1 && $panel{$key}{'spkr2_on_entry'} == 1 ) { $dummy="together"; }
		if ( $panel{$key}{'spkr1_on_entry'} == 1 && $panel{$key}{'spkr2_on_entry'} != 1 ) { $dummy="spkr1"; }
		if ( $panel{$key}{'spkr1_on_entry'} != 1 && $panel{$key}{'spkr2_on_entry'} == 1 ) { $dummy="spkr2"; }
		if ( $panel{$key}{'elim'} == 0 ) {
			$summary{$dummy}{'prelim_ballots'} += $panel{$key}{'total_ballots'};
			$summary{$dummy}{'prelim_ballots_won'} += $panel{$key}{'ballots_won'};
			$summary{$dummy}{'prelim_rds'} ++;
			if ( $panel{$key}{'ballots_won'} > ( $panel{$key}{'total_ballots'} - $panel{$key}{'ballots_won'} ) ) {
				$summary{$dummy}{'prelim_wins'} ++;
			}
		} else {
			$summary{$dummy}{'elim_ballots'} += $panel{$key}{'total_ballots'};
			$summary{$dummy}{'elim_ballots_won'} += $panel{$key}{'ballots_won'};
			$summary{$dummy}{'elim_rds'} ++;
			if ( $panel{$key}{'ballots_won'} > ( $panel{$key}{'total_ballots'} - $panel{$key}{'ballots_won'} ) ) {
				$summary{$dummy}{'elim_wins'} ++;
			}
		}
	}
	
	if ($debug) {
	 	my $end = time();
 		print "hash creation processing time:  "; printf("%.2f\n", $end - $start);
	}
		
	return \%panel, \%summary ;

	
</%init>

