<%args>
	$tourn_id   => undef
	$country    => undef
	$state      => undef
	$circuit_id => undef
	$year       => undef
</%args>
<%init>

	my $circuit = Tab::Circuit->retrieve($circuit_id) if $circuit_id;

	my $now = DateTime->now;

	unless ($year) { 
		$year = $now->year;
		$year-- if $now->month < 8;
	}

	my $fromstring = "$year-07-01 00:00:00";
	my $tostring = ($year + 1)."-07-01 00:00:00";

	my $key = $tourn_id."-".$country."-".$state."-".$circuit_id."-".$year;
	return if $m->cache_self( key => $key, expires_in => '1h' );

	my @published;

	if ($circuit) { 

		Tab::Tourn->set_sql(by_results_published => "
			select distinct tourn.*
			from tourn, tourn_circuit, result_set
			where result_set.tourn = tourn.id
			and tourn.id = tourn_circuit.tourn
			and tourn.hidden != 1
			and tourn_circuit.circuit = ?
			and tourn.start > ? 
			and tourn.end < ? 
			order by tourn.start DESC
			limit 50
		");

		Tab::Tourn->set_sql(by_round_results_published => "
			select distinct tourn.*
			from tourn, event, round, tourn_circuit
			where tourn.id = event.tourn
			and tourn.id = tourn_circuit.tourn
			and tourn.hidden != 1
			and tourn_circuit.circuit = ?
			and tourn.start > ? 
			and tourn.end < ? 
			and event.id = round.event
			and round.post_results > 0
			order by tourn.start DESC
			limit 50 
		");

	
		push @published, Tab::Tourn->search_by_round_results_published($circuit->id, $fromstring, $tostring);
		push @published, Tab::Tourn->search_by_results_published($circuit->id, $fromstring, $tostring);

	} else { 

		Tab::Tourn->set_sql(by_results_published => "
			select distinct tourn.*
			from tourn, result_set
			where result_set.tourn = tourn.id
			and tourn.hidden != 1
			and tourn.start > ? 
			and tourn.end < ? 
			order by tourn.start DESC
			limit 50
		");

		Tab::Tourn->set_sql(by_round_results_published => "
			select distinct tourn.*
			from tourn, event, round
			where tourn.id = event.tourn
			and tourn.hidden != 1
			and tourn.start > ? 
			and tourn.end < ? 
			and event.id = round.event
			and round.post_results > 0
			order by tourn.start DESC
			limit 50 
		");

		push @published, Tab::Tourn->search_by_round_results_published($fromstring, $tostring);
		push @published, Tab::Tourn->search_by_results_published($fromstring, $tostring);

	}

	my %seen = (); 
	@published = grep { ! $seen{$_} ++ } @published;

</%init>

	<& menu.mas, circuit_id => $circuit_id, year => $year &>
	
	<div class="main">


		<h2>Tournament Results</h2>

		<& /funclib/tablesorter.mas, table => "results" &>

		<table id="results">

			<thead>

			<tr class="yellowrow">
			
				<th class="smaller">
					Dates
				</th>

				<th class="smaller">
					Locale
				</th>

				<th class="smaller">
					Circuit(s)
				</th>

				<th class="smaller">
					Tournament
				</th>

				<th class="smaller nosort">
					
				</th>

			</tr>

			</thead>

			<tbody>

%			foreach my $tourn (sort {$b->start->epoch <=> $a->start->epoch} @published) { 

%				next if $tourn->start > $now;
				
				<tr class="row">
			
					<td class="smallish">
						<% Tab::pickerdate($tourn->start) %>
					</td>

					<td class="smallish">
						<% $tourn->location %> 
					</td>

					<td class="smallish nospace">
%						foreach my $circuit ($m->comp("/funclib/tourn_circuits.mas", tourn => $tourn)) { 
							<span>
								<a class="white full" href="index.mhtml?circuit_id=<% $circuit->id %>">
									<% $circuit->abbr %>
								</a>
							</span>
%						}
					</td>

					<td class="smallish padno marno">
						<a class="white full" href="/index/tourn/index.mhtml?tourn_id=<% $tourn->id %>">
							<% $tourn->name %>
						</a>
					</td>

					<td class="centeralign padless marno">
						<a class="dkblue button" href="/index/tourn/results/index.mhtml?tourn_id=<% $tourn->id %>">
							View Results
						</a>
					</td>
			
				</tr>

%			}

			</tbody>

		</table>

	</div>
