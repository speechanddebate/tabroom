<%args>
	$account    => undef
	$year       => undef
	$circuit_id => 6
	$event_type => undef
	$level 		=> undef
	$min_rds 	=> undef	
	$show_top 	=> undef	
</%args>
<%init>

	$m->abort;

	use Time::HiRes qw( time );
	use POSIX qw(strftime);
	my $code_start = time(); 
	##Tab::debuglog("CODE STARTS");

	my $circuit = Tab::Circuit->retrieve($circuit_id);
	$m->abort unless $circuit;

	$min_rds = 0 unless $min_rds;
	$show_top = 50 unless $show_top;
							
	unless ($year) { 
		my $this_year = Tab::school_year;
		$year = $this_year->year;
	}
	
	my $start_string = "07/01/$year";
	my $end_string = "06/30/".($year + 1);

	my $start_dt = Tab::dtme($start_string);	
	my $end_dt = Tab::dtme($end_string);	

	my $level_str = "( event_setting.tag='level' and event_setting.value != 'Jabberwocky')";
	if ($level eq "Open") { $level_str = "( event_setting.tag='level' and event_setting.value='Open')"; }
	if ($level eq "Novice") { $level_str = "( event_setting.tag='level' and event_setting.value='Novice')"; }
	if ($level eq "JV") { $level_str = "( event_setting.tag='level' and event_setting.value='JV')"; }
	my $level_display = $level;
	unless ($level_display) { $level_display="all levels of competition."; }
	##print "Level string=".$level_str."<br>";
		
	my $code_end = time(); ##Tab::debuglog("Time before first pull ".sprintf("%.2f", $code_end-$code_start) );

	$event_type = "debate" unless $event_type;
	Tab::Student->columns(TEMP => qw/chpt_name/);			
	Tab::Student->columns(TEMP => qw/avg/);				
	Tab::Student->columns(TEMP => qw/n_rds/);					
	my $header_str;	
	my @speakers;	

	if ($event_type eq "debate") {
	
		$header_str = "Debaters ordered by average speaker points";
		Tab::Student->set_sql(pull_entry => "
			SELECT student.id, chapter.name as chpt_name, avg(ballot_value.value) as avg, count(distinct ballot_value.id) as n_rds
			FROM tourn, event, tourn_circuit, round, panel, ballot, ballot_value, student, chapter, event_setting
			WHERE tourn_circuit.circuit=?
			and tourn.id=tourn_circuit.tourn
			and tourn.start >= '$start_dt'
			and tourn.end <=  '$end_dt'
			and event.tourn=tourn.id
			and (event.type != 'speech' and event.type != 'congress' )
			and event_setting.event=event.id
			and $level_str
			and round.event=event.id
			and round.post_results=2
			and round.type != \"elim\"
			and round.type != \"final\"
			and panel.round=round.id
			and ballot.panel=panel.id
			and ballot_value.ballot=ballot.id
			and ballot_value.tag='points'
			and student.id=ballot_value.student
			and chapter.id=student.chapter
			group by student.id
			having n_rds > $min_rds
			order by avg desc
		");
		@speakers = Tab::Student->search_pull_entry($circuit->id);
		
	} else {
	
		$header_str = "Individual Event Speakers ordered by average rank";
		Tab::Student->set_sql(pull_entry => "
			SELECT student.id, chapter.name as chpt_name, avg(ballot_value.value) as avg, count(distinct ballot_value.id) as n_rds
			FROM tourn, event, tourn_circuit, round, panel, ballot, ballot_value, student, chapter, entry, entry_student, event_setting
			WHERE tourn_circuit.circuit= ?
			and tourn.id=tourn_circuit.tourn
			and tourn.start >= '$start_dt'
			and tourn.end <=  '$end_dt'
			and event.tourn=tourn.id
			and (event.type = 'speech' or event.type = 'congress' )
			and event_setting.event=event.id
			and $level_str
			and round.event=event.id
			and round.type != \"elim\"
			and round.type != \"final\"
			and (round.post_results=2 or ( event_setting.tag='results_published' and event_setting.value=1) )
			and panel.round=round.id
			and ballot.panel=panel.id
			and ballot.entry=entry.id
			and ballot_value.ballot=ballot.id
			and ballot_value.tag='rank'
			and entry.event=event.id
			and entry_student.entry=entry.id
			and student.id=entry_student.student
			and chapter.id=student.chapter
			group by student.id
			having n_rds > $min_rds			
			order by avg asc
		");
		@speakers = Tab::Student->search_pull_entry($circuit->id);
	}
	
	$code_end = time(); ##Tab::debuglog("Time AFTER IE pull ".sprintf("%.2f", $code_end-$code_start) );	
	my $ctr;
	
</%init>

	<& menu.mas, circuit_id => $circuit_id, year => $year, whoami => "speaker_rank", event_type => $event_type, level => $level &>

	<div class="main">

		<h2><% $header_str %></h2>
		<h4> <% $circuit->name %> <% $year %> for <% $level_display %></h4>

		<& /funclib/tablesorter.mas, table => "sortme" &>

		<table cellpadding="4" id="sortme">
		
			<thead>
				<tr class="yellowrow">
					<th class="smallish">
						Speaker
					</th>
					<th class="smallish">
						Chapter (Institution)
					</th>
					<th class="smallish">
						Ballots
					</th>
					<th class="smallish">
						Average
					</th>
				</tr>
				</tr>
			</thead>

			<tbody>
%			foreach my $spkr(@speakers) {
%			$ctr++; if ($ctr > $show_top) { last; }
			<tr>
				<td> <% $ctr %> - 
					<a href="speaker_detail.mhtml?spkr_id=<% $spkr->id %>&year=<% $year %>&event_type=<% $event_type %>&circuit_id=<% $circuit_id %>">
						<% $spkr->first %> <% $spkr->last %>
					</a>
				</td>
				<td><% $spkr->chpt_name %></td>				
				<td><% $spkr->n_rds %></td>												
				<td><% sprintf("%.3f", $spkr->avg) %></td>								
			</tr>
%			}			
			</tbody>

		</table>

	</div>

