<%args>	
	$tourn
	$group_id
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $group = Tab::JudgeGroup->retrieve($group_id);
	my @days = $m->comp("/funclib/tourn_days.mas", tourn => $tourn);

	my $rounds_per = $group->setting("rounds_per");
	
</%init>

    <& menu.mas, group_id => $group_id, tourn => $tourn, page => "partials" &>

	<div class="main">

		<h2>
			<% $group->name %>
		</h2>

		<& "tabbar.mas", whoami => "partials", group => $group &>

		<h4>Part-time judging</h4>

		<p>
			These timeblocks allow registering coaches to mark judges as
			unavailble during the blocks you specify.  The fees will be charged
			if a school is under their burden during that timeblock; so if a
			school owes 2 judges and only 1 judge is free on Friday night, the
			Friday night fine will be charged.  However, if the school brings 3
			judges, of which 2 are always available, the fine will not be
			charged.
		</p>

%		if ($rounds_per) { 
			<p><strong>*</strong>
				You cannot asses fines for part time judges when doing by round
				committments.  It doesn't make sense to charge someone for a part
				time committment when they're also specifying how many rounds they
				can judge. 
			</p>
%		}
		
		<form action="partials_save.mhtml" method="post">
		<input type="hidden" name="group_id" value="<% $group->id %>">

		<table>

			<tr class="yellow">

				<th class="smallish">
					Name
				</th>

%				unless ($rounds_per) { 
					<th class="smallish">
						Fee
					</th>
%				}

%				if (scalar @days > 1) { 
					<th class="smallish">
						Day
					</th>
%				}

				<th class="smallish">
					Start Time
				</th>

				<th class="smallish">
					End Time
				</th>

				<th>
				</th>

			</tr>

%			foreach my $strike_time (sort {$a->start->epoch <=> $b->start->epoch} $group->strike_times) {

%				my $strike_time_start = $strike_time->start->set_time_zone($tz);
%				my $strike_time_end = $strike_time->end->set_time_zone($tz);
	
				 <tr class="row">

					<th>
						<input type="text" name="<% $strike_time->id %>_name" value="<% $strike_time->name %>" size="16">
					</th>

%					unless ($rounds_per) { 
						<td>
							<input type="number" class="smaller" min="0" max="99999" name="<% $strike_time->id %>_fine" value="<% $strike_time->fine %>" size="4">
						</td>
%					}

%					if (scalar @days > 1 ) { 
				
						<td class="smaller nospace">

%							foreach my $day (@days) { 

								<label for="<% $strike_time->id."-".$day->epoch %>">
									<span class="half hover marno">
										<input type="radio" id="<% $strike_time->id."-".$day->epoch %>" name="<% $strike_time->id %>_day" 
											value="<% Tab::pickerdate($day) %>" <% ($strike_time_start->day == $day->day) ? "checked" : "" %>>
											<% $day->day_abbr %> <% Lingua::EN::Numbers::Ordinate::ordinate($day->day) %>
									</span>
								</label>

%							}

						</td>

%					} else { 

						<input type="hidden" name="<% $strike_time->id %>_day" value="<% Tab::pickerdate($tourn->start->set_time_zone($tz)) %>">
%					}

					</td>

					<td class="centeralign">
						<& /funclib/timepicker.mas, name => $strike_time->id."_start", time => $strike_time_start, size => "6" &> 
					</td>

					<td class="centeralign">
						<& /funclib/timepicker.mas, name => $strike_time->id."_end", time => $strike_time_end, size => "6" &> 
					</td> 

					<td class="centeralign padless">
						<a class="dkred button marno smaller" href="partial_rm.mhtml?partial_id=<% $strike_time->id %>">
							Delete
						</a>
					</td>

				</tr>
% 			}

			<tr class="row">

				<td>
					<input type="text" name="new_name" size="16" placeholder="Add new...">
				</td>

%				unless ($rounds_per) { 
					<td>
						<input type="number" class="smaller" min="0" max="99999" name="new_fine" size="4">
					</td>
% 				}

%				if (scalar @days > 1) { 

					<td class="smaller nospace">
%						foreach my $day (@days) { 
							<label for="<% $day->epoch %>">
								<span class="third hover marno">
									<input type="radio" id="<% $day->epoch %>" name="new_day" value="<% Tab::pickerdate($day) %>">
										<% $day->day_abbr %>
										<% Lingua::EN::Numbers::Ordinate::ordinate($day->day) %>
								</span>
							</label>
%						}

					</td>
%				} else { 

					<input type="hidden" name="new_day" value="<% Tab::pickerdate($tourn->start->set_time_zone($tz)) %>">
%				}

				<td class="centeralign">
					<& /funclib/timepicker.mas, name => "new_start", size => "6" &> 
				</td>

				<td class="centeralign">
					<& /funclib/timepicker.mas, name => "new_end", size => "6" &> 
				</td>

				<td>
				</td>

			</tr>


			<tr class="libl">

				<td colspan="6" align="right">
					<input type="submit" value=" Save Timeblocks"> 
					</form>
				</td>

			</tr>

		</table>

		<h5>A piece of advice</h5>

		<p>There are a lot of people who will mistake these on registration for
		"times the judge IS available" rather than the times the judge is NOT
		available, despite many warnings to the contrary.</p>
		
		<p>You'll end up with some schools registering judges who are blocked
		against all time blocks.  It's silly, but it happens.</p>

		<p>To prevent that, I've found its best to name the time blocks things
		like "No Sunday Rounds" or "No Saturday Morning".  Putting the "No" in
		there seems to help</p>

		<p>People.  Sheesh.</p>

	</div>
