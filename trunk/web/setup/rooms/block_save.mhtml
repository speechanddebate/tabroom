<%args>
	$tourn
	$type
	$room_id
</%args>
<%init>

	my $room = Tab::Room->retrieve($room_id);
	my $site = $room->site;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $err;
	my $msg;

	if ($type eq "time") { 

		my $block_start;
		my $block_end;

		eval { 
			$block_start = Tab::dtme($ARGS{"start_date"}, $ARGS{"start_time"}, $tz);
			$block_end = Tab::dtme($ARGS{"end_date"}, $ARGS{"end_time"}, $tz);
		};

		if ($block_start && $block_end && ($block_start < $block_end) ) { 

			my $block = Tab::RoomStrike->create({ 
				tourn => $tourn->id,
				type  => "time",
				start => $block_start,
				room  => $room->id,
				end   => $block_end
			});

			$msg = "Block ".$block->name." saved";

		} else { 
			$err = "Start time ".$ARGS{"start_date"}." ".$ARGS{"start_time"}." and end time ".$ARGS{"end_date"}." ".$ARGS{"end_time"}." are not valid.  Try again please";
		}


	} elsif ($type eq "event") { 

		my $event = Tab::Event->retrieve($ARGS{"event"});

		if ( ($event->tourn->id == $tourn->id) &! Tab::RoomStrike->search( type => $type, tourn => $tourn->id, room => $room->id, event => $event->id)) { 

			my $block = Tab::RoomStrike->create({ 
				tourn => $tourn->id,
				type  => "event",
				room  => $room->id,
				event => $event->id
			});

			$msg = "Block ".$block->name." saved";

		}

	} elsif ($type eq "judge") { 

		my $judge = Tab::Judge->retrieve($ARGS{"judge"});

		if ( ($judge && $judge->judge_group->tourn->id == $tourn->id) &!  Tab::RoomStrike->search( type => $type, tourn => $tourn->id, room => $room->id, judge => $judge->id)) { 

			my $block = Tab::RoomStrike->create({ 
				tourn => $tourn->id,
				type  => "judge",
				room  => $room->id,
				judge => $judge->id
			});

			$msg = "Block ".$block->name." saved";

		}

	} elsif ($type eq "entry") { 

		my $entry = Tab::Entry->retrieve($ARGS{"entry"});

		if ( ($entry && $entry->event->tourn->id == $tourn->id) &!  Tab::RoomStrike->search( type => $type, tourn => $tourn->id, room => $room->id, entry => $entry->id) ) { 

			my $block = Tab::RoomStrike->create({ 
				tourn => $tourn->id,
				type  => "entry",
				room  => $room->id,
				entry => $entry->id
			});

			$msg = "Block ".$block->name." saved";

		}
	}

	$m->redirect("block_add.mhtml?room_id=".$room->id."&err=$err&msg=$msg");


</%init>

