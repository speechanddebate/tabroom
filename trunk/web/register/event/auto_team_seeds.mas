<%args>
	$event_id   => undef
	$circuit_id => undef
	$basis      => 'average'
</%args>

<%init>
	
	my $event = Tab::Event->retrieve($event_id);

	my $debug;

	if ($debug) {
		print "Event is:".$event_id."<br>";
		print "Tourn is:".$event->tourn->name."<br>";
		print "Preset method=".$event->setting("seed_presets")."<br>";
	}
	
	my $circuit = Tab::Circuit->retrieve($circuit_id);
	if ($debug) { print "Circuit is:".$circuit->name."<br>"; }
	
	my (%team_points) = $m->comp("/funclib/team_ratings.mas", circuit_id => $circuit->id);
	
	# NUMBER TWO: FIGURE OUT THE NUMBER OF PRESETS

	# figure out how many presets there are, and make ratings based on that.
	# The idea is that you need the same number of categories as you have
	# presets or else there's no way to balance them.

	my $n_cats;
	my @rounds = Tab::Round->search( event => $event_id );
	foreach my $round (@rounds) {
		if ($round->type eq 'prelim') { 
			$n_cats++; 
		}
	}

	if ($event->setting("seed_presets") eq "inverse") { 
		$n_cats = $n_cats * 2; 
	}

	if ($debug) { print $n_cats." presets<br>"; }

	# Assign seeds based on the ratings; make them continuous if you seek to balance, and categorical otherwise.
	# I'm assuming the logic of the overall balance works best if you use continuous numbers and not categories.
	
	my @entries = Tab::Entry->search( event => $event_id );

	my $total;
	my %seed;

	foreach my $entry (@entries) {
		my @students = Tab::EntryStudent->search( entry => $entry->id );
		$total=0;
		foreach my $student (@students) {
			$total += $team_points{$student->student}{'avg'} if $basis eq "average";
			$total += $team_points{$student->student}{'total'} if $basis eq "total";
		}
		$entry->setting("pairing_seed", $total);
		$entry->setting("pairing_points", $total);
		$seed{$entry->id} = $total;
	}
	
	@entries = sort {$seed{$b} <=> $seed{$a} } @entries;

	my $current_cat = 1;
	my $ctr = 0;
	my $n_per_cat = scalar(@entries)/$n_cats;

	print "Teams per category=".$n_per_cat." for ".scalar(@entries)." teams<br>" if $debug;
	
	foreach my $entry (@entries) {

		$ctr++;

		if ( $ctr > $n_per_cat and $event->setting("seed_presets") ne 'balance') { 
			$ctr = 0; 
			$current_cat++; 
		}

		if ($event->setting("seed_presets") eq 'balance') { 	
			$entry->setting("pairing_seed", $ctr); 
		}

		if ($event->setting("seed_presets") ne 'balance') { 
			$entry->setting("pairing_seed", $current_cat); 
		}

		print $entry->name." ".$entry->setting("pairing_seed")."<Br>" if $debug;

	}

	$m->redirect("seeds.mhtml?event_id=$event_id");

</%init>
