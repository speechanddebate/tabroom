<%args>
	$tourn
	$account
	$judge_id     => undef
	$neutral      => 0
	$qual_history => 0
	$diverse      => 0
	$first_year   => 0
	$free_strike  => 0
</%args>
<%init>

	my $judge = Tab::Judge->retrieve($judge_id) if $judge_id;

	$m->print("No such judge.  Hit back and try again.") unless $judge;
	$m->abort unless $judge;

	my $err;

	my $max = $judge->judge_group->setting("max_rounds");
	my $obligation = $ARGS{"obligation"};
	my $hired = $ARGS{"hired"};

	if (  ($obligation + $hired)  > $max && $max > 0) { 

		my $difference = $max - $obligation - $hired;
		$hired = $hired - $difference;

		if ($hired < 0) { 
			$obligation = $obligation + $hired;
			$hired = 0;
		}

		$err = "No judge can cover more than $max rounds of obligation.  Round burden reduced";
	}

	$judge->first($ARGS{"first"}) if $ARGS{"first"};
	$judge->last($ARGS{"last"}) if $ARGS{"last"};

	$judge->code($ARGS{"code"});
	$judge->ada($ARGS{"ada"});
	$judge->tab_rating($ARGS{"tab_rating"});
	$judge->judge_group($ARGS{"judge_group"});
	$judge->covers($ARGS{"covers"});
	$judge->school($ARGS{"school"});

	$judge->hired($hired);
	$judge->hire_offer($ARGS{"hire_offer"});
	$judge->obligation($obligation);

	$judge->alt_group($ARGS{"alt_group"});
	$judge->active($ARGS{"active"});
	$judge->dropped($ARGS{"dropped"});
	$judge->diverse($ARGS{"diverse"});
	$judge->cat_id($ARGS{"cat_id"});

	$judge->special($ARGS{"special"});
	$judge->notes($ARGS{"notes"});

	if ($judge->chapter_judge) { 
		my $cj = $judge->chapter_judge;
		$cj->notes($ARGS{"notes"});
		$cj->update;
	}

	$judge->update;

	$judge->setting("neutral", $neutral);
	$judge->setting("qual_history", $qual_history);
	$judge->setting("first_year", $first_year);
	$judge->setting("free_strike", $free_strike);


	if ($judge->judge_group->setting("fyo_free_strikes") && $first_year) { 
		$judge->setting("free_strike", 1);
	}

	if ($ARGS{"phone"} && $judge->account && $judge->account->id) {
		$judge->account->phone($ARGS{"phone"}) ;
		$judge->account->update;
	} elsif ($ARGS{"phone"}) { 
		$judge->setting("phone", $ARGS{"phone"});
	}

	if ($ARGS{"email"} && $judge->account && $judge->account->id && $judge->account->email ne $ARGS{"email"}) {

		if (Tab::Account->search( email => $ARGS{"email"})) { 
			$err = "Another Tabroom account already has the email ".$ARGS{"email"}.".  Try again";
		} else { 
			$judge->account->email($ARGS{"email"}) ;
			$judge->account->update;
		}

	} elsif ($ARGS{"email"}) { 
		$judge->setting("email", $ARGS{"email"});
	}

	my $msg = "Judge information saved";
	$m->redirect("edit.mhtml?judge_id=$judge_id&msg=$msg&err=$err");

</%init>
