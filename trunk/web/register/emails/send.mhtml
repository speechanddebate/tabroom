<%args>
	$tourn
	$account
	$subject     => undef
	$content     => undef
	$email_id    => undef
	$everybody   => undef
	$diodirs     => undef
	$judge_short => undef
	$tba         => undef
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
	
	my $now = DateTime->now(time_zone => $tz);

	my $sent_to;
	my @recipients;
	my @notifieds;
	my @emails;

	unless ($content) { 
		my $err = "The email had no message body.  Try again,";
		$m->redirect("/register/emails/compose.mhtml&err=$err");
	}

	if ($diodirs) { 

		$sent_to .= "Diocesan Moderators of ".$tourn->name;

   		foreach my $region ($m->comp("/funclib/tourn_regions.mas", tourn => $tourn)) {
      	   	push @recipients, $region->admins;
		}

	}

	if ($everybody) { 

		$sent_to .= "All Registrants of ".$tourn->name;

   		foreach my $school ($tourn->schools) {
      	   	push @recipients, $school->chapter->admins;
			push @emails, $school->contact_email if $school->contact_email;
		}


	} 

	if ($judge_short) { 

		my @groups = $tourn->groups;
		$sent_to .= " Schools short on judges at ".$tourn->name;

   		foreach my $school ($tourn->schools) {

			my $short;

			foreach my $group (@groups) { 

				my ($uncovered, $overage) = $m->comp("/funclib/judgemath/uncovered_burden_by_group.mas",
					group => $group,
					school => $school);

				$short++ if $uncovered;
				last if $short;
			}

			next unless $short;

			my $chapter = $school->chapter if $short;

   	    	foreach my $coach ($m->comp("/funclib/chapter_admins.mas", chapter => $chapter)) {
      	      	push (@recipients, $coach);
      		}

		}
	}
	
	if ($tba) { 

		$sent_to .= "Schools with TBA entries at ".$tourn->name;

   		foreach my $school ($m->comp("/funclib/tourn_school_tba.mas", tourn => $tourn)) {

			my $chapter = $school->chapter;
			next unless $chapter;

   	    	foreach my $coach ($m->comp("/funclib/chapter_admins.mas", chapter => $chapter)) {
      	      	push (@recipients, $coach);
      		}

		}
	} 

	unless ($everybody || $judge_short || $tba) {
 
		my %send_keys = ();
		
		$sent_to .= " Schools registered for ".$tourn->name." with entries in: ";

		foreach my $event ($tourn->events) { 

			my $event_key = "event_".$event->id;
			next unless $ARGS{$event_key};
			
			$sent_to .= $event->name."\n";

			foreach my $school ($m->comp("/funclib/event_schools.mas", event => $event)) { 
      	      	push (@recipients, $m->comp("/funclib/school_contacts.mas", school => $school));
			}
		} 
	} 

	foreach my $group ($tourn->groups) { 

		my $group_key = "group_".$group->id;
		next unless $ARGS{$group_key};

		$sent_to .= $group->name." judges\n";

		foreach my $judge ($group->judges) { 
   	      	push (@notifieds, $m->comp("/funclib/judge_follower.mas", judge => $judge));
		}
	}

	my $email;

	if ($email_id) { 

		$email = Tab::Email->retrieve($email_id);

		if ($email->sent_to) {   #If the mail has been sent already we clone instead of overwriting
			$email = $email->copy({
				sent_on => $now
			});
		}

		$email->sent_on($now);

	} else { 

		$email = Tab::Email->create({
			subject => $subject,
			content => $content,
			sent_on  => $now,
			tourn   => $tourn->id,
			sender  => $account->id });

	} 

	unless (@recipients || @notifieds || @emails) { 
		my $err = "You have not chosen any recipients.  As much as sending an email to nobody sounds fun, ";
		$err .= "I bet you didn't want to do that.  Choose a group of recipients at right to continue";
		$m->redirect("compose.mhtml?email_id=".$email->id."&err=$err");
	}


	foreach my $director ($m->comp("/funclib/tourn_admins.mas", tourn => $tourn)) {
		push (@recipients, $director);
	}

	$content = $content."\n-----------------------------<br />\n";
	$content = $content."$sent_to\n\n";

	$email->sent_to($sent_to);
	$email->content($content);
	$email->update;

	#uniq

    my %nseen = ();
	@notifieds = grep { ! $nseen{$_}++ } @notifieds;

	my $count;

	foreach my $recipient (@recipients) { 
		next if $nseen{$recipient->email}++;
		push @emails, $recipient->email unless $recipient->no_email;
	}


	$m->comp( "/funclib/send_email.mas", from => $account, array => \@emails, subject => $subject, body => $content );
	$m->comp( "/funclib/send_notify.mas", from => $account->email, array => \@notifieds, subject => $subject, body => $content );

	my $msg = "This message has been sent.";
	$m->redirect("/register/emails/index.mhtml?email_id=".$email->id."&msg=$msg");

</%init>

