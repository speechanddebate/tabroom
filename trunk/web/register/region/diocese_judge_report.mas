<%args>
	$tourn
	$diocese
	$filename
</%args>
<%init>

	my @judges;
	my @events;
	my @schools;
	my %sunday_site = ();
	my %saturday_site = ();

	@judges = $m->comp("/funclib/region_judges.mas", region => $diocese, tourn => $tourn);
	@schools = Tab::School->search( region => $diocese->id, tourn => $tourn->id);

	my %school_name = map {$_->id => $_->short_name} @schools;

	my %group_type;
	my @groups = $tourn->groups;

	foreach my $event ($m->comp("/funclib/region_events.mas", tourn => $tourn, region => $diocese)) { 
		$group_type{$event->judge_group->id} = $event->type;
	}

	my %seen = (); 
	@groups = grep { ! $seen{$_->id} ++ } @groups;

	my %group_name = map {$_->id => $_->name} @groups;

	my %group_site = ();
	my %pool_site = ();

	Tab::Round->set_sql( round_one => "
		select distinct round.*
		from round, event
		where round.event = event.id
		and event.judge_group = ? 
		and round.name = 1
		limit 1");

	my %pool_timeslots = ();

	foreach my $group (@groups) { 

		my @pools = Tab::Pool->search( judge_group => $group->id, event_based => 1);

		if (@pools) { 

			foreach my $pool (@pools) { 
				$pool_site{$pool->id} = $pool->site->name;
				@{$pool_timeslots{$pool->id}} = $m->comp("/funclib/pool_timeslots.mas", pool => $pool);
			}

			$group_type{$group->id} = "pools";

		} else { 
			my $first_round = Tab::Round->search_round_one( $group->id )->first;
			$group_site{$group->id} = $first_round->site->name if $first_round && $first_round->site;
		}

		if ($group->setting("tab_room")) { 
			$group_type{$group->id} = "TabRoom";
		}

	}


    my $tz = $tourn->tz;
    $tz = "UTC" unless $tz;
	my $now = DateTime->now->set_time_zone($tz);

    my $filepath = $Tab::file_root."/tmp/";

	open (TEXOUT, ">>$filepath"."$filename.tex");

	my $current_group;
	my $switch;

    print TEXOUT "\\LARGE\n";

    print TEXOUT "\\noindent\n";
    print TEXOUT "Judge Registrations \\hfill  ";
    print TEXOUT $diocese->code." \\hfill  ";
    print TEXOUT $diocese->arch ? "Archdiocese of " : "Diocese of ";
    print TEXOUT $diocese->name;
    print TEXOUT "\n\\smallskip\\newline\n";

	print TEXOUT "\\fancyfoot[R]{\\footnotesize Registration for ".$diocese->name." Printed ".Tab::texify(Tab::niceshortdt($now))." ".Tab::tzname($tz)." Page \\thepage\\ of \\pageref{LastPage}}\n";

	my $tabular = "\\begin{tabular}{p{.5in}p{1.5in}p{1in}p{5.75in}}\n";

	foreach my $judge (@judges) { 

		unless ($judge->judge_group->id eq $current_group) { 

            print TEXOUT "\\medskip\n";
            print TEXOUT "\\newline\n";
            print TEXOUT "\\noindent\n";

            print TEXOUT "\\Large {\\bf ".$group_name{$judge->judge_group->id}." }\n";
            print TEXOUT "\\nopagebreak[4]\n";
            print TEXOUT "\\smallskip\n";
            print TEXOUT "\\nopagebreak[4]\n";
            print TEXOUT "\\newline\n";
            $current_group = $judge->judge_group->id;
            $switch = 1;
		}

        print TEXOUT "\\small\n";
        print TEXOUT $tabular;
        print TEXOUT "\\rowcolor[rgb]{.84,.89,.94}\n" if $switch++ % 2;

        print TEXOUT $judge->code." & ";
		
		print TEXOUT "\\truncate{1.5in}{ ".Tab::texify($judge->first." ".$judge->last)."} & ";
        print TEXOUT "\\truncate{1in}{ ".Tab::texify($school_name{$judge->school->id})."} & ";

		if ($group_type{$judge->judge_group->id} eq "congress") { 
			
			print TEXOUT "Chamber assignments given at Saturday morning meeting \n";

		} elsif ($group_type{$judge->judge_group->id} eq "pools") { 

			foreach my $panel ($m->comp("/funclib/judge_panels.mas", judge => $judge)) { 

				print TEXOUT "\\parbox[l][.18in][c]{.15in}{\\bf ".$panel->round->name.". }";
				print TEXOUT "\\parbox[l][.18in][c]{.5in}{ ".$panel->eventname." }";
				if ($panel->room && $panel->room->id) {
					print TEXOUT "\\parbox[l][.18in][c]{2.25in}{ ".Tab::texify($panel->room->name)."} ";
				} else {
					print TEXOUT "\\parbox[l][.18in][c]{2.25in}{ No Room Listed } ";
				}
			}

		} elsif ($group_type{$judge->judge_group->id} eq "debate" || $group_type{$judge->judge_group->id} eq "pf" || $group_type{$judge->judge_group->id} eq "ld" || $group_type{$judge->judge_group->id} eq "policy") { 

			print TEXOUT "\\parbox[c][.18in][c]{2.5in}{ Prelim pairings released at competition site }\n";
			
		} elsif ($group_type{$judge->judge_group->id} eq "TabRoom") { 

			print TEXOUT "\\parbox[c][.18in][c]{2in}{ Tab Room ".Tab::texify($judge->special)."}";

		} else { 

			print TEXOUT "Sunday Only";
		}

		my @elim_pools = $m->comp("/funclib/judge_pools.mas", judge => $judge, limit => "not_event_pools");

		if (@elim_pools) { 

			my $sunday_group = $elim_pools[0]->judge_group;
			my $sunday_site = $elim_pools[0]->site->name;

			print TEXOUT " \\parbox[l][.19in][c]{.6in}{\\bf Elims:} ";
			print TEXOUT " \\parbox[l][][l]{2.5in}{ ";

			foreach my $pool (@elim_pools) {
				print TEXOUT "\\parbox[r][.18in][c]{.8in}{".$pool->name."} \n";
			}
			print TEXOUT " } \n";

		} 

		print TEXOUT "\\end{tabular}\n";
		print TEXOUT "\\newline\n";

	}

	close TEXOUT;

</%init>
