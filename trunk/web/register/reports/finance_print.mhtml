<%args>
	$tourn
	$account
	$session
</%args>
<%init>

	use POSIX;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

    my $now = DateTime->now;    
    $now->set_time_zone($tz);

    my $name = $tourn->name;
    $name =~ s/[\W_]//g;

    my $filename = "Finances-$name-".$session->id;
    my $filepath = $Tab::file_root."tmp/".$filename;
    `rm -f $filepath.*`; 
    
    $m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, head => 1, array => "1.8" );

    open (TEXOUT, ">>$filepath.tex");

	print TEXOUT "\\hfill {\\huge ". Tab::texify($tourn->name) ." }\n \n";
	print TEXOUT "\\hfill {\\Large Financial Report }\n";
	print TEXOUT "\\medskip\n";
	print TEXOUT "\\newline\n";

	my $tabular = "\\begin{tabular}{p{3in}p{1in}p{1in}p{1.15in}}\n";
	my $multi_tabular = "\\begin{tabular}{p{5.325in}p{1.15in}}\n";

	my $switch;
	my $total;

	my $entry_fees;
	my $hire_fees;
	my $concession_fees;

	my @students;
	my $student_fees;

	if ($tourn->setting("per_student_fee")) {
		@students = $m->comp("/funclib/tourn_students.mas", tourn => $tourn);
		$student_fees = scalar @students * $tourn->setting("per_student_fee");
	}

	my $fine_fees;

	foreach my $fine ($m->comp("/funclib/tourn_school_fines.mas", tourn => $tourn)) {
		$fine_fees += $fine->amount;
	}

	Tab::School->set_sql( individuals => "
		select sum(individuals) 
		from school
		where tourn = ? 
	");

	my $body_count = Tab::School->sql_individuals->select_val($tourn->id) if $tourn->setting("per_person_fee");
	my $bodies = $body_count * $tourn->setting("per_person_fee");

	print TEXOUT $tabular;
	print TEXOUT "\\rowcolor[rgb]{1,.95,.66}\[5.5pt\]\[5.5pt\]\n ";
	print TEXOUT "\\bf Line & \\bf Quantity & \\bf Line Cost & \\bf Total ";
	print TEXOUT "\n \\end{tabular} \\newline\n";

	# Concessions or tickets charge

	my @concessions = $tourn->concessions;

	if (@concessions) { 

		my $concession_count;

		foreach my $concession (sort {$a->name cmp $b->name} @concessions) { 

			my @orders = Tab::ConcessionPurchase->search( concession => $concession->id );

			my $concession_total;

			foreach my $order (@orders) { 
				$concession_total += $order->quantity;
				$concession_count++;
			}

			$concession_fees += $concession_total * $concession->price;

			print TEXOUT $tabular;
			print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\[5.5pt\]\[5.5pt\]\n " if $switch++ % 2;
			print TEXOUT $concession->name." & ";
			print TEXOUT "\\hfill \\tt ".$concession_total." & ";
			print TEXOUT "\\hfill \\tt ".sprintf("%.2f", $concession->price * $concession_total)." & ";
			print TEXOUT "\n \\end{tabular} \\newline\n";

		}

		if ($concession_fees) { 

			my $concession_name = $tourn->setting("concession_name");
			$concession_name = "Concessions" unless $concession_name;

			$total += $concession_fees;

			print TEXOUT $multi_tabular;
			print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\[5.5pt\]\[5.5pt\]\n " if $switch++ % 2;
			print TEXOUT "\\hfill \\bf ".$concession_name." Subtotal & ";
			print TEXOUT "\\hfill \\tt ".sprintf("%.2f", $concession_fees)." ";
			print TEXOUT "\n \\end{tabular} \\newline\n";

		}

	}

	foreach my $group (sort {$a->name cmp $b->name} $tourn->groups) { 

		my @hires = Tab::JudgeHire->search( judge_group => $group->id);
		next unless @hires;

		my $hire_total;

		my $rounds_hired;
		my $judges_hired;
		my $entries_hired;

		foreach my $hire (@hires) { 

			next unless $hire->accepted > 0 || $hire->rounds_accepted > 0;


			if ($group->setting("judge_per")) {

				if ($group->setting("hired_fee")) { 
					my $covers = ceil($hire->accepted / $group->setting("judge_per"));
					$hire_total += $covers * $group->setting("hired_fee");
					$judges_hired += $covers;
				} 

				if ($group->setting("uncovered_entry_fee")) { 
					$hire_total += $hire->accepted * $group->setting("uncovered_entry_fee");
					$entries_hired += $hire->accepted;
				}

			} elsif ($group->setting("rounds_per")) {

				$hire_total += $hire->rounds_accepted * $group->setting("round_hire_fee");
				$rounds_hired += $hire->rounds_accepted;

			}
		}

		$hire_fees += $hire_total;

		my $hire_label = $group->abbr." hired ";
		$hire_label .= "rounds of judging" if $rounds_hired;
		$hire_label .= "judges" if $judges_hired; 
		$hire_label .= "entries of judging" if $entries_hired; 

		print TEXOUT $tabular;
		print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\[5.5pt\]\[5.5pt\]\n " if $switch++ % 2;
		print TEXOUT $hire_label." & ";
		print TEXOUT "\\hfill \\tt ".$rounds_hired." ".$judges_hired." ".$entries_hired." & ";
		print TEXOUT "\\hfill \\tt ".sprintf("%.2f", $hire_total)." & ";
		print TEXOUT "\n \\end{tabular} \\newline\n";

		my @schools  = $m->comp("/funclib/group_schools.mas", group => $group);

		my @stimes = $group->strike_times;

		my %stime_by_id = map {$_->id => $_} @stimes;

		my %total_under = (); 

		foreach my $school (@schools) { 

			my %stimes_under = $m->comp("/funclib/judgemath/judge_strike_times_short.mas", group => $group, school => $school);

			foreach my $key (keys %stimes_under) {
				$total_under{$key}{"count"} += $stimes_under{$key};
				$total_under{$key}{"fee"} += $stimes_under{$key} * $stime_by_id{$key}->fine; 
				$hire_total += $stimes_under{$key} * $stime_by_id{$key}->fine;
			}

		}   

		foreach my $stime (@stimes) { 

			next unless $total_under{$stime->id}{"count"} > 0;

			print TEXOUT $tabular;
			print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\[5.5pt\]\[5.5pt\]\n " if $switch++ % 2;
			print TEXOUT "\\hspace{.25in} \\footnotesize Judges marked off ".$stime->name." & ";
			print TEXOUT "\\hfill \\tt ".$total_under{$stime->id}{"count"}." & ";
			print TEXOUT "\\hfill \\tt ".sprintf("%.2f", $total_under{$stime->id}{"fee"}) ." & ";
			print TEXOUT "\n \\end{tabular} \\newline\n";

		}

	}

	if ($hire_fees) { 

		$total += $hire_fees;

		print TEXOUT $multi_tabular;
		print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\[5.5pt\]\[5.5pt\]\n " if $switch++ % 2;
		print TEXOUT "\\hfill \\bf Judge Hire Subtotal & ";
		print TEXOUT "\\hfill \\tt ".sprintf("%.2f", $hire_fees)." ";
		print TEXOUT "\n \\end{tabular} \\newline\n";

	}

	if ($bodies) { 

		$entry_fees += $bodies;

		print TEXOUT $tabular;
		print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\[5.5pt\]\[5.5pt\]\n " if $switch++ % 2;
		print TEXOUT "Per person fees & ";
		print TEXOUT "\\hfill \\tt ".$body_count." & ";
		print TEXOUT "\\hfill \\tt ".sprintf("%.2f", $bodies) ." & ";
		print TEXOUT "\\hfill \\tt ".sprintf("%.2f", $bodies) ." ";
		print TEXOUT "\n \\end{tabular} \\newline\n";

	}

	foreach my $event (sort {$a->name cmp $b->name} $tourn->events) { 

		my @entries = Tab::Entry->search( event => $event->id, dropped => 0, waitlist => 0);
		$entry_fees += ($event->fee * scalar @entries);

		print TEXOUT $tabular;
		print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\[5.5pt\]\[5.5pt\]\n " if $switch++ % 2;
		print TEXOUT $event->abbr." entry fees  & ";
		print TEXOUT "\\hfill \\tt ".scalar @entries." & ";
		print TEXOUT "\\hfill \\tt ".sprintf("%.2f", $event->fee * scalar @entries)." & ";
		print TEXOUT "\n \\end{tabular} \\newline\n";

	}

	if ($student_fees) { 

		$entry_fees += $student_fees;

		print TEXOUT $tabular;
		print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\[5.5pt\]\[5.5pt\]\n " if $switch++ % 2;
		print TEXOUT " Per entrant fees & ";
		print TEXOUT "\\hfill \\tt ".scalar @students." & ";
		print TEXOUT "\\hfill \\tt ".sprintf("%.2f", $student_fees)." & ";
		print TEXOUT "\n \\end{tabular} \\newline\n";

	}

	$total += $entry_fees;

	print TEXOUT $multi_tabular;
	print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\[5.5pt\]\[5.5pt\]\n " if $switch++ % 2;
	print TEXOUT "\\hfill \\bf Entries Subtotal & ";
	print TEXOUT "\\hfill \\tt ".sprintf("%.2f", $entry_fees)." ";
	print TEXOUT "\n \\end{tabular} \\newline\n";


	if ($fine_fees) { 

		$total += $fine_fees;

		print TEXOUT $multi_tabular;
		print TEXOUT "\\rowcolor[rgb]{.90,.90,.90}\[5.5pt\]\[5.5pt\]\n " if $switch++ % 2;
		print TEXOUT "\\hfill \\bf Fines \\\& school fees & ";
		print TEXOUT "\\hfill \\tt ".sprintf("%.2f", $fine_fees)." ";
		print TEXOUT "\n \\end{tabular} \\newline\n";

	}

	print TEXOUT $multi_tabular;
	print TEXOUT "\\rowcolor[rgb]{.78,.86,.94}\[5.5pt\]\[5.5pt\]\n " if $switch++ % 2;
	print TEXOUT "\\hfill \\bf Grand Total  & ";
	print TEXOUT "\\hfill \\tt ".sprintf("%.2f", $total)." ";
	print TEXOUT "\n \\end{tabular} \\newline\n";

    $m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, tail => 1 );

</%init>
