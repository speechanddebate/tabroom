<%args>
	$judge_id	
	$account
	$school_id
</%args>
<%init>

	my $school = Tab::School->retrieve($school_id);
	my $judge = Tab::Judge->retrieve($judge_id);

	unless ($judge) { 
		my $err = "That judge could not be found.  Did you already delete him/her?";
		$m->redirect("judges.mhtml?school_id=".$school->id."&err=$err");
	}

	my $tourn = $judge->judge_group->tourn;
	my $chapter = $school->chapter;
	my $group = $judge->judge_group;

	my $msg = $account->first." ".$account->last." dropped judge ".$judge->first." ".$judge->last." in ".$group->name;

    my @requests = Tab::Housing->search( tourn => $tourn->id, judge => $judge->id);

	$msg .= ". Housing requests were also deleted" if @requests;

	foreach my $request (@requests) { 
		$request->delete;
	}

	my @panels = $m->comp("/funclib/judge_panels.mas", judge => $judge);

	foreach my $panel (@panels) { 
		my @judges = $m->comp("/funclib/panel_judges.mas", panel => $panel);
		my $num_judges = scalar @judges;
		next if ($num_judges > 1);  #No need to preserve ballots to save room assignments

		my @ballots = Tab::Ballot->search( panel => $panel->id, judge => $judge_id);

		foreach my $ballot (@ballots) { 
			$ballot->judge(0); 
			$ballot->update; 
		}
	}

	if ($tourn->setting("track_reg_changes")) {

		my $change = Tab::TournChange->create({
   			tourn   => $tourn->id,
       		school  => $judge->school->id,
			type    => "registration",
       		text    => $msg,
			account => $account->id
       	});
	}

	my $individuals = $school->setting("individuals");
	$school->setting("individuals", $individuals - 1);

	$judge->delete;

	my $chapter_id = $chapter->id;
	my $tourn_id = $tourn->id;

	$m->redirect("judges.mhtml?msg=$msg&group_id=".$group->id."&school_id=".$school->id);

</%init>
