<%args>
	$account
	$group_id
	$school_id        => undef
	$chapter_judge_id => undef
</%args>
<%init>

	my $group = Tab::JudgeGroup->retrieve($group_id);

	unless ($school_id) { 
		my $err = "You do not have an active school entry.  Please choose a chapter and then your tournament at left";
		$m->redirect("/user/home.mhtml?school_id=$school_id&group_id=".$group->id."&err=".$err);
	}

	my $school = Tab::School->retrieve($school_id);

	unless ($chapter_judge_id) {
		my $err = "You did not select a judge from the list.  Please try again";
		$m->redirect("judges.mhtml?school_id=$school_id&group_id=".$group->id."&err=".$err);
	}

	my $chapter_judge = Tab::ChapterJudge->retrieve($chapter_judge_id);
	my $tourn = $school->tourn;

	$m->print($tourn->id);

	my $tz = $account->tz;
	$tz = $tourn->tz unless $tz;
	$tz = "UTC" unless $tz;
	my $now = DateTime->now(time_zone => $tz);

	my $account_id = $chapter_judge->account->id if $chapter_judge->account;

	my $code;
	$code = $m->comp("/funclib/group_code.mas", group => $group ) unless $group->setting("no_codes");

	my $obligation = 0;

	if ($group->setting("rounds_per")) { 
		$obligation = $group->setting("max_rounds");
		$obligation = $group->setting('rounds_per') unless $obligation;
	}

	my $judge_account = 0;
	$judge_account = $chapter_judge->account if $chapter_judge->account;
	my $jaid = $judge_account->id if $judge_account;

	my $judge = Tab::Judge->create({
		school        => $school->id,
		first         => $chapter_judge->first,
		last          => $chapter_judge->last,
		code          => $code,
		obligation    => $obligation,
		judge_group   => $group->id,
		active        => 1,
		account       => $judge_account,
		chapter_judge => $chapter_judge->id,
		created_at    => $now
	});

	$judge->setting("special", $ARGS{"special"}) if $ARGS{"special"};
	$judge->setting("notes", $chapter_judge->notes);
	$judge->setting("tab_rating", $ARGS{"tab_rating"}) if $ARGS{"tab_rating"};
	$judge->setting("gender", $chapter_judge->gender) if $chapter_judge->gender;

	$judge->setting("registered_by", $account->id);

	if ($judge_account) { 
		$m->comp("/funclib/account_conflict.mas", tourn => $tourn, account => $judge_account);
	}

	if ($tourn->setting("track_reg_changes")) {

		my $text = $account->first." ".$account->last." entered ".$group->abbr." judge $judge->code (".$judge->first." ".$judge->last.")";

		my $change = Tab::TournChange->create({
			tourn  => $tourn->id,
			school => $school->id,
			type   => "registration",
			text   => $text
		});

	}

	if ($group->setting("coach_ratings") || $group->setting("ask_alts")) { 

		$m->redirect("judge_details.mhtml?judge_id=".$judge->id."&school_id=".$school->id);

	} else { 

		$m->redirect("judges.mhtml?school_id=$school_id&judge_id=".$judge->id."&group_id=".$group->id);

	}

</%init>
