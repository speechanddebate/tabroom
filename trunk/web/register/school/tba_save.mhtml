<%args>
	$account
	$event_id
	$school_id
	$slots => undef
</%args>
<%init>

	my $event = Tab::Event->retrieve($event_id);
	my $school = Tab::School->retrieve($school_id);

	unless ($event->tourn->id == $school->tourn->id) { 
		$m->redirect("students.mhtml?school_id=".$school->id."&event_id=$event_id&err=Something odd happened. Try again.");
	}

	my $tz = $school->tourn->tz;
	$tz = "UTC" unless $tz;

	my $now = DateTime->now(time_zone => $tz);

	my @alreadys = $school->entries( event => $event_id );

	my $cap = $event->setting("cap");
	my $school_cap = $event->setting("school_cap");
	my $wl = $event->setting("waitlist");

	$cap -= scalar @alreadys;
	$school_cap -= scalar @alreadys;

    if ($event->tourn->setting("track_reg_changes")) { 

        my $text = $account->first." ".$account->last." entered $slots TBA slots ".$event->abbr." as an admin";

        my $change = Tab::TournChange->create({
            tourn => $school->tourn->id,
            school => $school_id,
            type => "registration",
            text => $text
        });

    }


	foreach my $slot (1 .. $slots) {
	
		my $waitlist = 0;
		$waitlist = 1 if $cap <  1;
		$waitlist = 1 if $school_cap < 1;

		next if $waitlist && not defined $wl;
		
		my $entry = Tab::Entry->create({
			name       => "Names TBA",
			code       => "TBA",
			event      => $event_id,
			school     => $school->id,
			waitlist   => $waitlist,
			tba        => 1,
			created_at => $now,
			dropped    => 0
		});

		$entry->setting("registered_by", $account->id);

		$school_cap--;
		$cap--;

	}

	$m->redirect("entries.mhtml?school_id=".$school->id."&event_id=$event_id&msg=$slots slots saved");


</%init>
