<%args>
	$tourn
	$account
	$group_id => undef
</%args>
<%init>

	my $group = Tab::JudgeGroup->retrieve($group_id);
	$m->abort unless $group;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
	my $now = DateTime->now(time_zone => $tz);

	# Get the upload and create the file handle.
	my $req = Apache2::Request->new($r);
	my @csv_handles = $r->upload; 
	my $csv_file = $req->upload($csv_handles[0]);
	my $io = $csv_file->io;

	my @lines = <$io>;
	my @all_lines;

	foreach (@lines) { 
		$_ =~ s/[\r]+/\n/g;
		$_ =~ s/[\r\n]+/\n/g;
		$_ =~ s/[\n]+/\n/g;
		push @all_lines, split (/\n/, $_);
	}

	Tab::JudgeSetting->set_sql("jot_id" => "
		select distinct judge_setting.*
		from judge_setting, judge
		where judge.judge_group = ? 
		and judge.id = judge_setting.judge
		and judge_setting.tag = 'jot_id'
	");

	my @jot_judge_ids = Tab::JudgeSetting->search_jot_id($group->id);
	my %judges_by_id = map {$_->value => $_->judge->id} @jot_judge_ids;

	Tab::EntrySetting->set_sql("jot_id" => "
		select distinct entry_setting.*
		from entry_setting, entry, event
		where event.judge_group = ? 
		and event.id = entry.event
		and entry.id = entry_setting.entry
		and entry_setting.tag = 'jot_id'
	");

	my @jot_entry_ids = Tab::EntrySetting->search_jot_id($group->id);
	my %entries_by_id = map {$_->value => $_->entry->id} @jot_entry_ids;
	my %codes_by_id = map {$_->value => $_->entry->code} @jot_entry_ids;

	my %tiers_by_name = map {$_->name => $_->id} $group->rating_tiers;

	my $prefs = $group->setting("prefs");

	my $strikes;

	unless ($prefs && $prefs ne "none") {
		$strikes++ if $group->setting("school_strikes");
		$strikes++ if $group->setting("entry_strikes");
	}

	Tab::debuglog("Strikes status is $strikes");

	my $current_entry;
	my $num_entries;

	LINE:
	foreach my $line (@all_lines) { 

		next if $line eq "-------------------------------------";

		$line =~ s/\t/ /g;
		$line =~ s/ +/ /g;

		my ($one, $two, $three, $junque) = split(/\ /, $line);

		if (substr($two, 0, 1) eq '*') {
			$two =~ s/[\D_]//g;
			$current_entry = $entries_by_id{$two};

			if ($strikes) { 
				Tab::Strike->set_sql(wipe_my_strikes => " delete from strike where entry = ? and type = \"entry\" and registrant = 1");
				Tab::Strike->sql_wipe_my_strikes->execute($current_entry);
			} else { 
				Tab::Entry->set_sql(wipe_my_prefs => " delete from rating where entry = ? and type = \"entry\"");
				Tab::Entry->sql_wipe_my_prefs->execute($current_entry);
			}

			$num_entries++;
		}

		next unless $current_entry;
		next unless $one eq "%";

		my $judge = $judges_by_id{$two};
		next unless $judge; 

		$three =~ s/[\D_]//g;

		if ($strikes) { 

			next LINE unless $three;

			Tab::Strike->create({ 
				tourn       => $tourn,
				entry       => $current_entry,
				judge       => $judge,
				type        => "entry",
				registrant  => 1
			});

		} else { 

			my $tier = $tiers_by_name{$three};
			next LINE unless $tier;

			Tab::Rating->create({
				tourn       => $tourn,
				entry       => $current_entry,
				judge       => $judge,
				rating_tier => $tier,
				type        => "entry"
			});

		}

	}

	my $msg = $num_entries ." entries had prefs imported.";
	$m->redirect("index.mhtml?msg=$msg");

</%init>
