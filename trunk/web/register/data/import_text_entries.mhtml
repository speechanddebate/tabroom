<%args>
	$tourn
	$account
	$event_id
</%args>
<%init>

	my $event = Tab::Event->retrieve($event_id);

	# Get the upload and create the file handle.
	my $req = Apache2::Request->new($r);
	my @text_handles = $r->upload; 
	my $text_file = $req->upload($text_handles[0]);
	my $io = $text_file->io;

	my @entries;

	# Fix line breaks

	while (<$io>) {
		chomp $_;
		push @entries, $_;
	}

	my $min = $event->setting("min_entry");

	my $skipped;

	ENTRY:
	foreach my $entry (@entries) { 

		my ($entry_code, $speaker1, $speaker2, $novice1, $novice2) = split(/,/,$entry) if $min == 2;
		($entry_code, $speaker1, $novice1) = split(/,/,$entry) if $min == 1;

		my ($sch_code, $code) = split(/\ /, $entry_code);
		my $school = Tab::School->search( code => $sch_code, tourn => $tourn->id)->first;

		unless ($school) { 
			$skipped .= " $sch_code ";
			next ENTRY;
		}

		my @students;
		my $name = $sch_code." ";

		if ($speaker1) { 

			my ($first, @last_arr)  = split(/\ /, $speaker1);
			my $last = join(",", @last_arr);

			my $nov++ if $novice1;

			my $student = Tab::Student->create({
				chapter => $school->chapter->id,
				first => $first,
				last => $last,
				novice => $nov
			});

			push (@students, $student);
			$name = $speaker1;
			$name = $last if $speaker2;

		}

		if ($speaker2) { 

			my ($first, @last_arr)  = split(/\ /, $speaker2);
			my $last = join(",", @last_arr);

			my $nov++ if $novice2;

			my $student = Tab::Student->create({
				chapter => $school->chapter->id,
				first => $first,
				last => $last,
				novice => $nov
			});

			push (@students, $student);
			$name .= " & $last";

		}

		my $entry = Tab::Entry->create({
			school      => $school->id,
			event       => $event->id,
			tourn       => $tourn->id,
			code        => $entry_code,
			name        => $name,
			dropped     => 0,
			dq          => 0,
			waitlist    => 0
		});

		foreach my $student (@students) { 

			Tab::EntryStudent->create({
				entry => $entry->id,
				student => $student->id
			});

		}

	}	

	my $msg = scalar @entries ." entries imported into the tournament.  $skipped were skipped because of no school matches";

	$m->redirect("import_text.mhtml?msg=$msg");


</%init>
