<%args>
	$entry_id  => undef
	$school_id => undef
</%args>
<%init>

	unless ($entry_id && $school_id) { 
		$m->print("I do not know which entry or school you are altering.  Try again");
		$m->abort;
	}

	my $msg;

	my $entry = Tab::Entry->retrieve($entry_id);

	if ($school_id && $school_id != $entry->school->id) { 
		$entry->school($school_id);
		$entry->update;
		$msg .= "Entry school changed <br />";
	}


	foreach my $student ($entry->students) { 
		if (defined $ARGS{$student->id} && $ARGS{$student->id} != $student->id) { 
			$entry->rm_student($student->id);
			$entry->add_student($ARGS{$student->id}) if $ARGS{$student->id} > 0;
			$msg .= $student->first." ".$student->last." swapped out <br />";
		}
	}

	if ($ARGS{"new"}) { 
		$entry->add_student($ARGS{"new"});
	}

	my @students = $entry->students;
	my $event = $entry->event;
	my $school = $entry->school;
	my $tourn = $school->tourn;
	my $codes = $event->setting("code_style");
	my $err;

	if ( $codes eq "initials" || $codes eq "code_name" || $codes eq "full_initials" || $codes eq "school_names" || $codes eq "school_name_only" || $codes eq "names" || $codes eq "names_lastfirst" || $codes eq "last_names") { 
		$entry->code($m->comp("/funclib/entry_code.mas", entry => $entry));
	}

	my $name = $m->comp('/funclib/entry_name.mas', entry => $entry, full => 1);
	$entry->name($name);
	$entry->tba("");
	$entry->update;

	$m->redirect("$Tab::url_prefix/register/entry/edit.mhtml?entry_id=$entry_id&msg=$msg");
		
</%init>
