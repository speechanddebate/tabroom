<%args>
	$tourn
	$account
	$from_id   => undef
	$event_id  => undef
	$preset_id => undef
</%args>
<%init>

	my $event = Tab::Event->retrieve($event_id) if $event_id;
	my $round = Tab::Round->retrieve($from_id) if $from_id;
	$event = $round->event if $round &! $event;

	if ($event && not defined $round) { 
		my @rounds = $m->comp("/funclib/event_rounds.mas", event => $event, done => "yes")  if $event;
		$round = shift @rounds if @rounds;
	}

	my $preset;

	if ($preset_id && $preset_id ne "new") { 
		$preset = Tab::Round->retrieve($preset_id);
	} elsif ($event && not defined $preset_id) { 
		my @empties_rounds = $m->comp("/funclib/event_rounds.mas", event => $event, empties => "yes");
		$preset = shift @empties_rounds if @empties_rounds;
	}

	my %entry_ballots;

    if ($round && $event) { 

		my $type = $event->type;

        my $points;
        my $ranks;
        my $wins;

        foreach my $tb ($round->tb_set->tiebreaks) { 
            $ranks++ if ($tb->name eq "ranks" || $tb->name eq "reciprocals");
            $wins++ if ($tb->name eq "opp_wins" || $tb->name eq "winloss" || $tb->name eq "ballots");
            $points++ if ($tb->name eq "points" || $tb->name eq "competition" || $tb->name eq "opp_points");
        }

        my @values;
        @values = $m->comp("/funclib/event_values.mas", event => $event, round => $round);

		my $last_round;

        foreach my $value (@values) { 
    
            my $tag = $value->tag;
            next if $tag eq "rank" && not defined $ranks;
            next if $tag eq "points" && not defined $points;
            next if $tag eq "ballot" && not defined $wins;

            my $entryid = $value->entryid;

            $entry_ballots{$entryid} .= ' ' if $entry_ballots{$entryid} && $tag eq "rank" && ($type eq "speech" || $type eq "wudc" || $type eq "congress");
            $entry_ballots{$entryid} .= ' ' if $entry_ballots{$entryid} && $tag eq "ballot" && ($type ne "speech" && $type ne "wudc" && $type ne "congress");

            if ($tag eq "points") { 
                $entry_ballots{$entryid} .= "/";
            } elsif ($entry_ballots{$entryid}) { 
                $entry_ballots{$entryid} .= " ";
                $entry_ballots{$entryid} .= "\n\n" if $value->roundid != $last_round;
            }

			$last_round = $value->roundid;

            if ($tag eq "ballot") { 
                if ($value->bye) { 
                    $entry_ballots{$entryid} .= "BYE" 
                } else { 
                    $entry_ballots{$entryid} .= "W" if $value->value > 0;
                    $entry_ballots{$entryid} .= "L" if $value->value < 1;
                }
            } else { 
                $entry_ballots{$entryid} .= $value->value;
            }
        }
    }   


</%init>

	<& menu.mas, tourn => $tourn, event => $event, round => $round, preset => $preset &>

	<div class="main">

		<& /funclib/tablesorter.mas, table => "sortme" &>

%		if ($round) { 

%			my ($entries_ref, $tbs_ref, $desc_ref, $noshow_ref, $meh, $panrank_ref, $panletter_ref, $long_desc_ref, $code_ref) = $m->comp("/tabbing/results/order_entries.mas", round => $round);

%           my $equal_elims++ if $round->tb_set->setting('equal_elims') && $round->type eq "elim";
%           my $round_robin++ if $event->setting('round_robin') && $round->type ne "elim" && $round->type ne "final";

            <div>   
                <span class="biggerspan">
					<h4>Break from <% $round->realname %> of <% $round->event->abbr %></h4>
                </span>
                <span class="medbiggerspan wrap padno rightalign marno">
                    <p class="explain marno padno">Hover mouse over codes to see scores</p>
                </span>
            </div>

			<div class="noscroll">

			<table cellpadding="4" cellspacing="1" id="sortme">

				<thead>

					<tr class="yellowrow">

						<th class="smallish">
							#
						</th>

						<th class="smallish">
							Code
						</th>

%                       if ($equal_elims) { 
                            <th class="smaller" title="Rank within room">
                                SectRk
                            </th>
                            <th class="smaller" title="Room/section">
                                Sect
                            </th>
%                       }  elsif ($round_robin) { 
                            <th class="smaller" title="Rank within Pod">
                                PodRk
                            </th>
                            <th class="smaller" title="Pod">
                                Pod
                            </th>
%                       }

%						foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) { 
							<th class="smallish">
								<% ${$desc_ref}{$key} %>
							</th>
%						}

						<th>
						</th>

					</tr>

				</thead>

				<tbody>

%					my $count = 1;

%					foreach my $key (sort {$a <=> $b} keys %{$entries_ref}) { 

%						my $tie++ if scalar @{${$entries_ref}{$key}} > 1;

%						foreach my $entry_id (@{${$entries_ref}{$key}}) { 

							<tr class="<% $tie ? "lirdrow" : "" %> <% $tie == 1 ? "libordertop" : "" %>">

%								$tie++ if $tie;

								<td class="centeralign smallish nowrap" style="width: 25px;">
									<% $key %><% $tie ? "-T" : "" %>
								</td>

								<td class="smallish nowrap" style="width: 50px;">
									<span title="<% $entry_ballots{$entry_id} %>">
										<% ${$code_ref}{$entry_id} %>
									</span>
								</td>

%                               if ($equal_elims || $round_robin) {
									<td class="smallish">
										<% ${$panrank_ref}{$entry_id} %>
									</td>
									<td class="smallish">
										<% ${$panletter_ref}{$entry_id} %>
									</td>
%                               }

%								foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) { 
									<td class="smallish nowrap">
										<% ${$tbs_ref}{$entry_id."-".$key} %>
									</td>
%								}

								<td class="centeralign smallish nowrap" style="width: 25px;">
									<% ${$noshow_ref}{$entry_id} ? "NS" : $count++ %>
								</td>


							</tr>

%						}
%					}

				</tbody>
			</table>
			</div>

%		}
	
	</div>

