<%args>
	$tourn
	$session
	$event_id => undef
</%args>
<%init>

	my $event = Tab::Event->retrieve($event_id) if $event_id;
	my @events = sort {$a->name cmp $b->name} $tourn->events unless $event_id;

	push @events, $event if $event;

	my $name = $event->name if $event;
	$name = "AllEvents" unless $name;
	$name =~ s/[\W_]//g;

	my $filename = "Elims-FullResults-$name-".$session->id;
	my $filepath = $Tab::file_root."tmp/".$filename;
	`rm -f $filepath.*`;

	my $ncfl = $tourn->setting("ncfl");

	$m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, head => 1, linespace => 1, array => 1.1, wide => 1 );

	open (TEXOUT, ">>$filepath.tex");

	print TEXOUT "\\noindent\n";
	print TEXOUT "\\hfill \\huge \\textbf{".Tab::texify($tourn->name)."}\n\n";

	EVENT:
	foreach my $event (@events) {

		if ($event->type eq "speech" || $event->type eq "congress") {

			next EVENT

		} else {

			my @rounds = $event->rounds;
			next EVENT unless @rounds;

			print TEXOUT "\\hfill \\LARGE ".Tab::texify($event->name)."\n";
			print TEXOUT "\\bigskip\n\n";

			Tab::Ballot->set_sql( i_win => "
				select distinct ballot.id, concat_ws(\" \",judge.first, judge.last) as judgename
				from ballot
				left outer join judge on ballot.judge = judge.id
				inner join ballot_value on ballot_value.ballot = ballot.id
				where ballot.panel = ? 
				and ballot.entry = ? 
				and ballot.id = ballot_value.ballot
				and ballot_value.tag = \"ballot\"
				and ballot_value.value = 1
			");

			my $aff_string = $event->setting("aff_label");
			my $neg_string = $event->setting("neg_label");
			$aff_string = "Aff" unless $aff_string;
			$neg_string = "Neg" unless $neg_string;

			$aff_string = substr($aff_string, 0, 1);
			$neg_string = substr($neg_string, 0, 1);

			foreach my $round (@rounds) {

				my %ballots_won;
				my @entries = $m->comp("/funclib/round_entries.mas", round => $round);
				my %entries_by_panel;

				foreach my $entry (@entries) {
					push @{$entries_by_panel{$entry->panelid}}, $entry;
				}

				next unless $round->type eq "elim" || $round->type eq "final";

				print TEXOUT "\\noindent\n";
				print TEXOUT "\\large \\textbf{".Tab::texify($round->realname)." Round Results }\n\n";
				print TEXOUT "\\footnotesize\n";

				foreach my $panel (sort {$b->bye <=> $a->bye} $round->panels) {

					foreach my $entry (@{$entries_by_panel{$panel->id}}) {
						@{$ballots_won{$entry->id}} = Tab::Ballot->search_i_win($panel->id, $entry->id);
					}

					my @entries = sort {scalar (@{$ballots_won{$b->id}}) <=> scalar (@{$ballots_won{$a->id}})} @{$entries_by_panel{$panel->id}};

					my $winner;
					my $loser;

					if ($panel->bye) {

						$winner = shift @entries;
						$loser = shift @entries;
						print TEXOUT "\\textbf{".Tab::texify($winner->code)."}" if $winner;
						print TEXOUT " advances without debating " unless $loser;
						print TEXOUT " advances over \\textbf{".Tab::texify($loser->code)."}" if $loser;
						print TEXOUT "\n\n";

						undef $winner;
						undef $loser;

					} elsif (@entries) {

						$winner = shift @entries;
						$loser = shift @entries if @entries;

						my $winner_count = scalar @{$ballots_won{$winner->id}} if $winner && $ballots_won{$winner->id};
						my $loser_count = scalar @{$ballots_won{$loser->id}} if $loser && $ballots_won{$loser->id};

						my $winner_side;
						my $loser_side;

						if ($winner && $winner->side == 1) {
							$winner_side = $aff_string;
							$loser_side = $neg_string;
						} else {
							$winner_side = $neg_string;
							$loser_side = $aff_string;
						}

						print TEXOUT "\\noindent\n";
						print TEXOUT "\\vspace{.05in}\n" if $ncfl;
						print TEXOUT "\\begin{tabular}{ m{0.5\\textwidth} m{0.166\\textwidth} m{0.166\\textwidth} m{0.166\\textwidth} }";

						if ($ncfl) { 
							print TEXOUT "\\textbf{".Tab::texify($winner->code)." ".Tab::texify($winner->school->region->code)." } " if $winner;
							print TEXOUT Tab::texify($winner->school->short_name)." ".Tab::texify($winner->name) if $winner;
							print TEXOUT "(".Tab::texify($winner_side).") defeated \n\n " if $winner;

							print TEXOUT "\\textbf{".Tab::texify($loser->code)." ".Tab::texify($loser->school->region->code)." } " if $loser;
							print TEXOUT Tab::texify($loser->school->short_name)." ".Tab::texify($loser->name) if $loser;

						} else { 
							print TEXOUT "\\textbf{".Tab::texify($winner->code)."} (".Tab::texify($winner_side).") def. " if $winner;
							print TEXOUT "\\textbf{".Tab::texify($loser->code)."} " if $loser;
						}

						print TEXOUT " (".$winner_count."-".$loser_count.") & ";#\n";#."\n\n";

						my $yup;

						foreach my $ballot (@{$ballots_won{$winner->id}}) {
							if ($yup && !($yup % 3)) {print TEXOUT " \\\\ \n "}
							print TEXOUT " & " if $yup++;
							print TEXOUT "\\truncate{0.160\\textwidth}{\\textbf{".Tab::texify($ballot->judgename)."}} ";
							print TEXOUT "(".Tab::texify($ballot->judge->school->region->code) if $ncfl && $ballot->judge->school;
							print TEXOUT " -- ".Tab::texify(substr($ballot->judge->school->short_name, 0, 16)).") " if $ncfl && $ballot->judge->school;
						}

						if ($loser) {
							foreach my $ballot (@{$ballots_won{$loser->id}}) {
							if ($yup && !($yup % 3)) {
								print TEXOUT " \\\\ \n ";
							}
								$yup++;
								print TEXOUT " & "."\\truncate{0.160\\textwidth}{\\textbf{".Tab::texify($ballot->judgename)."*}} ";
								print TEXOUT "(".Tab::texify($ballot->judge->school->region->code) if $ncfl && $ballot->judge->school;
								print TEXOUT " -- ".Tab::texify(substr($ballot->judge->school->short_name, 0, 16)).") " if $ncfl && $ballot->judge->school;
							}
						}

						print TEXOUT "\n \\end{tabular}";
						print TEXOUT "\\newline\n";

						undef $winner;
						undef $loser;
					}

				}

				print TEXOUT "\\vspace{.1in}\n";
				print TEXOUT "\\newline\n";

			}

			print TEXOUT "\\newpage\n";

		}
	}

	close TEXOUT;
	$m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, tail => 1 );

</%init>
