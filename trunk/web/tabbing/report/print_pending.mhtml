<%args>
	$tourn
	$session
	$timeslot_id => undef
	$round_id    => undef
</%args>
<%init>

	my $session_group = $session->judge_group;
	my $session_event = $session->event if $session->event && $session->event->id;

	my $name;

	my @events;

	if ($session_event) { 
		$name = $session_event->name;
		push @events, $session_event;
	} elsif ($session_group) { 
		$name = $session_group->name;
		push @events, $session_group->events;
	}

	my $no_codes++ if $session_group && $session_group->setting("hide_codes");

	$name =~ s/[\W_]//g;

    my $filename = "BallotAudit-$name-".$session->id;
    my $filepath = $Tab::file_root."tmp/".$filename;
    `rm -f $filepath.*`; 
    
    $m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, head => 1, array => '1.3', wide => 1 );
    open (TEXOUT, ">>$filepath.tex");

	my $timeslot = Tab::Timeslot->retrieve($timeslot_id) if $timeslot_id; 
	my $round = Tab::Round->retrieve($round_id);

	my @ballots = $m->comp("/funclib/timeslot_ballots.mas", timeslot => $timeslot) if $timeslot;
	@ballots = $m->comp("/funclib/round_ballots.mas", round => $round) if $round;

	my %panel_ballots;

	foreach my $ballot (@ballots) { 
		push @{$panel_ballots{$ballot->panel->id."-".$ballot->judge->id}}, $ballot;
	}

	my $not_first_event;

	print TEXOUT "\\noindent\n";
	print TEXOUT "{\\LARGE \\bf ".Tab::texify($tourn->name)." \\hfill Ballots still out }\n";
	print TEXOUT "\\bigskip\n";
	print TEXOUT "\\newline\n";

	foreach my $event (@events) {  

		print TEXOUT "\\bigskip\n" if $not_first_event;
		print TEXOUT "\\newline\n" if $not_first_event++;

		print TEXOUT "\\noindent\n";
		print TEXOUT "{\\large \\bf ".Tab::texify($event->name)." } \n";
		print TEXOUT "\\smallskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\noindent\n";

		my $switch;
		my $limit = "and round.event = ".$event->id."\n";

		my @judges = sort {$a->last cmp $b->last} $m->comp("/funclib/timeslot_judges.mas", timeslot => $timeslot, limit => $limit) if $timeslot;
		@judges = sort {$a->last cmp $b->last} $m->comp("/funclib/round_judges.mas", round => $round, limit => $limit) if $round;

		next unless @judges;

		my $tabular = "\\begin{tabular}{p{1.5in}p{1.5in}p{3in}p{.5in}}\n";

		print TEXOUT $tabular;
		print TEXOUT "\\rowcolor[rgb]{1,.95,.66}\[5.5pt\]\[5.5pt\]\n";
		print TEXOUT "{\\bf Room } & {\\bf Judge } & {\\bf Entries } & {\\bf Bracket } \n";
		print TEXOUT "\\end{tabular}\n";
		print TEXOUT "\\newline\n";

		my %done;

		foreach my $judge (@judges) {  

			my @panels = $m->comp("/funclib/judge_panels.mas", judge => $judge, timeslot => $timeslot) if $timeslot;
			@panels = $m->comp("/funclib/judge_panels.mas", judge => $judge, round => $round) if $round;

			foreach my $panel (sort {$b->bracket <=> $a->bracket} @panels) { 

				next if $done{$judge->id."-".$panel->id}++;
				
				next if $panel->round->event->id != $event->id;
				next if $panel->bye;

				my @scores = $m->comp("/funclib/panel_scores.mas", judge => $judge, panel => $panel);
				my @ballots = sort {$a->side <=> $b->side} @{$panel_ballots{$panel->id."-".$judge->id}} if $panel_ballots{$panel->id."-".$judge->id};

				next unless @ballots;

				my $undone;

				foreach my $ballot (@ballots) {
					$undone++ unless $ballot->audit;
				}

				next unless $undone;

				print TEXOUT $tabular;
				print TEXOUT "\\rowcolor[rgb]{.92,.92,.92}\[5.5pt\]\[5.5pt\]\n" if $switch++ % 2;

				print TEXOUT Tab::texify($panel->room->name) if $panel->room;
				print TEXOUT " & ";

				print TEXOUT Tab::texify($judge->first." ".$judge->last)." & ";

				my $wins;

				my $notfirst;

				foreach my $ballot (@ballots) { 
					print TEXOUT Tab::texify(" & ")."\n " if $notfirst++;
					print TEXOUT "\t\t".Tab::texify($ballot->entry->code)."\n ";
				}	

				print TEXOUT " & ".$panel->bracket." \n";

				print TEXOUT "\\end{tabular}\n";
				print TEXOUT "\\newline\n";

			}
		}	
	}	

	close TEXOUT;
    $m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, tail => 1 );

</%init>

