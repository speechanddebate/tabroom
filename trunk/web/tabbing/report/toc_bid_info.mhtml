<%args>
  $tourn
  $session
  $account
  $event_id => undef
  $view => undef
</%args>

<%init>

  my $event = Tab::Event->retrieve($event_id) if $event_id;
  my @events = sort { $a->name cmp $b->name } $tourn->events unless $event_id;

  push @events, $event if $event;

  my $name = $event->name if $event;
  $name = "AllEvents" unless $name;
  $name =~ s/[\W_]//g;

  my $filename = "TOC-Bids-$name-".$session->id;
  my $filepath = $Tab::file_root."tmp/".$filename;
  `rm -f $filepath.*`;

  $m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, head => 1, linespace => 1, array => 1, wide => 1 );


  open (TEXOUT, ">>$filepath.tex");

  print TEXOUT "\\noindent\n";
  print TEXOUT "\\hfill \\huge \\textbf{".Tab::texify($tourn->name)."}\n\n";

  print TEXOUT "\\hfill \\LARGE Tournament Information\n";
  print TEXOUT "\\bigskip\n\n";
  print TEXOUT "\\normalsize\n";
  print TEXOUT "\\noindent\n";

  my @contacts = $m->comp("/funclib/tourn_admins.mas", tourn => $tourn, contact => 1);

  print TEXOUT "\\textbf{Contact Information} \\newline\n";

  foreach my $contact (@contacts) {
    print TEXOUT "Director Name: ".Tab::texify($contact->first)." ".Tab::texify($contact->last)."\\newline\n";
    print TEXOUT "Email: ".Tab::texify($contact->email)."\\newline\n";
    print TEXOUT "Phone: ".Tab::texify($contact->phone)."\\newline\n";
  }

  my @tourn_site = Tab::TournSite->search(tourn => $tourn);
  print TEXOUT "Host School: ".Tab::texify($tourn_site[0]->site->name)."\\newline\n";
  print TEXOUT "Tournament Location: ".Tab::texify($contacts[0]->city).", ".Tab::texify($contacts[0]->state)."\\newline\n";

  print TEXOUT "\\bigskip\n\n";

  my @bid_events;

  EVENT:
  foreach my $event (@events) {

    my $bid = $event->setting("bid_round");

    next EVENT unless $bid;

    push @bid_events, $event;

    print TEXOUT "\\noindent\n";
    print TEXOUT "\\normalsize \\textbf{".Tab::texify($event->name)."} \\newline\n";
    print TEXOUT "\\noindent\n";

    my $bid_round = Tab::Round->retrieve($bid);
    my @entries = $m->comp("/funclib/round_entries.mas", round => $bid_round);
    my $qual_debate = Tab::Round->retrieve($bid_round - 1);
    my @ghost_bids;

    if ($qual_debate->type eq "elim" && $event->type ne "speech" && $event->type ne "congress") {
      foreach my $panel ($qual_debate->panels) {
        if ($panel->bye) {
          foreach my $entry ($m->comp("/funclib/panel_entries.mas", panel => $panel)) {
            unless ($entry ~~ @entries) {
              push @ghost_bids, $entry;
            }
          }
        }
      }
    }

    print TEXOUT "Bid Level: ".Tab::texify($bid_round->label)."\\newline\n";
    print TEXOUT "Total Entries: ".Tab::texify(scalar Tab::Entry->search(event => $event))."\\newline\n";
    print TEXOUT "Qualifying Teams: ".((scalar @entries) + (scalar @ghost_bids))."\n";

    print TEXOUT "\\bigskip\n\n";
    print TEXOUT "\\noindent\n";
    print TEXOUT "\\footnotesize\n";

    foreach my $entry (sort { $a->school->name.$a->name cmp $b->school->name.$b->name } @entries) {
      my @students = map { Tab::texify($_->first." ".$_->last) } $m->comp("/funclib/entry_students.mas", entry => $entry);
      local $" = " \\& ";
      print TEXOUT Tab::texify($entry->school->name).", @students \\newline\n";
    }

    foreach my $entry (sort { $a->school->name.$a->name cmp $b->school->name.$b->name } @ghost_bids) {
      my @students = map { Tab::texify($_->first." ".$_->last) } $m->comp("/funclib/entry_students.mas", entry => $entry);
      local $" = " \\& ";
      print TEXOUT Tab::texify($entry->school->name).", @students * \\newline\n";
    }

    print TEXOUT "\\bigskip\n\n";
  }

  print TEXOUT "\\newpage\n";

  #switching to wide margins for the packets
  print TEXOUT <<"EOF";
  \\addtolength{\\hoffset}{-.45in}
  \\addtolength{\\voffset}{-.25in}
  \\addtolength{\\textheight}{.5in}
  \\addtolength{\\textwidth}{1.15in}
  \\small
EOF

  close TEXOUT;
  foreach my $event (@bid_events) {
    unless ($event->type eq "speech" || $event->type eq "congress") {
      $m->comp("/tabbing/report/packet.mhtml", tourn => $tourn, session => $session, event_id => $event->id, file_dump => "$filename");
    }
  }

  if ($view eq "Mail") {
    $m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, tail => 1, no_redirect => 1 );
    $m->comp("/funclib/send_email.mas", from => $account, body => "This is the TOC Bid results packet from ".$tourn->name, subject => "TOC Bid Results from ".$tourn->name, to => Tab::Account->retrieve(5962), attachment_name => $filename, attachment_path => "$filepath.tex" );
    $m->redirect("index.mhtml?msg=bid report sent to ".Tab::Account->retrieve(15810)->email);
  } else {
    $m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, tail => 1 );
  }

</%init>
