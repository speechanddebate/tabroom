<%args>
	$tourn
	$session
	$account
	$event_id => undef
	$view     => undef
</%args>
<%init>

  my $event = Tab::Event->retrieve($event_id) if $event_id;
  my @events = sort { $a->name cmp $b->name } $tourn->events unless $event_id;

  push @events, $event if $event;

  my $name = $event->name if $event;
  $name = "AllEvents" unless $name;
  $name =~ s/[\W_]//g;

  my $filename = "TOC-Bids-$name-".$session->id;
  my $filepath = $Tab::file_root."tmp/".$filename;
  `rm -f $filepath.*`;

  $m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, head => 1, linespace => 1, array => 1, wide => 1 );

  open (TEXOUT, ">>$filepath.tex");

  print TEXOUT "\\noindent\n";
  print TEXOUT "\\hfill \\huge \\textbf{".Tab::texify($tourn->name)."}\n\n";

  print TEXOUT "\\hfill \\LARGE TOC Bid Report\n";
  print TEXOUT "\\smallskip\n\n";
  print TEXOUT "\\normalsize\n";
  print TEXOUT "\\noindent\n";

  my @contacts = $m->comp("/funclib/tourn_admins.mas", tourn => $tourn, contact => 1);

  print TEXOUT "\\textbf{Contact Information}\n";
  print TEXOUT "\\smallskip\n";
  print TEXOUT "\\newline\n";
  print TEXOUT "\\noindent\n";

  print TEXOUT "\\parbox[l][][t]{3.25in}{";

  foreach my $contact (@contacts) {
    print TEXOUT "Director Name: \\dotfill ".Tab::texify($contact->first)." ".Tab::texify($contact->last)."\\newline\n";
    print TEXOUT "Email: \\dotfill ".Tab::texify($contact->email)."\\newline\n";
    print TEXOUT "Phone: \\dotfill ".Tab::texify($contact->phone)."\\newline\n";
  }

  print TEXOUT "}\n";
  print TEXOUT "\\hspace{.5in}\n";
  print TEXOUT "\\parbox[l][][t]{3.25in}{";
  my $tourn_site = Tab::TournSite->search(tourn => $tourn)->first;
  print TEXOUT "Host School: \\dotfill ".Tab::texify($tourn_site->site->name)."\\newline\n";
  print TEXOUT "Tournament Location: \\dotfill ".Tab::texify($contacts[0]->city).", ".Tab::texify($contacts[0]->state)."\\newline\n" if $contacts[0];

  print TEXOUT "}\n\n";

  my @bid_events;

  print TEXOUT "\\noindent\\rule{7.25in}{0.4pt}\n";

  EVENT:
  foreach my $event (@events) {

    my $bid = $event->setting("bid_round");

    next EVENT unless $bid;

    push @bid_events, $event;

	print TEXOUT "\\vspace{1mm}\n";
	print TEXOUT "\\parbox[l][][c]{1.5in}{";

    print TEXOUT "\\noindent\n";
    print TEXOUT "\\normalsize \\textbf{\\large ".Tab::texify($event->name)."} \\smallskip \\newline\n";
    print TEXOUT "\\noindent\n";

    my $bid_round = Tab::Round->retrieve($bid);
    my @entries = $m->comp("/funclib/round_entries.mas", round => $bid_round);

	my %already_bid = map {$_->id => 1} @entries;

    my $qual_debate = Tab::Round->retrieve($bid_round - 1);
    my @ghost_bids;

	if ($qual_debate->type eq "elim" && $event->type ne "speech" && $event->type ne "congress") {
		foreach my $panel ($qual_debate->panels( bye => 1)) {
			foreach my $entry ($m->comp("/funclib/panel_entries.mas", panel => $panel)) {
				push @ghost_bids, $entry unless $already_bid{$entry->id};
        	}
      	}
    }

    print TEXOUT "Bid Level: \\dotfill ".Tab::texify($bid_round->label)."\n\n";
    print TEXOUT "Total Entries: \\dotfill ".Tab::texify(scalar Tab::Entry->search(event => $event))."\n\n";
    print TEXOUT "Qualifying Teams: \\dotfill ".((scalar @entries) + (scalar @ghost_bids))."\n\n";

	print TEXOUT "}\n";

	print TEXOUT "\\hspace{.25in}\n";

	print TEXOUT "\\parbox[l][][c]{6in}{";

    print TEXOUT "\\small\n";
	print TEXOUT "{\\bf Earning Bids:}\n\n";
	my $tabular = "\\begin{tabular}{p{2.75in}p{2in}p{.25in}}";

    foreach my $entry (sort { $a->school->name.$a->name cmp $b->school->name.$b->name } @entries) {
		my @students = map { Tab::texify($_->first." ".$_->last) } $entry->students;
		local $" = " \\& ";

		print TEXOUT "\n \\noindent\n";
		print TEXOUT $tabular;
		print TEXOUT "@students & ".Tab::texify($entry->school->name)." & ".Tab::texify($entry->school->chapter->state)." \n ";
		print TEXOUT "\\end{tabular}\n";
    }

	if (@ghost_bids) { 
  		print TEXOUT "\\newline\n";
	    print TEXOUT "\\noindent\n";
		print TEXOUT "{\\bf Ghost bids:}\n\n";
	} else {
		print TEXOUT "\n";
	}

    foreach my $entry (sort { $a->school->name.$a->name cmp $b->school->name.$b->name } @ghost_bids) {
		my @students = map { Tab::texify($_->first." ".$_->last) } $entry->students;
		local $" = " \\& ";
		print TEXOUT "\\noindent\n";
		print TEXOUT $tabular;
		print TEXOUT "@students & ".Tab::texify($entry->school->name)." & ".Tab::texify($entry->school->chapter->state)." \n ";
		print TEXOUT "\\end{tabular}\n\n";
    }

	print TEXOUT "}\n";
	print TEXOUT "\\vspace{1mm}\n";
	print TEXOUT "\\noindent\\rule{7.25in}{0.4pt}\n";

  }

  print TEXOUT "\\newpage\n";

  #switching to wide margins for the packets
  print TEXOUT <<"EOF";
  \\addtolength{\\hoffset}{-.45in}
  \\addtolength{\\voffset}{-.25in}
  \\addtolength{\\textheight}{.5in}
  \\addtolength{\\textwidth}{1.15in}
  \\small
EOF

  close TEXOUT;
  foreach my $event (@bid_events) {
    unless ($event->type eq "speech" || $event->type eq "congress") {
      $m->comp("/tabbing/report/packet.mhtml", tourn => $tourn, session => $session, event_id => $event->id, file_dump => "$filename");
    }
  }

	if ($view eq "Mail") {
		
		$m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, tail => 1, no_redirect => 1);

		my $to = "linda.barker\@uky.edu, david.arnett\@uky.edu";

		$m->comp("/funclib/printout.mas", 
			tourn       => $tourn,
			filename    => $filename,
			tail        => 1,
			no_redirect => 1 );

		$m->comp("/funclib/send_email.mas", 
			from            => $account,
			raw             => $to,
			body            => "TOC Bid Report: ".$tourn->name,
			subject         => "TOC Bid Results from ".$tourn->name,
			attachment_name => $filename,
			attachment_path => "$filepath.pdf",
			no_footer       => 1);

		$m->redirect("index.mhtml?msg=bid report sent to $to");

	} else {
		$m->comp("/funclib/printout.mas", tourn => $tourn, filename => $filename, tail => 1 );
	}

</%init>
