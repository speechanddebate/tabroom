<%args>
	$tourn
	$account
	$session
	$set_tourn_id => undef
	$perms
</%args>
<%init>

	my $entry_only;

	unless ($account) { 
		my $err = "You are not logged in.  Log in to continue";
		$m->redirect("/index/index.mhtml?err=$err");
	}

	if ($set_tourn_id) { 
		$session->tourn($set_tourn_id);
		$session->update;
		$tourn = Tab::Tourn->retrieve($set_tourn_id);
	}

	unless ($tourn) {
		my $err = "You are no longer logged into a tournament" unless $tourn;
		$m->redirect("/user/home.mhtml?err=$err");
	}

	unless (${$perms}{"owner"} || ${$perms}{"full_admin"} || ${$perms}{"tabbing"} || ${$perms}{"group_tabbing"}) { 
		if (${$perms}{"entry_only"}) { 
			$entry_only++;
		} else { 
			my $err = "You do not have access to tab this tournament";
			$m->redirect("/register/index.mhtml?err=$err");
		}

	}


	my $only_group;

	if (${$perms}{"group_tabbing"} && ${$perms}{"group_tabbing"}->judge_group) { 

		$only_group = ${$perms}{"group_tabbing"}->judge_group;

		unless ($session->judge_group && $session->judge_group->id == $only_group->id) { 
			$session->judge_group($only_group->id);
			$session->update;
		}
	}


	unless ($tourn->settings) {

		if (${$perms}{"entry_only"} || (${$perms}{"limited"} &! ${$perms}{"setup"})) { 
			my $err = "That tournament is not set up.  An owner or admin must set it up before you can do anything";
			$m->redirect("/user/home.mhtml?err=$err");
		}	
		
		my $err = "You must set up your tournament before you can do anything else!";
		$m->redirect("/setup/tourn/main.mhtml?err=$err");
	}


</%init>

	<div id="wrapper">

		<div id="content">

% 			$m->call_next(account => $account, tourn => $tourn, session => $session, entry_only => $entry_only, perms => $perms, only_group => $only_group);

			<br style="clear: both;"> 

		</div> 
		
		<div id="content-spacer"></div>

	</div>
