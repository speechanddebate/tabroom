<%args>
	$account
	$session
	$tourn
	$perms        => undef
	$judge_id     => undef
	$judge_code   => undef
	$timeslot_id  => undef
	$flight       => undef
	$all          => undef
	$errs         => undef
	$ballot_err   => undef
	$rank_string  => undef
	$audit_mode   => undef
	$entry_only   => undef
	$points_later => undef
	$only_group   => undef
</%args>
<%init>

    my $judge;

    if ($judge_id) { 
        $judge = Tab::Judge->retrieve($judge_id);
    } elsif ($judge_code) { 
        my @code_judges = $m->comp("/funclib/tourn_judges.mas", tourn => $tourn, code => $judge_code);
        $judge = shift @code_judges if @code_judges;
    }

	my $session_group;

	if ($only_group) {
		$session->judge_group($only_group->id);
		$session->update;
	} else { 
		$session_group = $session->judge_group;
	}

	my $session_event = $session->event;

	if ($session_group && $session_group->tourn != $tourn) { 
		$session->judge_group("");
		$session->update;
		undef $session_group;
	}

	unless ($session_group) { 
		my @all_groups = $tourn->groups;
		if (scalar @all_groups == 1) { 
			$session_group = shift @all_groups;
			$session->judge_group($session_group->id);
			$session->update;
		}
	}

	my $timeslot = Tab::Timeslot->retrieve($timeslot_id) if $timeslot_id;

	if ($session_group) { 
		 $timeslot = $m->comp("/funclib/group_timeslots.mas", group => $session_group, undone => 1) if $session_group && not defined $timeslot;
	}   

    $flight = 1 unless $flight;
    my @panels = $m->comp('/funclib/judge_panels.mas', flight => $flight, judge => $judge, timeslot => $timeslot) if $judge && $timeslot ;

    my $panel = shift @panels if @panels;

	$m->comp("/funclib/panel_dedupe.mas", panel => $panel) if $panel;

</%init>

	<& menu.mas, 
		tourn        => $tourn,
		timeslot     => $timeslot,
		perms        => $perms,
		only_group   => $only_group,
		all          => $all,
		session      => $session,
		panel        => $panel,
		judge        => $judge,
		flight       => $flight,
		points_later => $points_later,
		audit_mode   => $audit_mode,
		entry_only   => $entry_only &>

	<div class="main"> 

%		if ($account->id == 9441) { 
			<div class="dkred row marbottom padmore"> 
				<h4>I think it'd be funny if I just listed one name at a time in this space all day</h4>
			</div>
%		} elsif ($account->id == 3941) { 
			<div class="dkred row marbottom padmore"> 
				<h4> 
					<% $account->first %>, if you're starting to suspect I purposefully introduce bugs whenever you
					use paper ballots, you might be onto something.
				</h4>
			</div>
%		} 

		<% $rank_string %>

%		if ($ballot_err) {
		
			<h1 class="warning centeralign" style="margin-top: 50px;">
				OH, NOES!!!!
			</h1>

			<h2 class="warning centeralign">
				STOP RIGHT THERE
			</h2>

			<h2 style="text-align: center;">
				The last ballot had an error:
			</h2>

			<h4 class="warning centeralign">
				<% $ballot_err %>
			</h4>

%		   if ($judge) {
				<h4 class="warning centeralign">
					Judge: <% $judge->first." ".$judge->last %> 
				</h4>
%		   }

			<p class="centeralign">
				Each ballot must be entered the same way twice in a row to be
				accepted.  Pass the ballot to someone else to enter again.
				This error will disappear once the ballot has been entered the
				same way twice in a row.
			</p>

%		} else {

%			if ($errs) {
				<div class="block lirdrow">
					<h4>Terrible terrible damage!</h4>
					<p><% $errs %></p>
				</div>
%			}

%			if ($judge &! $panel) { 
				<h4 class="centeralign" style="margin-bottom: 75pt; margin-top: 50pt;">
					No ballots found for judge in this round
				</h4>
%			}

%			unless ($judge) {
				<h4 class="centeralign" style="margin-bottom: 75pt; margin-top: 75pt;">
					Select a judge on the right to continue
				</h4>
%			} 

%			if ($panel) {

%				my $round = $panel->round;
%				my $tb_set = $round->tb_set;

%				unless ($tb_set > 0) {  
%					my $err = "This round doesn't have tiebreakers, thus I do not know what to ask you for. Set them and try again";
%					$m->redirect("/setup/schedule/event.mhtml?round_highlight=".$round->id."&event_id=".$round->event->id."&err=$err");
%				}

%				my $event_type = $round->event->type;
%				$event_type = "debate" if $event_type eq "pf" || $event_type eq "ld" || $event_type eq "policy" || $event_type eq "parli";

%				$event_type = "debate" if $event_type eq "wsdc" && $round->type eq "elim";
%				$event_type = "debate" if $event_type eq "wsdc" && $round->type eq "final";


%				if ($event_type eq "congress" && ($tourn->setting("ncfl") || $points_later)) {  

					<& "ballots/ncfl_congress.mas",
						session  => $session,
						account  => $account,
						judge    => $judge,
						timeslot => $timeslot,
						panel    => $panel
					&>

%				} elsif ($event_type eq "wudc") { 

					<& "ballots/wudc.mas",
						session  => $session,
						account  => $account,
						judge    => $judge,
						timeslot => $timeslot,
						panel    => $panel
					&>

%				} elsif ($event_type eq "wsdc") { 

					<& "ballots/wsdc.mas",
						session  => $session,
						account  => $account,
						judge    => $judge,
						timeslot => $timeslot,
						panel    => $panel
					&>

%				} elsif ($event_type eq "debate") { 

					<& "ballots/debate.mas",
						session  => $session,
						account  => $account,
						judge    => $judge,
						timeslot => $timeslot,
						panel    => $panel
					&>

%				} elsif ($event_type eq "speech") { 

					<& "ballots/speech.mas",
						session  => $session,
						account  => $account,
						judge    => $judge,
						timeslot => $timeslot,
						panel    => $panel
					&>

%				} elsif ($event_type eq "congress") { 

					<& "ballots/congress.mas",
						session  => $session,
						account  => $account,
						judge    => $judge,
						timeslot => $timeslot,
						panel    => $panel
					&>

%				}
%			}
%		}

	</div>
