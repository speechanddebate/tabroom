<%args>
	$sweep_set
</%args>
<%init>

	return unless $sweep_set;

	my $tourn = $sweep_set->tourn;
	
	my @sweep_sets;
	
	push @sweep_sets, $sweep_set;

	my @children = $sweep_set->children;

	if (@children) { 
		my %used;
		$used{$sweep_set->id}++;

		while (@children) { 
			my $take = shift @children;
			next if $used{$take->id};
			push @children, $take->children;
			push @sweep_sets, $take;
			$used{$take->id}++;
		}
	}

	my %entry_students = $m->comp("/funclib/tourn_students.mas", tourn => $tourn, by_entry => 'yes');

	my %points_by_student = ();
	my %count_by_student = ();
	my %countstring_by_student = ();
	my %entries_by_student = ();
	
	my %student_events_used = ();

	foreach my $set (@sweep_sets) { 

		next unless $set->rules;

		my ($points_ref, $ent_ref, $schools_ref, $event_ref, $code_ref) = $m->comp("/tabbing/results/sweep_tourn.mas", tourn => $tourn, sweep_set => $set);

		my @entries = sort { ${$points_ref}{$b} <=> ${$points_ref}{$a}} @{$ent_ref};

		my $events = $set->rule("events");
		my $entries_rule = $set->rule("entries");
		my $wildcards = $set->rule("wildcards");
		my $event_entries = $set->rule("event_entries");

		my %student_entries = ();
		my %student_event_entries = ();
		my %student_events = ();
		my %student_wildcards = ();

		foreach my $entry (@entries) { 

			my $ok;
			eval { $ok++ if $entry_students{$entry} && @{$entry_students{$entry}}; };
			next unless $ok;

			foreach my $student_id (@{$entry_students{$entry}}) { 

				my $event_id = ${$event_ref}{$entry};

				next unless ${$points_ref}{$entry};
				$entries_by_student{$student_id}++;

				next if 
					$entries_rule && 
					( $student_entries{$student_id} >= $entries_rule ) && 
					( $wildcards < 1 || $student_wildcards{$student_id} >= $wildcards );

				next if ( 
					( ($events && $student_events{$student_id} >= $events) || 
						($event_entries && $student_event_entries{$student_id."-".$event_id} >= $event_entries) 
					) && 
						($wildcards < 1 || $student_wildcards{$student_id} >= $wildcards )  
				);

				if (	
						($entries_rule && ($student_entries{$student_id} >= $entries_rule)) ||
						($events && $student_events{$student_id} >= $events ) || 
						($event_entries && $student_event_entries{$student_id."-".$event_id} >= $event_entries) 
					) {

					 $student_wildcards{$student_id}++;

				} else { 

					$student_entries{$student_id}++;
					$student_events{$student_id}++ unless $student_events_used{$student_id."-".$event_id};
					$student_event_entries{$student_id."-".$event_id}++;
					$student_events_used{$student_id."-".$event_id}++;

				}

				$count_by_student{$student_id}++;
				$countstring_by_student{$student_id} .= "\n" if $countstring_by_student{$student_id};
				$countstring_by_student{$student_id} .= ${$code_ref}{$entry}.": ".${$points_ref}{$entry};

				$points_by_student{$student_id} += ${$points_ref}{$entry};

			}
		}
	}

	return ( \%points_by_student, \%count_by_student, \%countstring_by_student, \%entries_by_student);

</%init>

