<%args>
	$tourn
	$type     => undef
	$event_id => undef
	$round_id => undef
</%args>
<%init>

	use POSIX;

	my $event = Tab::Event->retrieve($event_id) if $event_id;
	my $round = Tab::Round->retrieve($round_id) if $round_id;

	undef $round if ($round && ($round->type eq "elim" || $round->type eq "final"));

	my @all_rounds = $m->comp("/funclib/event_rounds.mas", event => $event, done => "yes")  if $event;

	my @rounds;

	unless ($event) { 
		$event = $tourn->events->first;
	}

	foreach my $round (@all_rounds) { 
		push @rounds, $round if $round->type ne "elim" && $round->type ne "final";
	}

	if ($event && not defined $round) { 
		$round = shift @rounds;
		push @rounds, $round;
	} 

	if ($round && not defined $event) {
		$event = $round->event;
	}

	my $novice = $event->setting("top_novice") if $event;
	my %student_ballots = ();

	my $tb_set_id = $event->setting("speaker_tbset");

	my $tb_set = Tab::TiebreakSet->retrieve($tb_set_id) if $tb_set_id;
    unless ($tb_set) {   
        my $err = "Event ".$event->name." does not have a speaker awards tiebreaker set applied to it.  Please pick one and try again";
        $m->redirect("/setup/events/tabbing.mhtml?event_id=".$event->id."&err=$err");
    }   

	my $points;
	my $ranks;
	my $wins;

	foreach my $tb ($tb_set->tiebreaks) { 
		$ranks++ if ($tb->name eq "ranks" || $tb->name eq "reciprocals");
		$wins++ if ($tb->name eq "opp_wins" || $tb->name eq "winloss" || $tb->name eq "ballots");
		$points++ if ($tb->name eq "points" || $tb->name eq "competition" || $tb->name eq "opp_points");
	}

	my @students;
	my @roundnames;

	if ($round) { 

		my $dbh = Tab::DBI->db_Main();

		my $sth = $dbh->prepare("
			select distinct value.id, value.tag, value.value, v2.student, value.student, ballot.entry, ballot.judge, 
				panel.bye, ballot.bye, ballot.noshow, ballot.chair, round.name
			from ballot_value value, ballot, panel, round, ballot_value v2
			where value.ballot = ballot.id
			and ballot.panel = panel.id
			and panel.round = round.id
			and panel.bye != 1
			and not exists ( select round_setting.id from round_setting where  round_setting.tag = 'ignore_results' and round_setting.round = round.id)
			and round.name <= ".$round->name."
			and round.event = ".$event->id."
			and ballot.id = v2.ballot
			group by value.id, v2.id
			order by round.name, ballot.entry, ballot.chair, ballot.judge, CASE value.tag WHEN ".' "ballot" then 1 when "rank" then 2 when "points" then 3 when "rebuttal_points" then 4 end, value.id'."
		");

		$sth->execute(); 

		my %student_round;

		while (my ($id, $tag, $value, $student, $value_student, $entryid, $judge, $pbye, $bye, $fft, $chair, $roundname) = $sth->fetchrow_array() ) { 

			next if $tag eq "rfd";
			next if $tag eq "comment";
			next if $tag eq "rebuttal_points";

			next if $tag eq "rank" && not defined $ranks;
			next if $tag eq "points" && not defined $points;
			next if $tag eq "ballot" && not defined $wins;
			next if $value_student > 0 && $value_student != $student;
			 
			push @students, $student;
			push @roundnames, $roundname;

			unless ($student_ballots{$student."-".$roundname}) { 

				$student_ballots{$student."-".$roundname} .= "\nRd $roundname: ";

			} else { 
				$student_ballots{$student."-".$roundname} .= ' ' if $tag eq "rank" && ($type eq "speech" || $type eq "wudc" || $type eq "congress");
				$student_ballots{$student."-".$roundname} .= ' ' if $tag eq "ballot" && $type ne "speech" && $type ne "wudc" && $type ne "congress";
			}

			$student_round{$student} = $roundname;

			if ($tag eq "ballot") { 

				if ($pbye) { 
					$student_ballots{$student."-".$roundname} .= "BYE";
				} elsif ($bye) { 
					$student_ballots{$student."-".$roundname} .= "BYE";
				} else { 
					$student_ballots{$student."-".$roundname} .= "W" if $value > 0;
					$student_ballots{$student."-".$roundname} .= "L" if $value < 1;
				}

			} else { 
				$student_ballots{$student."-".$roundname} .= $value;
			}

		}

        my $bye_sth = $dbh->prepare("
            select entry_student.student, ballot.entry, panel.id, panel.round, round.name
            from panel, ballot, round, entry_student
            where round.name <= ".$round->name."
			and round.event = ".$event->id."
            and panel.round = round.id
            and ballot.panel = panel.id
			and entry_student.entry = ballot.entry
            and panel.bye = 1
            and not exists ( 
                select ballot_value.id
                from ballot_value
                where ballot_value.ballot = ballot.id
				and ballot_value.student = entry_student.student
            )
            group by entry_student.student
        ");

        $bye_sth->execute();

        while (my ($student, $entry, $panel, $round, $roundname)  = $bye_sth->fetchrow_array() ) { 
			
			push @students, $student;
			push @roundnames, $roundname;

			$student_round{$student} = $roundname;
            $student_ballots{$student."-".$roundname} .= "\nRd $roundname: BYE" 
        }    

	}

	my %seen = (); 
	@students = grep { ! $seen{$_} ++ } @students;
	@roundnames = grep { ! $seen{$_} ++ } @roundnames;
	@roundnames = sort {$a <=> $b} @roundnames;

	foreach my $student (@students) { 
		foreach my $roundname (@roundnames) { 
			$student_ballots{$student} .= $student_ballots{$student."-".$roundname};
		}
	}

	my %school_name;

	foreach my $school ($tourn->schools) { 
		$school_name{$school->id} = $school->short_name;
	}

	$m->abort unless $round_id || $round;
	$round_id = $round->id unless $round_id;

	my $codes = $event->setting("code_style") if $event;
	my $no_school++ if ($codes eq "school_number" || $codes eq "school_names" || $codes eq "initials" || $codes eq "school_name_only" || $codes eq "schoolname_code" || $codes eq "full_initials");

</%init>

	<div class="blankfull">

		<& /funclib/tablesorter.mas, table => "sortme" &>

			<div class="full nospace">

				<span class="third">
					<h2 class="padmore">
						<% $event->name %>
					</h2>
				</span>

				<span class="third centeralign">

					<h5 class="inline marright">
						Event:
					</h5>

					<form action="speakers.mhtml" method="post">
					<input type="hidden" name="type" value="Speakers">

					<select name="event_id" onchange='this.form.submit()' class="fixedmed chosen">
%						my @events = sort {$a->name cmp $b->name} $tourn->events;
%						foreach my $oevent (sort {$a->type cmp $b->type} @events) { 
%							next unless $oevent->setting("speaker_tbset");
							<option value="<% $oevent->id %>" <% $oevent->id == $event_id ? 'selected="selected"' : "" %> >
								<% $oevent->name %>
							</option>
%						}
					</select>
					</form>
				</span>

				<span class="third centeralign">

%					if (@rounds) { 

						<h5 class="inline marright">
							As of
						</h5>

						<form action="speakers.mhtml" method="post">
						<input type="hidden" name="event_id" value="<% $event->id %>">
						<input type="hidden" name="type" value="Speakers">

						<select name="round_id" onchange='this.form.submit()' class="fixedmed chosen">

							<option value="" <% $type ne "Speakers" ? "selected" : "" %>></option>

%							foreach my $oround (sort {$b->name <=> $a->name} @rounds) {
%								next unless $oround && $oround->id;
%								next if $oround->type eq "elim";
%								next if $oround->type eq "final";
								<option value="<% $oround->id %>" <% $round && $oround->id == $round_id ? "selected" : "" %>>
									<% $oround->realname %>
								</option>
%							}

						</select>
						</form>
%					}
				</span>

			</div>


%		if ($round) { 

%			my ($students_ref, $tbs_ref, $desc_ref, $noshow_ref, $meh, $long_desc_ref, $novice_ref, $name_ref, $code_ref, $school_ref) = $m->comp("order_speakers.mas", round => $round);

            <ul id="tabnav" class="padno">

                <li>
                    <a href="index.mhtml?event_id=<% $event->id %>&round_id=<% $round->id %>">Entries in Order</a>
                </li>

                <li class="selected">
                    <a href="speakers.mhtml?event_id=<% $event->id %>&round_id=<% $round->id %>">Speakers in Order</a>
                </li>

			</ul>

			<table cellpadding="4" cellspacing="1" id="sortme">

				<thead>
					<tr class="yellowrow">

						<th class="smallish">
						</th>

						<th class="smallish centeralign">
							Name
						</th>

						<th class="smaller">
							Nov
						</th>

						<th class="smallish centeralign">
							Code
						</th>

%						unless ($no_school) { 
							<th class="smallish centeralign">
								School
							</th>
%						}

%						foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) { 
							<th class="smallish" title="<% ${$long_desc_ref}{$key} %>">
								<% ${$desc_ref}{$key} %>
							</th>
%						}

					</tr>

				</thead>

				<tbody>

%					my $count = 1;

%					if ($students_ref) { 

%						my $last_tied;

%						foreach my $key (sort {$a <=> $b} keys %{$students_ref}) { 

%							my $tie++ if scalar @{${$students_ref}{$key}} > 1;

%							foreach my $student_id (@{${$students_ref}{$key}}) { 

								<tr class="<% $tie ? "lirdrow " : "" %> <% $tie && $last_tied ? "libordertop" : "" %>">

%									undef $last_tied;

									<td class="centeralign smallish nowrap">
										<% $key %>
									</td>

									<td class="smallish nospace hover padleft" title="<% $student_ballots{$student_id} %> <% ${$noshow_ref}{$student_id} ? "\n(No Show)" : "" %>">
										<% ${$name_ref}{$student_id} %>
									</td>

									<td class="smallish nospace centeralign">
										<% ${$novice_ref}{$student_id} ? "Nov" : "" %>
									</td>

									<td class="smallish" title="<% $student_ballots{$student_id} %> <% ${$noshow_ref}{$student_id} ? "\n(No Show)" : "" %>">
										<% ${$code_ref}{$student_id} %>
									</td>

%									unless ($no_school) { 
										<td class="smallish">
											<% $school_name{${$school_ref}{$student_id}} %>
										</td>
%									} 

%									foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) { 

%										my $value = ${$tbs_ref}{$student_id."-".$key};
%										$value = sprintf("%.2f", $value);
%										$value =~ s/\.(?:|.*[^0]\K)0*\z//;

										<td class="smallish nowrap rightalign">
											<% $value %>
										</td>
%									}

								</tr>

%							}

%							$last_tied++ if $tie;

%						} 

%					} 

				</tbody>

			</table>

%			if ($novice) { 
				<p class="explain">(N) desginates novices</p>
%			} 

%		}
	
	</div>


