<%args>
	$tourn
	$event_id   => undef
	$round_id   => undef
	$only_group => undef
</%args>
<%init>

	use POSIX;

	my $event = Tab::Event->retrieve($event_id) if $event_id;
	my $round = Tab::Round->retrieve($round_id) if $round_id;

	my @events = $only_group->events if $only_group;
	@events = $tourn->events unless $only_group;
	@events = sort {$a->name cmp $b->name} @events;

	unless ($event) { 
		foreach my $candidate (@events) { 
			$event = $candidate if $candidate->rounds;
		}
	}

	$m->abort unless $event;

	my @rounds = $m->comp("/funclib/event_rounds.mas", event => $event, done => "yes");
	$round = $m->comp("/funclib/event_current_round.mas", event => $event, done => "done") unless $round;
	$round = $rounds[0] unless $round;

	my $novice = $event->setting("top_novice");
	undef $novice if $novice eq "none";
	my $team_points = $event->setting('team_points');

	my %is_novice = (); 

	if ($novice && $event) { 
		foreach my $novice ($m->comp("/funclib/event_novii.mas", event => $event)) { 
			$is_novice{$novice->id}++;
		}   
	}   

	my %entry_ballots = ();

	my %entry_names = $m->comp("/funclib/event_names.mas", event => $event);

	my @roundnames;

	if ($round) { 

		my $points;
		my $ranks;
		my $wins;

		next unless $round->tb_set;

		foreach my $tb ($round->tb_set->tiebreaks) { 
			$ranks++ if ($tb->name eq "ranks" || $tb->name eq "reciprocals");
			$wins++ if ($tb->name eq "opp_wins" || $tb->name eq "winloss" || $tb->name eq "ballots");
			$points++ if ($tb->name eq "points" || $tb->name eq "competition" || $tb->name eq "opp_points");
		}

		my $dbh = Tab::DBI->db_Main();

		my $sth = $dbh->prepare("
			select distinct value.id, value.tag, value.value, ballot.entry, ballot.judge, panel.bye, ballot.bye, ballot.noshow, ballot.chair, round.name, round_setting.value 
			from round
			left join panel on panel.round  =round.id
			left join ballot on ballot.panel = panel.id
			left join ballot_value value on value.ballot = ballot.id
			left join round_setting on round_setting.round = round.id and round_setting.tag = 'ignore_results'
			where round.name <= ".$round->name."
			and round.event = ".$event->id."
			order by round.name, ballot.entry, ballot.chair, ballot.judge, CASE value.tag 
				WHEN ".' "ballot" then 1 when "rank" then 2 when "points" then 3 when "rebuttal_points" then 4 end'."
		");

		$sth->execute(); 

		my %entry_round;
		my %points_done;

		while (my ($id, $tag, $value, $entryid, $judge, $pbye, $bye, $noshow, $chair, $roundname, $ignore_results) = $sth->fetchrow_array() ) { 

			push @roundnames, $roundname;

			next if $tag eq "rank" && not defined $ranks;
			next if $tag eq "points" && not defined $points;
			next if $tag eq "ballot" && not defined $wins;

			$entry_round{$entryid} = $roundname;

			if ($ignore_results &!  $entry_ballots{$entryid}{$roundname}) { 
				$entry_ballots{$entryid}{$roundname} .= " Not Counted:  ";
			}

			if ($pbye) { 
				$entry_ballots{$entryid}{$roundname} .= "BYE "; 
			} elsif ($bye && not defined $tag) { 
				$entry_ballots{$entryid}{$roundname} .= "BYE "; 
			} elsif ($tag eq "ballot") { 

				if ($bye) { 
					$entry_ballots{$entryid}{$roundname} .= "BYE ";
				} elsif ($noshow) { 
					$entry_ballots{$entryid}{$roundname} .= "FFT " 
				} else { 
					$entry_ballots{$entryid}{$roundname} .= "W  " if $value > 0;
					$entry_ballots{$entryid}{$roundname} .= "L  " if $value < 1;
				}

			} else { 

				if ($tag eq "points") { 

					unless ($team_points && $points_done{$entryid."-".$roundname}++) { 
						foreach (length($value) .. 5) { 
							$value .= "&nbsp;";
						}

						$entry_ballots{$entryid}{$roundname} .= $value." " if defined $value;
					}

				} else { 
				
					$entry_ballots{$entryid}{$roundname} .= $value." " if defined $value;
				}
			}

		}

		my %seen = (); 
		@roundnames = grep { ! $seen{$_} ++ } @roundnames;
		@roundnames = sort @roundnames;

	}

	$round_id = $round->id if $round;

	my $codes = $event->setting("code_style") if $event;
	my $no_school++ if ($codes eq "school_number" || $codes eq "school_names" || $codes eq "initials" || $codes eq "school_name_only" || $codes eq "schoolname_code" || $codes eq "full_initials");


</%init>

	<div class="blankfull">

		<& /funclib/tablesorter.mas, table => "sortme" &>

		<div class="full nospace odd">

			<span class="quarter nowrap">
				<h2 class="padno marless">
					<% $event->name %>
				</h2>
			</span>

			<span class="threetenths marno rightalign">
				<form action="index.mhtml" method="post">
				<input type="hidden" name="type" value="Speakers">

				<h5 class="inline marright">
					Event:
				</h5>

				<select name="event_id" onchange='this.form.submit()' class="fixedmed chosen">
%					foreach my $oevent (sort {$a->type cmp $b->type} @events) { 
						<option value="<% $oevent->id %>" <% $oevent->id == $event->id ? 'selected="selected"' : "" %> >
							<% $oevent->name %>
						</option>
%					}
				</select>
				</form>
			</span>

			<span class="threetenths marno">

%				if (@rounds) { 

					<h5 class="inline marright">
						As of
					</h5>

					<form action="index.mhtml" method="post">	
					<input type="hidden" name="event_id" value="<% $event->id %>">

					<select name="round_id" onchange='this.form.submit()' class="fixedmed chosen">
%						foreach my $oround (sort {$b->name <=> $a->name} @rounds) {
%							next unless $oround && $oround->id;
%							next unless $round && $round->id;
							<option value="<% $oround->id %>" <% $round && $oround->id == $round->id ? "selected" : "" %>>
								<% $oround->realname %>
						</option>
%						}

					</select>
					</form>
%				}
			</span>

			<span class="eighth rightalign">
%				if ($round) { 
					<a class="dkblue button" href="csv.mhtml?round_id=<% $round_id %>&event_id=<% $event->id %>" >
						Spreadsheet
					</a>
%				}
			</span>

		</div>

		<br />

%		if ($round) { 

%			my $equal_elims++ if $round->tb_set->setting("equal_elims") && $round->type eq "elim";
%			my $round_robin++ if $event->setting("round_robin") && $round->type ne "elim" && $round->type ne "final";

%			my ($entries_ref, $tbs_ref, $desc_ref, $noshow_ref, $meh, $panrank_ref, $panletter_ref, $long_desc_ref) = $m->comp("order_entries.mas", long_names => 1, round => $round);

%			my %id_entry = map {$_->id => $_ } $event->entries;


%			if ($event && ($event->type ne 'speech' && $event->type ne 'congress') &! ($team_points)) {
				<ul id="tabnav" class="padno">

					<li class="selected">
						<a href="index.mhtml?event_id=<% $event->id %>&round_id=<% $round->id %>">Entries in Order</a>
					</li>

					<li>
						<a href="speakers.mhtml?event_id=<% $event->id %>&round_id=<% $round->id %>">Speakers in Order</a>
					</li>

				</ul>
%			}


			<table cellpadding="4" cellspacing="1" id="sortme">

				<thead>
					<tr class="yellowrow"> 

						<th class="smallish">
						</th>

						<th class="smallish">
							Code
						</th>

%						if ($novice) { 
							<th class="smaller centeralign">
								Nov
							</th>
%						} 

%						unless ($codes eq "names" || $codes eq "last_names" || $codes eq "names_lastfirst") { 
							<th class="smallish">
								Name
							</th>
%						} 

%						unless ($no_school) { 
							<th class="smallish">
								School
							</th>
%						} 

%						if ($equal_elims) { 

							<th class="smallish">
								<span title="Rank within Section or Chamber">
									ScRk
								</span>
							</th>
							<th class="smallish">
								<span class="Section or Chamber">
									Sec
								</span>
							</th>

%						} elsif ($round_robin) { 

							<th class="smallish">
								<span title="Rank within Pod">
									PdRk
								</span>
							</th>
							<th class="smallish">
								<span class="Pod">
									Pod
								</span>
							</th>
%						}

%						foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) { 
							<th class="smallish">
								<span title="<% ${$long_desc_ref}{$key} %>">
									<% ${$desc_ref}{$key} %>
								</span>
							</th>
%						}

					</tr>

				</thead>

				<tbody>

%					my $count = 1;

%					if ($entries_ref) { 

%						my $last_tied;

%						foreach my $key (sort {$a <=> $b} keys %{$entries_ref}) { 

%							my $tie++ if scalar @{${$entries_ref}{$key}} > 1;

%							undef $tie if $round->type eq "elim" && $event->type ne "speech" && $event->type ne "congress";

%							foreach my $entry_id (@{${$entries_ref}{$key}}) { 

%								my $entry = $id_entry{$entry_id};
%								next unless $entry;

								<tr class="<% $tie ? "lirdrow " : "" %> <% $tie && $last_tied ? "libordertop" : "" %>">

%									undef $last_tied;

									<td class="centeralign smallish nowrap nospace">
										<% $key %>
									</td>

%									$m->print('<td class="smallish nospace padleft hover" title="Ballots:'."\n");
%										foreach my $roundname (@roundnames) { 
%											next unless $entry_ballots{$entry_id}{$roundname};
%											$m->print("$roundname: ");
%											$m->print("$entry_ballots{$entry_id}{$roundname}\n");
%										}
%										$m->print(" (Noshowed) ") if ${$noshow_ref}{$entry_id};
%										$m->print('">');
										<% $entry->code %>
									</td>

%									if ($novice) {
										<td class="smallish centeralign">
											<% $is_novice{$entry_id} ? " Nov " : "" %>
										</td>
%									}

%									unless ($codes eq "names" || $codes eq "last_names" || $codes eq "names_lastfirst") { 

										<td class="smallish" title="<% $entry_names{$entry->id} %>">
											<% $entry->name %> 
										</td>
%									}

%									unless ($no_school) { 
										<td class="smallish">
											<% $entry->school->short_name %>
										</td>
%									}

%									if ($equal_elims || $round_robin) { 
										<td class="smallish">
											<% ${$panrank_ref}{$entry_id} %> 
										</td>
										<td class="smallish">
											<% ${$panletter_ref}{$entry_id} %>
										</td>
%									}

%									foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) { 

%										my $value = ${$tbs_ref}{$entry_id."-".$key};
%										$value =~ s/\.(?:|.*[^0]\K)0*\z//;
%										$value = sprintf("%.2f", $value) unless ${$desc_ref}{$key} eq "W" || ${$desc_ref}{$key} eq "H2H" || ${$desc_ref}{$key} eq "Bal";

										<td class="smallish nowrap rightalign">
											<% $value %>
										</td>
%									}

								</tr>

%							}

%							$last_tied++ if $tie;

%						} 

%					}

				</tbody>

			</table>

%			if ($novice) { 
				<p class="explain">(N) desginates all-novice teams</p>
%			} 

%		}
	
	</div>


