<%args>
	$tourn
	$event_id => undef
	$round_id => undef
</%args>
<%init>

	use POSIX;

	my $event = Tab::Event->retrieve($event_id) if $event_id;
	my $round = Tab::Round->retrieve($round_id) if $round_id;

	unless ($event) { 
		$event = $tourn->events->first;
	}

	my @rounds = $m->comp("/funclib/event_rounds.mas", event => $event, done => "yes")  if $event;

	unless ($round) { 
		$round = $rounds[0];
	} 

	my $novice = $event->setting("top_novice") if $event;
	my %is_novice = (); 

	if ($novice && $event) { 
		foreach my $novice ($m->comp("/funclib/event_novii.mas", event => $event)) { 
			$is_novice{$novice->id}++;
		}   
	}   

	my %entry_ballots = ();

	my $codes = $event->setting("code_style") if $event;

	my @roundnames;

	if ($round) { 

		my $points;
		my $ranks;
		my $wins;

		next unless $round->tb_set;

		foreach my $tb ($round->tb_set->tiebreaks) { 
			$ranks++ if ($tb->name eq "ranks" || $tb->name eq "reciprocals");
			$wins++ if ($tb->name eq "opp_wins" || $tb->name eq "winloss" || $tb->name eq "ballots");
			$points++ if ($tb->name eq "points" || $tb->name eq "competition" || $tb->name eq "opp_points");
		}

		my $dbh = Tab::DBI->db_Main();

		my $sth = $dbh->prepare("
			select value.id, value.tag, value.value, ballot.entry, ballot.judge, panel.bye, 
				ballot.bye, ballot.noshow, ballot.chair, round.name
			from ballot_value value, ballot, panel, round
			where value.ballot = ballot.id
			and ballot.panel = panel.id
			and panel.round = round.id
			and round.name <= ".$round->name."
			and round.event = ".$event->id."
			order by round.name, ballot.entry, ballot.chair, ballot.judge, CASE value.tag 
				WHEN ".' "ballot" then 1 when "rank" then 2 when "points" then 3 end'."
		");

		$sth->execute(); 

		my %entry_round;
		my %done;

		while (my ($id, $tag, $value, $entryid, $judge, $pbye, $bye, $noshow, $chair, $roundname) = $sth->fetchrow_array() ) { 

			push @roundnames, $roundname;

			next if $tag eq "rank" && not defined $ranks;
			next if $tag eq "points" && not defined $points;
			next if $tag eq "ballot" && not defined $wins;

			$entry_round{$entryid} = $roundname;

			if ($tag eq "ballot") { 

				if ($pbye) { 
					$entry_ballots{$entryid}{$roundname} .= "BYE " 
				} elsif ($bye) { 
					$entry_ballots{$entryid}{$roundname} .= "BYE " 
				} elsif ($noshow) { 
					$entry_ballots{$entryid}{$roundname} .= "FFT " 
				} else { 
					$entry_ballots{$entryid}{$roundname} .= "W " if $value > 0;
					$entry_ballots{$entryid}{$roundname} .= "L " if $value < 1;
				}

			} else { 
				$entry_ballots{$entryid}{$roundname} .= $value." " if defined $value;
			}

		}

		my %seen = (); 
		@roundnames = grep { ! $seen{$_} ++ } @roundnames;
		@roundnames = sort @roundnames;

		my $bye_sth = $dbh->prepare("
			select ballot.entry, panel.id, panel.round, round.name, panel.bye, ballot.bye, ballot.noshow
			from panel, ballot, round
			where round.name <= ".$round->name."
			and panel.round = round.id
			and ballot.panel = panel.id
			and ballot.audit = 1
			and not exists ( 
				select ballot_value.id
				from ballot_value
				where ballot_value.ballot = ballot.id
			)
			group by ballot.id
		");

		$bye_sth->execute();

		while (my ($entry, $panel, $round, $roundname, $pbye, $bbye, $noshow)  = $bye_sth->fetchrow_array() ) {
			$entry_ballots{$entry}{$roundname} .= "BYE " if $pbye || $bbye;
			$entry_ballots{$entry}{$roundname} .= "FFT " if $noshow;
		}    

	}

	$round_id = $round->id if $round;

</%init>

	<div class="menu">

%		if ($event && @rounds) { 

			<div class="sidenote">

				<h4>As of round</h4>

				<form action="index.mhtml" method="post">
				<input type="hidden" name="event_id" value="<% $event->id %>">

				<div class="liblrow visible centeralign">
					<select name="round_id" onchange='this.form.submit()' class="fixedmed chosen">
%						foreach my $oround (sort {$b->name <=> $a->name} @rounds) {
%							next unless $oround && $oround->id;
%							next unless $round && $round->id;
							<option value="<% $oround->id %>" <% $round && $oround->id == $round->id ? "selected" : "" %>>
								<% $oround->realname %>
							</option>
%						}

					</select>
					</form>
				</div>
			</div>
%		}

		<div class="sidenote">
			<h4>Events:</h4>

			<form action="speakers.mhtml" method="post">
			<input type="hidden" name="type" value="Speakers">

			<div class="liblrow centeralign visible">
				<select name="event_id" onchange='this.form.submit()' class="fixedmed chosen">
%					my @events = sort {$a->name cmp $b->name} $tourn->events;
%					foreach my $oevent (sort {$a->type cmp $b->type} @events) { 
						<option value="<% $oevent->id %>" <% $oevent->id == $event_id ? 'selected="selected"' : "" %> >
							<% $oevent->name %>
						</option>
%					}
				</select>
			</div>
		</div>

	</div>

	<div class="main">

		<& /funclib/tablesorter.mas, table => "sortme" &>

%		if ($round) { 

%			my $equal_elims++ if $round->tb_set->setting("equal_elims") && $round->type eq "elim";
%			my $round_robin++ if $event->setting("round_robin") && $round->type ne "elim" && $round->type ne "final";

%			my ($entries_ref, $tbs_ref, $desc_ref, $noshow_ref, $meh, $panrank_ref, $panletter_ref, $long_desc_ref) = $m->comp("order_entries.mas", long_names => 1, round => $round);

%			my %id_entry = map {$_->id => $_ } $event->entries;

			<h2 style="padding-bottom: 3px; margin-bottom: 0;">
				<% $event->name %>
			</h2>

%			if ($event && $event->type ne 'speech' && $event->type ne 'congress') { 
				<ul id="tabnav" class="rightalign marno padno" style="padding-bottom: 0; margin-bottom: 2px; margin-top: 2px;">

					<li class="selected">
						<a href="index.mhtml?event_id=<% $event->id %>&round_id=<% $round->id %>">Entries in Order</a>
					</li>

					<li>
						<a href="speakers.mhtml?event_id=<% $event->id %>&round_id=<% $round->id %>">Speakers in Order</a>
					</li>

				</ul>
%			}


			<div>	
				<span class="half">
					<h4>Entries as of <% $round->realname %></h4>
				</span>
				<span class="half rightalign">
					<p class="explain nospace">Hover mouse over code to see raw scores</p>
				</span>
			</div>

			<table cellpadding="4" cellspacing="1" id="sortme">

				<thead>
					<tr class="yellowrow">

						<th class="smallish">
						</th>

						<th class="smallish center">
							Code
						</th>

%						unless ($codes eq "names" || $codes eq "last_names" || $codes eq "names_lastfirst") { 
							<th class="smallish center">
								Name
							</th>
%						} 

%						unless ($codes eq "school_number" || $codes eq "school_names" || $codes eq "initials" || $codes eq "school_name_only" || $codes eq "schoolname_code") { 
							<th class="smallish center">
								School
							</th>
%						} 

%						if ($equal_elims) { 

							<th class="smallish">
								<span title="Rank within Section or Chamber">
									ScRk
								</span>
							</th>
							<th class="smallish">
								<span class="Section or Chamber">
									Sec
								</span>
							</th>

%						} elsif ($round_robin) { 

							<th class="smallish">
								<span title="Rank within Pod">
									PdRk
								</span>
							</th>
							<th class="smallish">
								<span class="Pod">
									Pod
								</span>
							</th>
%						}

%						foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) { 
							<th class="smallish">
								<span title="<% ${$long_desc_ref}{$key} %>">
									<% ${$desc_ref}{$key} %>
								</span>
							</th>
%						}

					</tr>

				</thead>

				<tbody>

%					my $count = 1;

%					if ($entries_ref) { 

%						my $last_tied;

%						foreach my $key (sort {$a <=> $b} keys %{$entries_ref}) { 

%							my $tie++ if scalar @{${$entries_ref}{$key}} > 1;
%							undef $tie if $round->type eq "elim" && $event->type ne "speech" && $event->type ne "congress";

%							foreach my $entry_id (@{${$entries_ref}{$key}}) { 

%								my $entry = $id_entry{$entry_id};
%								next unless $entry;

								<tr class="<% $tie ? "lirdrow " : "" %> <% $tie && $last_tied ? "libordertop" : "" %>">

%									undef $last_tied;

									<td class="centeralign smallish nowrap padno" style="width: 25px;">
										<% $key %>
									</td>

									<td class="smallish">
%										$m->print('<span class="hover nospace block nowrap" style="width: 128px;" title="');
%											foreach my $roundname (@roundnames) { 
%												next unless $entry_ballots{$entry_id}{$roundname};
%												$m->print("$roundname: ");
%												$m->print("$entry_ballots{$entry_id}{$roundname}\n\n");
%											}
%										$m->print(" (Noshowed) ") if ${$noshow_ref}{$entry_id};
%										$m->print('">');
											<span class="fivesixth nospace nowrap">
												<% $entry->code %>
											</span>
											<span class="sixth nospace rightalign">
												<% $is_novice{$entry_id} ? " (N) " : "" %>
											</span>
										</span>
									</td>

%									unless ($codes eq "names" || $codes eq "last_names" || $codes eq "names_lastfirst") { 
										<td class="smallish" title="<% $entry->name %>">
											<div style="width: 64px;" class="nowrap">
												<% $entry->name %> 
											</div>
										</td>
%									}

%									unless ($codes eq "school_number" || $codes eq "school_names" || $codes eq "initials" || $codes eq "school_name_only" || $codes eq "schoolname_code") { 
										<td class="nowrap smallish">
											<span class="nowrap block nospace" style="width: 100px;">
												<% $entry->school->short_name %>
											</span>
										</td>
%									}

%									if ($equal_elims || $round_robin) { 
										<td class="smallish">
											<% ${$panrank_ref}{$entry_id} %> 
										</td>
										<td class="smallish">
											<% ${$panletter_ref}{$entry_id} %>
										</td>
%									}

%									foreach my $key (sort {$a <=> $b} keys %{$desc_ref}) { 

%										my $value = ${$tbs_ref}{$entry_id."-".$key};
%										$value = sprintf("%.2f", $value);
%										$value =~ s/\.(?:|.*[^0]\K)0*\z//;

										<td class="smallish nowrap">
											<% $value %>
										</td>
%									}

								</tr>

%							}

%							$last_tied++ if $tie;

%						} 

%					}

				</tbody>

			</table>

%			if ($novice) { 
				<p class="explain">(N) desginates all-novice teams</p>
%			} 

%		}
	
	</div>


