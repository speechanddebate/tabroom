<%args>
	$round
	$debug   => undef
	$sort_by => "letter"
</%args>
<%init>

	my $event = $round->event;
	my $tourn = $event->tourn;

	my $codes    = $tourn->setting("schemat_display");

	unless ($event->category > 0) {
		$m->comp("/funclib/abort.mas",
			message => "This event ".$event->abbr." has no judge category.  Please set one to continue in Setup => Events"
		);
	}

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select
			count(round.id)
		from round
		where round.event =?
			and round.post_primary = 3
	");

	$sth->execute($event->id);
	my ($published) = $sth->fetch();

	my $no_codes = $event->category->setting("no_codes");

	my %event_settings = $event->all_settings();

	my $round_robin++ if $event_settings{"round_robin"};
	my $anonymous_public = $event_settings{"anonymous_public"};
	my $ncfl++ if $tourn->setting("ncfl");

	Tab::Panel->columns(TEMP => "roomurl");
	Tab::Panel->columns(TEMP => "roomname");
	Tab::Panel->columns(TEMP => "roomnotes");
	Tab::Panel->columns(TEMP => "hybrid");

	Tab::Panel->set_sql( schemat => "
		select panel.*, room.name as roomname, room.notes as roomnotes, room.url as roomurl, ps.value as hybrid
		from panel
		left join panel_setting ps on ps.panel = panel.id and ps.tag = 'online_hybrid'
		left join room on panel.room = room.id
		where panel.round = ?
		order by panel.bye, roomname, panel.flight"
	);

	my @panels = Tab::Panel->search_schemat($round->id);
	my @entries = $m->comp("/funclib/round_entries.mas", round => $round);
	my @judges = $m->comp("/funclib/round_judges.mas", round => $round);
	my @ballots = $m->comp("/funclib/round_ballots.mas", round => $round);

    my %pod_name;
	my %entry_wins;
	my $round_type = $round->type;

	$round_type = "powered"
		if $round_type eq "highhigh"
		|| $round_type eq "highlow";

	$round_type = "elim"
		if $round_type eq "final";

    if ($round_robin) {

        foreach my $entry (@entries) {

			my $pod_id = $entry->setting("pod");
            next if $pod_name{$pod_id};

            $pod_name{$pod_id} = $event_settings{"pod_".$pod_id};

            $pod_name{$pod_id} = "Pod ".$pod_id
				unless $pod_name{$pod_id};
        }

	} elsif ($published > 0 && $round_type eq "powered") {

		%entry_wins = $m->comp(
			"/funclib/entry_wins.mas",
			round  => $round,
			event  => $event,
			public => 3
		);
	}

    my %judge_by_id = ();

    foreach my $judge (@judges) {
        $judge_by_id{$judge->id} = $judge;
    }

	my %entries_by_panel = ();

	foreach my $entry (@entries) {
		push (@{$entries_by_panel{$entry->panelid}}, $entry);
	}

	my %used;
	my %ballots_by_entry = ();
	my %panel_undone = ();
    my %judges_by_panel = ();

	foreach my $ballot (@ballots) {

		if ($ballot->entry) {
			push (@{$ballots_by_entry{$ballot->entry->id}}, $ballot);
		}

		unless ($ballot->audit) {
			$panel_undone{$ballot->panel->id}++;
		}

		if ($ballot->judge) {

			next if $used{$ballot->judge->id}{$ballot->panel->id}++;

			push (@{$judges_by_panel{$ballot->panel->id}}, $judge_by_id{$ballot->judge->id})
				if $judge_by_id{$ballot->judge->id}
				&& $round->published != 2;
		}
	}

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
	my $start = $round->start_time;
	$start = $round->timeslot->start unless $start;
	$start->set_time_zone($tz);

    my $no_side_constraints++
		if $event_settings{'no_side_constraints'};

    my $sidelocks++
		if $round_type eq "elim"
		&& (not defined $no_side_constraints);

	undef $sidelocks if $tourn->setting("nsda_nats") && (not defined $event_settings{"not_nats"});

	my $include_room_notes = $round->setting("include_room_notes");
	my $use_normal_rooms = $round->setting("use_normal_rooms");

	my $decision_deadline;
	if ($round->type eq "elim" || $round->type eq "final") {
		$decision_deadline = $event_settings{"elim_decision_deadline"};
	} else {
		$decision_deadline = $event_settings{"prelim_decision_deadline"};
	}

	my $decision_time;
	my $flight_start;
	my $flight_decision;

	my $time_class = "threefifths";
	my $print_class = "tenth";

	if ($decision_deadline) {
		$decision_time = $start->clone;
		$decision_time->add("minutes", $decision_deadline);
	}

	if ($round->flighted > 1) {
		if ($event_settings{"flight_offset"}) {
			$flight_start = $start->clone;
			$flight_start->add('minutes', $event_settings{"flight_offset"});

			if ($decision_deadline) {
				$flight_decision = $flight_start->clone;
				$flight_decision->add("minutes", $decision_deadline);

				$time_class="seventenths";
				$print_class="twenty reallynospace";
			}
		}
	}

</%init>

	<div class="nospace flexrow">

		<span class="half">
			<h4><% $event->abbr %> <% $round->realname %></h4>
		</span>

		<span class="twofifths semibold rightalign">
			<p
				class = "bluetext bigger semibold flexrow nospace"
				style = "justify-content: center;"
			>
				<span class="padright">
					Start:
				</span>

				<span class="padright">
					<%
						$round->flighted > 1 && $flight_start ? "F1: " : ""
					%> <%
						Tab::nicetime($start)
					%> <% $round->flighted > 1 && $flight_start ? "/ F2: ".Tab::nicetime($flight_start) : "" %>
					<% Tab::tzname($tz) %>
				</span>
			</p>

%			if ($decision_time) {
				<p
					class="orangetext bigger semibold flexrow nospace"
					style = "justify-content: center;"
				>
					<span class="padright">
						Decisions Due:
					</span>
					<span class="padright">
						<%
							$round->flighted > 1 && $flight_decision ? "F1: " : ""
						%> <%
							Tab::nicetime($decision_time)
						%> <% $round->flighted > 1 && $flight_decision ? "/ F2: ".Tab::nicetime($flight_decision) : "" %>
						<% Tab::tzname($tz) %>
					</span>
				</p>
%			}
		</span>

		<span
			id    = "<% $round->id %>_buttonarea"
			class = "tenth rightalign"
		></span>
	</div>

%	if ($round->setting("motion_publish")) {
		<p class="padmore">Motion:  <% $round->setting("motion") %></p>
%	}

	<& "/funclib/tablesorter.mas", table => $round->id &>

<%perl>

	my $num_judges;

	foreach my $panel (@panels) {
		if ($judges_by_panel{$panel->id}) {
			my $judge_count = scalar @{$judges_by_panel{$panel->id}};
			$num_judges = $judge_count if $judge_count > $num_judges;
		}
	}

	my $some_locked;
	my %sidelock_panel;
	my $maps;

	if ($sidelocks) {
 		foreach my $panel (@panels) {
			$sidelock_panel{$panel->id}++
				if $m->comp("/funclib/round_elim_dueaff.mas",
					panel => $panel
				);
			$maps = "fa-map-o" if $panel->roomurl;
		}
	} else {
 		foreach my $panel (@panels) {
			$maps = "fa-map-o" if $panel->roomurl;
			last if $maps;
		}
	}

	if ($event_settings{"online_mode"}) {
		if (
			($event_settings{"online_mode"} eq "sync" || $use_normal_rooms)
			&& $event_settings{"online_public"}
		) {
			$maps = "fa-video-camera";
		} else {
			undef $maps;
		}
	}

</%perl>

	<table id="<% $round->id %>">

		<thead>

		<tr class="yellowrow smallish padless">
%			if ($event_settings{"show_panel_letters"}) {
				<th title="Section ID" class="centeralign">
					#
				</th>
%			}

%			if ($round->flighted > 1) {
				<th class="centeralign ">
					Flt
				</th>
%			}

			<th class="centeralign ">
				Room
			</th>

%			if ($event_settings{'online_hybrid'}) {
				<th class="smaller centeralign" title="Indicates online/hybrid rounds">
					ONL
				</th>
%			}

%			if ($no_side_constraints || $sidelocks) {

				<th class="centeralign ">
				</th>

				<th class="centeralign ">
				</th>

%			} else {
				<th class="centeralign ">
					<% $event_settings{"aff_label"} || "Aff" %>
				</th>

				<th class="centeralign ">
					<% $event_settings{"neg_label"} || "Neg" %>
				</th>
%			}

%			unless ($ARGS{"no_judges"} || $round->published == 2) {
%				foreach my $tick (1 .. $num_judges) {
					<th class="centeralign smallish">
						Judge <% $num_judges == 1 ? "" : $tick %>
					</th>
%				}
%			}

%			if ($round_robin) {
				<th class="centeralign <% $round_robin ? "" : "smallcell" %>">
					Pod
				</th>
%			} elsif ($published > 0 && $round_type eq "powered") {
				<th class="centeralign">
					Bracket
				</th>
%			}

		</tr>
		</thead>

		<tbody>

<%perl>

 		foreach my $panel (@panels) {

			my $aff;
			my $neg;
			my $bye;

			foreach my $pc (@{$entries_by_panel{$panel->id}}) {

				if ($ballots_by_entry{$pc->id}) {

					$aff = $pc
						if ${$ballots_by_entry{$pc->id}}[0]->side == "1";

					$neg = $pc
						if ${$ballots_by_entry{$pc->id}}[0]->side == "2";
				}
			}

			foreach my $pc (@{$entries_by_panel{$panel->id}}) {
				if ($ballots_by_entry{$pc->id}) {
					unless ($aff) {
						$aff = $pc unless ($neg && $pc->id == $neg->id);
					} else {
						$neg = $pc unless ($aff && $pc->id == $aff->id);
					}
				}
			}

			my $bracket = $entry_wins{$neg}
				if $round_type eq "powered";

			$bracket = $entry_wins{$aff}
				if $round_type eq "powered"
				&& $entry_wins{$aff} > $entry_wins{$neg};

</%perl>
			<tr class="smallish">

%				if ($event_settings{"show_panel_letters"}) {
					<td class="centeralign">
						<% $panel->letter %>
					</td>
%				}

%				if ($round->flighted > 1) {
					<td class="centeralign">
						<% $panel->flight %>
					</td>
%				}

				<td class="nospace">

%					if ($panel->bye) {
						<span class="quarterspacer"></span>
						BYE

%					}  else {

%						if ($maps && $panel->roomurl) {
							<span class="threequarters nospace">
								<a
									class  = "full marno hover white bluetext semibold"
									href   = "<% $panel->roomurl %>"
									target = "_blank"
								>
%						} else {
							<span class="marno full">
%						}

								<span class="quarterspacer"></span>

							<% $panel->roomname ? $panel->roomname : "None" %>
							<% $include_room_notes && $panel->roomnotes
								? '<div class="marno italic padless padleft">'.$panel->roomnotes."</div>"
								: ""
							%>

%						if ($maps && $panel->roomurl) {
								</a>
							</span>
							<span class="fifth rightalign nospace">
								<a class = "buttonwhite bluetext fa fa-tiny <% $maps %>"
									href  = "<% $panel->roomurl %>"
								></a>
%						}
						</span>
%					}
				</td>

%				if ($event_settings{'online_hybrid'}) {
					<td class="centeralign">
						<span class="hiddencsv"><% $panel->hybrid ? "Y" : "" %></span>
						<% $panel->hybrid ? '<span class="fa greentext fa-sm fa-laptop"></span>' : "" %>
					</td>
%				}

				<td class="padvertless padleft">
%					if ($aff) {
%						unless ($anonymous_public) {
							<a
								class = "white smallish padtop padbottom padleft"
								href  = "/index/tourn/postings/entry_record.mhtml?tourn_id=<% $tourn->id %>&entry_id=<% $aff->id %>"
							>
								<% $aff->code %>
							</a>
%						}  else {
							<span class="padvert">
							<% $aff->code %>
							</span>
%						}
%					}

%					if ($sidelocks && $sidelock_panel{$panel->id}) {
						<div class="smaller flexrow padbottomless italic semibold padleft">
							Locked <% $event_settings{"aff_label"} || "Aff" %>
						</div>
%					}
				</td>

				<td class="nospace padleft">
%					if ($neg) {
%						unless ($anonymous_public) {
							<a
								class = "white smallish padtop padbottom padleft"
								href  = "/index/tourn/postings/entry_record.mhtml?tourn_id=<% $tourn->id %>&entry_id=<% $neg->id %>"
						>
								<% $neg->code %>
							</a>
%						}  else {
							<% $neg->code %>
%						}

%						if ($sidelocks && $sidelock_panel{$panel->id}) {
							<div class="smaller flexrow padbottomless italic semibold padleft">
								Locked <% $event_settings{"neg_label"} || "Neg" %>
							</div>
%						}

%					}
				</td>
<%perl>
				unless ($round->published == 2 || $ARGS{"no_judges"}) {

					if ($judges_by_panel{$panel->id}) {

						my $notfirst;
						my %used;

						foreach my $judge (
							sort {$b->last cmp $a->last}
							@{$judges_by_panel{$panel->id}}
						) {

							my $last = $judge->last;
							$last =~ s/ \- ONLINE//g;
							$last =~ s/ \- Online//g;
</%perl>
							<td class="smallish nospace padleft">

%								unless ($ncfl || $anonymous_public) {
									<a
										class = "white smallish padtop padbottom padleft"
										href  = "judge.mhtml?judge_id=<% $judge->id %>&tourn_id=<% $tourn->id %>"
									>
%								}
									<% ($judge->chair) ? "*" : "" %>
									<% $no_codes ? "" : '<span class="sixth">'.$judge->code."</span>" %>

%									unless ($anonymous_public) {
										<% $judge->first %> <% $last %>
%					 				}
%								unless ($anonymous_public) {
									</a>
%				 				}
							</td>
%		 				}
%					}
% 				}

%				if ($round_robin) {
					<td class="centeralign <% $round_robin ? "" : "smallcell" %>">
						<% $aff
							? $pod_name{$aff->setting("pod")}
								: $bye
								? $pod_name{$bye->setting("pod")}
									: ""
						%>
					</td>
%				} elsif ($published > 0 && $round_type eq "powered") {
					<td class="centeralign">
						<% $bracket %>
					</td>
%				}
			</tr>
%		}
		</tbody>
	</table>

	<div class="full flexrow wrap martopmore padtop italic smallish marbottom semibold">

%		if ($maps eq "fa-map-o") {
			<span class="full rightalign bluetext marbottom">
				Rooms with <span class="inline marno fa fa-tiny buttonwhite bluetext <% $maps %>"></span>
				icons are linked to maps
			</span>
%		} elsif ($maps eq "fa-video-camera") {
			<span class="full rightalign bluetext marbottom">
				<span class="inline marno fa fa-tiny buttonwhite bluetext <% $maps %>"></span>
				icons are links to the online meetings
			</span>
%		}

<%perl>
		if ($no_side_constraints
			|| ($sidelocks && scalar keys %sidelock_panel < 1)
		) {

			undef $sidelocks;
			$no_side_constraints++;
</%perl>
			<span class="full rightalign greentext marbottom">
				Flip for sides in all debates
			</span>

%		} elsif ($event_settings{"sidelock_elims"}) {
			<span class="full rightalign greentext marbottom">
				All sides are set
			</span>
%		} elsif ($sidelocks) {
			<span class="full rightalign greentext marbottom">
				Flip for sides unless indicated
			</span>
%		}
	</div>

