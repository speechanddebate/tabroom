<%args>
	$dbh
	$person
	$country    => undef
	$state      => undef
	$year       => undef
	$circuit_id => undef
</%args>
<%init>

	use POSIX;

	$country =~ s/[\W_]//g;
	$country = substr($country, 0, 2);

	$state =~ s/[\W_]//g;
	$state = substr($state, 0, 2);

	my $key = $country."-".$year."-".$state."-".$circuit_id;

	if ((not defined $ARGS{"end_notify"}) && $r->hostname eq "www.tabroom.com") {
		 if ($ARGS{"invalidate"}) {
			$m->cache(expire  => $key);
		 } else {
			 return if $m->cache_self(
				 key        => $key,
				 expires_in => '10m',
			 );
		 }
	 }

	my $tz = $person->tz if $person;
	$tz = "UTC" unless $tz;

	my $now = DateTime->now;
	my $start = $now->clone;

	my $limit;
	my $weekend_limit;
	my $amount;

	$year = int($year);

	if ($year > 0 && $year < 3000) {
		$limit .= " and tourn.start < '$year-07-01 00:00:00'";
		$weekend_limit .= " and weekend.start < '$year-07-01 00:00:00'";
		$year--;

		$limit .= " and tourn.start > '$year-07-01 00:00:00'";
		$weekend_limit .= " and weekend.start > '$year-07-01 00:00:00'";
		$year++;

	} else {

		$start->subtract(days => 2);
		$limit .= " and tourn.end > '".DateTime::Format::MySQL->format_datetime($start)."'";
		$weekend_limit .= " and weekend.end > '".DateTime::Format::MySQL->format_datetime($start)."'";
		$amount = " limit 256";
	}

	my $state_hash = $m->comp("/funclib/state_hash.mas");

	if ($state && defined $state_hash->{$state}) {
		$limit .= " and tourn.state = '$state'";
		$weekend_limit .= " and tourn.state = '$state'";
	}

	my $country_hash = $m->comp("/funclib/country_hash.mas");

	if ($country && defined $country_hash->{$country}) {
		$limit .= " and tourn.country = '$country'";
		$weekend_limit .= " and tourn.country = '$country'";
	}

	my $circuit;
	$circuit_id =~ s/[\D_]//g;
	$circuit_id = int($circuit_id);

	undef $circuit_id if $circuit_id == 0;

	if ($circuit_id) {
		$limit .= "\nand exists ( select tourn_circuit.id from tourn_circuit ";
		$limit .= "where tourn_circuit.tourn = tourn.id ";
		$limit .= "and tourn_circuit.approved = 1 ";
		$limit .= "and tourn_circuit.circuit = '$circuit_id' )\n";

		$weekend_limit .= "\nand exists ( select tourn_circuit.id from tourn_circuit ";
		$weekend_limit .= "where tourn_circuit.tourn = tourn.id ";
		$weekend_limit .= "and tourn_circuit.approved = 1 ";
		$weekend_limit .= "and tourn_circuit.circuit = '$circuit_id')\n";

		my $circuit = Tab::Circuit->retrieve($circuit_id);
	}

	my $sth = $dbh->prepare("
		select tourn.id, tourn.webname, tourn.name, tourn.tz, tourn.hidden,
			tourn.state, tourn.country, tourn.city,
			CONVERT_TZ(tourn.start, '+00:00', tourn.tz) start,
			CONVERT_TZ(tourn.end, '+00:00', tourn.tz) end,
			CONVERT_TZ(tourn.reg_end, '+00:00', tourn.tz) reg_end,
			CONVERT_TZ(tourn.reg_start, '+00:00', tourn.tz) reg_start,
			msnats.value as msnats,
			nats.value as nats,
			ncfl.value as ncfl,
			closed.value as closed,
			count(distinct school.id) as tourncount,
			YEAR(tourn.end) as year,
			WEEK(tourn.start) as week,
			( select GROUP_CONCAT(signup.abbr SEPARATOR ', ')
					from category signup
				where signup.tourn = tourn.id
					and signup.abbr IS NOT NULL
					and signup.abbr != ''
					and exists ( select cs.id
						from category_setting cs
						where cs.category = signup.id
						and cs.tag = 'public_signups'
					)
					and exists (
						select csd.id
						from category_setting csd
						where csd.category = signup.id
						and csd.tag = 'public_signups_deadline'
						and csd.value_date > NOW()
					)
					and not exists (
						select csd.id
						from category_setting csd
						where csd.category = signup.id
						and csd.tag = 'private_signup_link'
					)
			) as signup,

			( SELECT
				count(online.id)
				from event online, event_setting eso
				where online.tourn = tourn.id
				and online.id = eso.event
				and eso.tag = 'online_mode'
			) as online,

			( SELECT
				count(inp.id)
				from event inp
				where inp.tourn = tourn.id
				and not exists (
					select esno.id
					from event_setting esno
					where esno.event = inp.id
					and esno.tag = 'online_mode'
				)
			) as inp,

			( SELECT
				count(hybrid.id)
				from event hybrid, event_setting esh
				where hybrid.tourn = tourn.id
				and hybrid.id = esh.event
				and esh.tag = 'online_hybrid'
			) as hybrid

		from tourn

		left join school on tourn.id = school.tourn

		left join tourn_setting closed
			on closed.tourn = tourn.id
			and closed.tag = 'closed_entry'

		left join tourn_setting msnats
			on msnats.tourn = tourn.id
			and msnats.tag = 'nsda_ms_nats'

		left join tourn_setting nats
			on nats.tourn = tourn.id
			and nats.tag = 'nsda_nats'

		left join tourn_setting ncfl
			on ncfl.tourn = tourn.id
			and ncfl.tag = 'ncfl'

		where tourn.hidden = 0
		$limit
		and not exists (
			select weekend.id
			from weekend
			where weekend.tourn = tourn.id
		)
		group by tourn.id
		order by tourn.start, tourncount
		$amount
	");

	my %tourns;
	my %cache;

	$sth->execute();

	while (
		my (
			$tourn_id, $tourn_webname, $tourn_name, $tourn_tz, $hidden,
			$state, $country, $city,
			$tourn_start, $tourn_end,
			$reg_end, $reg_start,
			$msnats, $nats, $ncfl,
			$closed,
			$tourn_count,
			$year,
			$week,
			$signups,
			$online,
			$inp,
			$hybrid
		) = $sth->fetchrow_array()
	) {

		$tourns{$tourn_id}{"web"}  = $tourn_webname;
		$tourns{$tourn_id}{"name"} = $tourn_name;

		$tourns{$tourn_id}{"count"}   = $tourn_count;
		$tourns{$tourn_id}{"year"}    = $year;
		$tourns{$tourn_id}{"week"}    = $week;
		$tourns{$tourn_id}{"signups"} = $signups;

		if ($city eq uc($city) && $city ne "TBA") {
			$city = ucfirst(lc($city));
		}

		$tourns{$tourn_id}{"city"}    = $city;

		if ($state) {
			$tourns{$tourn_id}{"city"}    =~ s/$state+//g;
			$tourns{$tourn_id}{"city"}    =~ s/\,//g;
		}

		if ($country) {
			$tourns{$tourn_id}{"city"}    =~ s/$country+//g;
			$tourns{$tourn_id}{"city"}    =~ s/\,//g;
		}

		if ($tourn_tz && (not defined $cache{$tourn_tz})) {
			$cache{$tourn_tz} = Tab::tzname($tourn_tz);
		}
		$tourns{$tourn_id}{"tz"} = $cache{$tourn_tz};

		if (lc($city) eq "nsda campus" || lc($city) eq "online") {
			if (lc($city) eq "nsda campus") {
				$tourns{$tourn_id}{"city"} = "On NSDA Campus";
			} else {
				$tourns{$tourn_id}{"city"} = "Online";
			}
			$tourns{$tourn_id}{"state"}  = $cache{$tourn_tz};
		} else {
			$tourns{$tourn_id}{"state"}   = $state;
			$tourns{$tourn_id}{"country"} = $country;
		}

		$tourns{$tourn_id}{"online"} = $online;
		$tourns{$tourn_id}{"inp"}    = $inp;
		$tourns{$tourn_id}{"hybrid"} = $hybrid;

		if ($msnats || $nats) {
			$tourns{$tourn_id}{"nats"}++;
		}

		if ($ncfl) {
			$tourns{$tourn_id}{"ncfl"}++;
		}

		foreach my $key ($tourn_start, $tourn_end, $reg_start, $reg_end) {
			$cache{"date"}{$key} = eval {
				return DateTime::Format::MySQL->parse_datetime($key);
			}
		}

		my $start_date;
		my $end_date;

		if ($cache{"date"}{$tourn_start}) {
			$start_date = $cache{"date"}{$tourn_start}->month."/".$cache{"date"}{$tourn_start}->day;
		}
		if ($cache{"date"}{$tourn_end}) {
			$end_date = $cache{"date"}{$tourn_end}->month."/".$cache{"date"}{$tourn_end}->day;
		}

		unless ($start_date eq $end_date) {
			$tourns{$tourn_id}{"dates"} = $start_date." - ".$end_date;
		} else {
			$tourns{$tourn_id}{"dates"} = $start_date;
		}

		unless ($msnats || $nats || $ncfl) {
			my $duration = $cache{"date"}{$tourn_end} - $cache{"date"}{$tourn_start};
			if (
				$duration->in_units('months') > 0
				|| $duration->in_units('days') > 6
			) {
				$tourns{$tourn_id}{"sort_nuke"} = 1;
			}
		}

		my $reg_start_dt;
		my $reg_start_time;
		my $reg_end_dt;
		my $reg_end_time;

		if ($closed) {

			$tourns{$tourn_id}{"registration"} = '
				<span class="redtext full centeralign semibold">No open registration</span>
			';

		} elsif ($cache{"date"}{$reg_start} && $cache{"date"}{$reg_start}->epoch > $now->epoch) {

			# Not yet open

			$reg_start_dt = $cache{"date"}{$reg_start}->month."/".$cache{"date"}{$reg_start}->day;
			$reg_start_time .= $cache{"date"}{$reg_start}->hour_12.":".$cache{"date"}{$reg_start}->strftime("%M")." ".$cache{"date"}{$reg_start}->strftime('%p');

			$tourns{$tourn_id}{"registration"} = '
				<div class="flexrow nospace wrap">
				<span class="orangetext semibold fifth">Open</span>
				<span class="quarter centeralign">'.$reg_start_dt.'</span>
				<span class="half">'.$reg_start_time.' '.$tourns{$tourn_id}{"tz"}.'</span>
				</div>
			';

		} elsif ($cache{"date"}{$reg_end} && $cache{"date"}{$reg_end}->epoch > $now->epoch) {

			# Open, when's it due?
			$reg_end_dt = $cache{"date"}{$reg_end}->month."/".$cache{"date"}{$reg_end}->day;
			$reg_end_time .= $cache{"date"}{$reg_end}->hour_12.":".$cache{"date"}{$reg_end}->strftime("%M")." ".$cache{"date"}{$reg_end}->strftime('%p');
			$tourns{$tourn_id}{"registration"} = '
				<div class="flexrow nospace wrap">
					<span class="greentext semibold fifth">Due</span>
					<span class="quarter centeralign">'.$reg_end_dt.'</span>
					<span class="half grow nowrap padrightless">'.$reg_end_time.' '.$tourns{$tourn_id}{"tz"}.'</span>
				</div>
			';

		} else {

			# Deadline passed
			$tourns{$tourn_id}{"registration"} = '
				<span class="redtext full centeralign semibold">Closed</span>
			';
		}
	}

	$sth->finish();

	$sth = $dbh->prepare("
		select
			tourn.id, tourn.webname, tourn.name, tourn.tz,
			weekend.name, weekend.city, weekend.state,
			site.name, closed.value,
			CONVERT_TZ(weekend.start, '+00:00', tourn.tz) start,
			CONVERT_TZ(weekend.end, '+00:00', tourn.tz) end,
			CONVERT_TZ(weekend.reg_end, '+00:00', tourn.tz) reg_end,
			CONVERT_TZ(weekend.reg_start, '+00:00', tourn.tz) reg_start,
			count(distinct school.id) as tourncount,
			YEAR(weekend.end) as year,
			WEEK(weekend.end) as week,
			nsda_district_questions.value_text,
			( select GROUP_CONCAT(signup.abbr SEPARATOR ', ')
					from category signup
				where signup.tourn = tourn.id
					and signup.abbr IS NOT NULL
					and signup.abbr != ''
					and exists ( select cs.id
						from category_setting cs
						where cs.category = signup.id
						and cs.tag = 'public_signups'
					)
					and exists (
						select csd.id
						from category_setting csd
						where csd.category = signup.id
						and csd.tag = 'public_signups_deadline'
						and csd.value_date > NOW()
					)
					and not exists (
						select csd.id
						from category_setting csd
						where csd.category = signup.id
						and csd.tag = 'private_signup_link'
					)
			) as signup,

			( SELECT
				count(online.id)
				from event online, event_setting eso
				where online.tourn = tourn.id
				and online.id = eso.event
				and eso.tag = 'online_mode'
			) as online,

			( SELECT
				count(inp.id)
				from event inp
				where inp.tourn = tourn.id
				and not exists (
					select esno.id
					from event_setting esno
					where esno.event = inp.id
					and esno.tag = 'online_mode'
				)
			) as inp,

			( SELECT
				count(hybrid.id)
				from event hybrid, event_setting esh
				where hybrid.tourn = tourn.id
				and hybrid.id = esh.event
				and esh.tag = 'online_hybrid'
			) as hybrid

		from (tourn, weekend)

		left join site on weekend.site = site.id

		left join tourn_setting nsda_district_questions
			on nsda_district_questions.tourn = tourn.id
			and nsda_district_questions.tag = 'nsda_district_questions'

		left join tourn_setting closed
			on closed.tourn = tourn.id
			and closed.tag = 'closed_entry'

		left join tourn_setting msnats
			on msnats.tourn = tourn.id
			and msnats.tag = 'nsda_ms_nats'

		left join tourn_setting nats
			on nats.tourn = tourn.id
			and nats.tag = 'nsda_nats'

		left join school on tourn.id = school.tourn

		where tourn.hidden = 0
		$weekend_limit
		and weekend.tourn = tourn.id

		group by tourn.id
		order by tourn.start, tourncount
		$amount
	");

	$sth->execute();

	while (
		my (
			$tourn_id, $tourn_webname, $tourn_name, $tourn_tz,
			$weekend_name, $city, $state,
			$site_name, $closed,
			$tourn_start, $tourn_end,
			$reg_end, $reg_start,
			$tourn_count, $year, $week,
			$questions,
			$signups,
			$online,
			$inp,
			$hybrid
		) = $sth->fetchrow_array()
	) {

		$tourn_name =~ s/District Tournament//g;

		$tourns{$tourn_id}{"web"}  = $tourn_webname;
		$tourns{$tourn_id}{"name"} = $tourn_name;

		$tourns{$tourn_id}{"weekend_name"} = $weekend_name;
		$tourns{$tourn_id}{"districts"} = 1;

		$tourns{$tourn_id}{"count"}   = $tourn_count;
		$tourns{$tourn_id}{"year"}    = $year;
		$tourns{$tourn_id}{"week"}    = $week;
		$tourns{$tourn_id}{"online"}  = $online;
		$tourns{$tourn_id}{"inp"}     = $inp;
		$tourns{$tourn_id}{"hybrid"}  = $hybrid;
		$tourns{$tourn_id}{"signups"} = $signups;

		delete($tourns{$tourn_id}{"sort_nuke"});

		if ($city) {
			$tourns{$tourn_id}{"city"}  = $city;
		} else {
			$tourns{$tourn_id}{"city"}  = $site_name;
		}

		$tourns{$tourn_id}{"state"} = $state;

		unless ($cache{$tourn_tz}) {
			$cache{$tourn_tz} = Tab::tzname($tourn_tz);
		}

		foreach my $key ($tourn_start, $tourn_end, $reg_start, $reg_end) {
			$cache{"date"}{$key} = eval {
				return DateTime::Format::MySQL->parse_datetime($key);
			}
		}

		my $start_date;
		my $end_date;

		if ($cache{"date"}{$tourn_start}) {
			$start_date = $cache{"date"}{$tourn_start}->month."/".$cache{"date"}{$tourn_start}->day;
		}
		if ($cache{"date"}{$tourn_end}) {
			$end_date = $cache{"date"}{$tourn_end}->month."/".$cache{"date"}{$tourn_end}->day;
		}

		unless ($start_date eq $end_date) {
			$tourns{$tourn_id}{"dates"} = $start_date." - ".$end_date;
		} else {
			$tourns{$tourn_id}{"dates"} = $start_date;
		}

		my $reg_start_dt;
		my $reg_start_time;
		my $reg_end_dt;
		my $reg_end_time;

		my $answers = eval {
			return JSON::decode_json{$questions};
		};

		if ($answers->{"nsda_tabbing_software"} eq "speechwire") {

			$tourns{$tourn_id}{"registration"} = '
				<span class="full centeralign semibold">On Speechwire</span>
			';

		} elsif ($closed) {

			$tourns{$tourn_id}{"registration"} = '
				<span class="redtext full centeralign semibold">No open registration</span>
			';

		} elsif ($cache{"date"}{$reg_start} && $cache{"date"}{$reg_start}->epoch > $now->epoch) {

			# Not yet open

			$reg_start_dt = $cache{"date"}{$reg_start}->month."/".$cache{"date"}{$reg_start}->day;
			$reg_start_time .= $cache{"date"}{$reg_start}->hour_12.":".$cache{"date"}{$reg_start}->strftime("%M")." ".$cache{"date"}{$reg_start}->strftime('%p');

			$tourns{$tourn_id}{"registration"} = '
				<div class="flexrow nospace wrap">
				<span class="orangetext semibold quarter">Open</span>
				<span class="quarter centeralign">'.$reg_start_dt.'</span>
				<span class="half">'.$reg_end_time.' '.$tourns{$tourn_id}{"tz"}.'</span>
				</div>
			';

		} elsif ($cache{"date"}{$reg_end} && $cache{"date"}{$reg_end}->epoch > $now->epoch) {

			# Open, when's it due?
			$reg_end_dt = $cache{"date"}{$reg_end}->month."/".$cache{"date"}{$reg_end}->day;
			$reg_end_time .= $cache{"date"}{$reg_end}->hour_12.":".$cache{"date"}{$reg_end}->strftime("%M")." ".$cache{"date"}{$reg_end}->strftime('%p');
			$tourns{$tourn_id}{"registration"} = '
				<div class="flexrow nospace wrap">
				<span class="greentext semibold quarter">Due</span>
				<span class="quarter centeralign">'.$reg_end_dt.'</span>
				<span class="half">'.$reg_end_time.' '.$tourns{$tourn_id}{"tz"}.'</span>
				</div>
			';

		} else {

			# Deadline passed
			$tourns{$tourn_id}{"registration"} = '
				<span class="redtext full centeralign semibold">Closed</span>
			';
		}
	}

	$sth->finish();

	my $circuit_th = $dbh->prepare('
		select
			circuit.id, circuit.abbr, circuit.name
		from circuit
		where circuit.active = 1
		order by circuit.name
	');

	$circuit_th->execute();

</%init>

	<div class="menu">

		<div class="sidenote">

			<div class="centeralign full">
				<a
					class="bluetext buttonwhite invert bigger seveneighths centeralign"
					href="index.mhtml?circuit_id=83"
				>NSDA Districts Calendar</a>

			</div>

			<h4>Circuit</h4>

			<form action="index.mhtml" method="post">

			<input
				type  = "hidden"
				name  = "state"
				value = "<% $state %>"
			>

			<input
				type  = "hidden"
				name  = "country"
				value = "<% $country %>"
			>

			<input
				type  = "hidden"
				name  = "year"
				value = "<% $year %>"
			>

			<div class="odd centeralign">

				<select
					name     = "circuit_id"
					onchange = 'this.form.submit()'
					class    = "fixedmost"
				>

					<option value=""></option>

<%perl>
					while (
						my ($id, $name, $abbr) = $circuit_th->fetchrow_array()
					) {
</%perl>
						<option value="<% $id %>"
							<% $circuit_id == $id ? 'selected' : "" %>
						> <% $abbr %> <% $name %>
						</option>
%					}

				</select>

			</div>

			</form>

			<h4>School Year Ending</h4>

			<form action="index.mhtml" method="post">

			<input
				type  = "hidden"
				name  = "state"
				value = "<% $state %>"
			>

			<input
				type  = "hidden"
				name  = "country"
				value = "<% $country %>"
			>

			<input
				type  = "hidden"
				name  = "circuit"
				value = "<% $circuit_id %>"
			>

			<div class="odd centeralign">

				<select
					name     = "year"
					onchange = 'this.form.submit()'
					class    = "fixedmost"
				>

					<option value=""></option>

%					my $ayear = $now->year + 1;

%					while ($ayear > 2002) {
						<option value="<% $ayear %>" <% $year == $ayear ? 'selected' : "" %>>
							<% $ayear-- %>
						</option>
%					}

				</select>

			</div>

			</form>

<%perl>

	my $state_sth = $dbh->prepare('
		select distinct state
		from tourn
		where state is not null
		and state != ""
		order by state'
	);

	$state_sth->execute();

	my $cth = $dbh->prepare('
		select distinct country
		from tourn
		where country is not null
		and country != ""
		order by country'
	);

	$cth->execute();

</%perl>

			<h4>States/Provinces</h4>

			<form
				action = "index.mhtml"
				method = "post"
			>

			<input
				type  = "hidden"
				name  = "year"
				value = "<% $year %>"
			>

			<input
				type  = "hidden"
				name  = "country"
				value = "<% $country %>"
			>

			<input
				type  = "hidden"
				name  = "circuit"
				value = "<% $circuit_id %>"
			>

			<div class="odd centeralign">

				<select
					name     = "state"
					class    = "fixedmost"
					onchange = "this.form.submit();"
				>

					<option value=""></option>

%					while( my $astate = $state_sth->fetchrow_array() ) {
%						next unless $astate;
						<option
							value="<% $astate %>"
							<% $astate eq $state ? 'selected="selected"' : "" %>
						> <% $astate %> <% $state_hash->{$astate} %>
						</option>
%					}

				</select>
			</div>

			</form>

			<h4>Countries</h4>

			<form
				action = "index.mhtml"
				method = "post"
			>

				<input
					type  = "hidden"
					name  = "year"
					value = "<% $year %>"
				>

				<input
					type  = "hidden"
					name  = "state"
					value = "<% $state %>"
				>

				<input
					type  = "hidden"
					name  = "circuit"
					value = "<% $circuit_id %>"
				>

				<div class="odd centeralign">

					<select
						name     = "country"
						class    = "fixedmost"
						onchange = "this.form.submit();"
					>

						<option value=""></option>

%						while( my $acountry = $cth->fetchrow_array() ) {
%							next unless $acountry;
							<option
								value="<% $acountry %>"
								<% $acountry eq $country ? 'selected="selected"' : "" %>
							> <% $acountry %> <% $country_hash->{$acountry} %>
							</option>
%						}

					</select>
				</div>
			</form>

%			$sth->finish();
%			$cth->finish();
%			$circuit_th->finish();
%			;

		</div>
	</div>

	<& "/funclib/ad.mas" &>

	<div class="main padvertless">

		<div class="full redborderbottom centeralign padvertless">

			<h6 class='nospace padtopless semibold'>Scheduled Tabroom.com Maintenance</h6>

			<p class="padvertless marno">
				We will be conducting routine scheduled maintenance next
			</p>

			<p class="marno padvertless bigger semibold redtext">Tuesday, August 19, from 10:00
				p.m. - 12:00 a.m. Central Daylight Time.
			</p>

			<p class="nospace">
				There will be no access to Tabroom during much of this period.
				Thank you for your patience!
			</p>

			<p class="padvertless marno">
				You can also visit <a class="bluetext" href="https://status.speechanddebate.org" target="_blank">
				https://status.speechanddebate.org</a> for updates.
			<br />
				This notice will be removed at the conclusion of the
				maintenance.
			</p>
		</div>

		<div class="full flexrow">
			<span class="threeifths grow">
				<h1 class="nospace padvertless padtopmore">
%					if ($year || $country || $state) {
						<% scalar (keys %tourns) %> Tournaments
%					} else {
						Upcoming Tournaments
%					}
				</h1>

			</span>

%			if ($state || $country || $year || $circuit) {
				<span
					class = "fifth rightalign padright"
					id    = "tournlist_buttonarea"
				>
					<h6>
%						if ($state) {
							in <% $state_hash->{$state} %>
%						}
%						if ($country) {
							in <% $country_hash->{$country} %>
%						}
%						if ($year) {
							in the <% ($year - 1)%>-<% $year %> school year
%						}
%						if ($circuit_id > 0 && $circuit) {
							in <% $circuit->name %>
%						}
					</h6>
				</span>
%			}
			<span
				class = "fifth rightalign padright"
				id    = "tournlist_buttonarea"
			>
			</span>
		</div>

		<& "/funclib/tablesorter.mas",
			table     => "tournlist",
		&>

		<table
			id    = "tournlist"
			class = "narrow"
		>

			<thead>
				<tr class="yellowrow">
					<th class="smaller medcell">
						Dates
					</th>

					<th class="smaller">
						Tournament
					</th>

					<th class="smaller smallhide">
						City
					</th>

					<th title="In Person: US State or Country.  Online: Tournament Home Time Zone." class="smaller centeralign smallcell">
						<span class="smallhide">
							LO/TZ
						</span>
						<span class="smallshow">
							Loc
						</span>
					</th>

					<th title="Online, Hybrid, or In Person" class="smaller centeralign smallishcell">
						Mode
					</th>

					<th class="smaller medcell">
						<span class="smallhide">
							Registration
						</span>
						<span class="smallshow">
							Reg
						</span>
					</th>

					<th class="smaller smallishcell" title="Tournament seeks hired or volunteer judging signups">
						<span class="smallhide">
							Judge Signup
						</span>
						<span class="smallshow">
							JS
						</span>
					</th>
				</tr>
			</thead>

			<tbody class="smaller">

<%perl>
				my $counter;

				foreach my $tourn_id (
					sort {
						$tourns{$a}{"sort_nuke"} <=> $tourns{$b}{"sort_nuke"}
						|| $tourns{$b}{"nats"} <=> $tourns{$a}{"nats"}
						|| $tourns{$b}{"ncfl"} <=> $tourns{$a}{"ncfl"}
						|| $tourns{$a}{"year"} <=> $tourns{$b}{"year"}
						|| $tourns{$a}{"week"} <=> $tourns{$b}{"week"}
						|| $tourns{$b}{"count"} <=> $tourns{$a}{"count"}
						|| $tourns{$a}{"name"} cmp $tourns{$b}{"name"}
					} keys %tourns
				) {

					last if $counter++ > 256;
</%perl>
					<tr>
						<td
							class     = "centeralign smallish nowrap"
							data-text = "<% $tourns{$tourn_id}{"year"}."-".$tourns{$tourn_id}{'week'}."-".$tourns{$tourn_id}{"count"} %>"
						>
							<% $tourns{$tourn_id}{"dates"} %>
						</td>

						<td class="nospace">
							<a
								class = "white smallish nearfull padvertless flexrow
									<% $tourns{$tourn_id}{"nats"} ? "semibold bluetext" : "" %>
									<% $tourns{$tourn_id}{"ncfl"} ? "semibold" : "" %>
								"
								href  = "/index/tourn/index.mhtml?tourn_id=<% $tourn_id %>"
							>
%								if ($tourns{$tourn_id}{"name"} eq "NSDA Last Chance Qualifier") {
									<span class="semibold full padleft padrightless">
										<% $tourns{$tourn_id}{"name"} %>
									</span>
%								} elsif ($tourns{$tourn_id}{"districts"}) {
									<div class="padleft full padrightless nospace flexrow">
										<div class="semibold nospace padbottomless twofifths">
											NSDA <% $tourns{$tourn_id}{"name"} %>
										</div>
										<div class="smallish nospace padleftless italic threefifths">
											<% $tourns{$tourn_id}{"weekend_name"} %>
										</div>
									</div>
%								} else {
									<div class="padleft full padrightless">
										<% $tourns{$tourn_id}{"name"} %>
									</div>
%								}
							</a>
						</td>

						<td
							title = "<% $tourns{$tourn_id}{"city"} %>"
							class = "smallish padvertno smallhide"
						>
							<% substr($tourns{$tourn_id}{"city"}, 0, 24) %>
						</td>

						<td
							title = "<% $tourns{$tourn_id}{"state"} %>"
							class = "centeralign padvertless smallish"
						>
%							if ($tourns{$tourn_id}{"state"}) {
								<a class="white"
									href="index.mhtml?state=<% $tourns{$tourn_id}{"state"} %>&country=<% $country %>&circuit_id=<% $circuit_id %>&year=<% $year %>">
%							} elsif ($tourns{$tourn_id}{"country"}) {
								<a class="white"
									href="index.mhtml?country=<% $tourns{$tourn_id}{"country"} %>&circuit_id=<% $circuit_id %>&year=<% $year %>">
%							}
								<% $tourns{$tourn_id}{"state"}
									? $tourns{$tourn_id}{"state"}
									: $tourns{$tourn_id}{"country"}
								%>
							</a>
						</td>

						<td class="nowrap centeralign">
							<span class="hiddencsv">
%							if ($tourns{$tourn_id}{"inp"}) {
								P
%							} elsif ($tourns{$tourn_id}{"online"}) {
								O
%							}
							</span>

%							if ($tourns{$tourn_id}{"online"}) {
								<span
									class="third fa fa-sm fa-laptop greentext hover"
									title="Tournament has online events"
								></span>
%							}

%							if ($tourns{$tourn_id}{"inp"}) {
								<span
									class="third fa fa-sm fa-user bluetext hover"
									title="Tournament has in-person events"
								></span>
%							}
%							if ($tourns{$tourn_id}{"hybrid"}) {
								<span
									class="third fa fa-sm fa-handshake-o orangetext hover"
									title="Tournament has hybrid events"
								></span>
%							}
						</td>

						<td class="nowrap">
							<a
								class="white smaller nospace smallwrap"
								href="/index/tourn/index.mhtml?tourn_id=<% $tourn_id %>"
							>
								<% $tourns{$tourn_id}{"registration"}  %>
							</a>
						</td>

						<td class="centeralign limitthird">
							<a
								class = "white smaller nospace padvertless wrap"
								href  = "/index/tourn/judge_signups.mhtml?tourn_id=<% $tourn_id %>"
							>
								<% $tourns{$tourn_id}{"signups"} %>
							</a>
						</td>
					</tr>
%				}
			</tbody>
		</table>

	</div>

%	if ($ARGS{"end_notify"}) {
		<& "/funclib/push_notifications.mas",  logout => $ARGS{"end_notify"} &>
%	}
