<%args>
	$person
	$person_settings
	$district_id => undef
</%args>
<%init>

	my $district = Tab::District->retrieve($district_id) if $district_id;
	$m->abort unless $district;

	my $permission = Tab::Permission->search(
		district => $district->id,
		person   => $person->id
	)->first;

	$permission++ if $person->site_admin;
	$permission++ if $person_settings->{"nsda_admin"};

	unless ($permission) {
		$m->print('<div class="main"><h4 class="warning">');
		$m->print("You do not have access to that district");
		$m->print('</h4></div>');
		$m->abort();
	}

	my @existing = $m->comp(
		"/funclib/district_tourns.mas",
		district => $district
	);

	my ($keys, $event_ref) = $m->comp("/funclib/nsda/events.mas");

	my @event_keys = @{$keys};
	my %events = %{$event_ref};

	my @types = ("congress", "debate", "speech");

	my $tourn_name = $district->name." District Tournament";
	my $webname = lc($district->name);

	$webname =~ s/\([^)]*\)//;
	$webname =~ s/[\W_]//g;

	my $tz = $ARGS{"tz"};
	$tz = "America/Chicago" unless $tz;

	my @weekend_hashes;
	my $tourn;
	$tourn = shift @existing if @existing;

	my @existing_weekends;
	if ($tourn) {
		@existing_weekends = $tourn->weekends;
	}

	my $earliest_start;
	my $latest_end;

	my $did_it;

	foreach my $tick (1 .. 5) {

		my $start_dt;
		my $end_dt;

		my $start_time = "08:00:00";
		my $end_time   = "20:00:00";

		$start_dt = eval {
			return Tab::dtme($ARGS{"start_date_".$tick}, $start_time, $tz);
		};

		$end_dt = eval {
			return Tab::dtme($ARGS{"end_date_".$tick}, $end_time, $tz);
		};

		if ($ARGS{"name_".$tick} && $start_dt && $end_dt) {

			$did_it++;

			my %weekend = (
				name  => $ARGS{"name_".$tick},
				start => $start_dt,
				end   => $end_dt
			);

			push @weekend_hashes, \%weekend;

			$earliest_start = $start_dt->clone() unless $earliest_start;
			$latest_end = $end_dt->clone() unless $latest_end;

			$earliest_start = $start_dt->clone() if $start_dt < $earliest_start;
			$latest_end = $end_dt->clone() if $end_dt > $latest_end;

		}
	}

	unless (($did_it && @weekend_hashes) || @existing_weekends) {
		my $msg = "You must define at least one set of weekend dates to proceed.";
		$m->redirect("district_tournament_create.mhtml?district_id=".$district_id."&err=$msg");
	}


	my @weekends;
	my %event_weekend;
	my %event_ballots;

	if ($tourn) {

		@weekends = @existing_weekends;

		foreach my $event ($tourn->events) {
			$event_weekend{$event->abbr} = $event->setting('weekend');
			$event_ballots{$event->abbr} = $event->setting('nsda_ballot_order');
		}

		my %weekends_by_name = map {$_->name => $_} @weekends;

		foreach my $weekend (@weekend_hashes) {
			unless ($weekends_by_name{$weekend->{"name"}}) {
				my $start = $weekend->{'start'};
				my $end = $weekend->{'end'};

				my $reg_start = $start->clone();
				$reg_start->subtract(months => 1);

				my $reg_end = $start->clone();
				$reg_end->subtract(days => 7);

				$reg_end->set( hour => 20);

				my $weekend_obj = Tab::Weekend->create({
					name            => $weekend->{"name"},
					tourn           => $tourn->id,
					start           => $start,
					end             => $end,
					reg_start       => $reg_start,
					reg_end         => $reg_end,
					freeze_deadline => $reg_end,
					drop_deadline   => $reg_end,
					judge_deadline  => $reg_end,
					fine_deadline   => $reg_end,
					site            => 0
				});

				push @weekends, $weekend_obj;
			}
		}

	} elsif ($earliest_start && $latest_end) {

		foreach my $abbr ("CX", "LD", "PF") {
			$event_ballots{$abbr} = $ARGS{$abbr."_ballots"};
		}

		my $reg_start = $earliest_start->clone();
		$reg_start->subtract(months => 1);

		my $reg_end = $earliest_start->clone();
		$reg_end->subtract(days => 7);

		my $state = substr($district->location, 0, 2);

		$tourn = Tab::Tourn->create({
			name      => $tourn_name,
			tz        => $tz,
			start     => $earliest_start,
			end       => $latest_end,
			reg_start => $reg_start,
			reg_end   => $reg_end,
			webname   => $webname,
			hidden    => 0,
			country   => "US",
			state     => $state
		});

		foreach my $weekend (@weekend_hashes) {

			my $start = $weekend->{'start'};
			my $end = $weekend->{'end'};

			my $reg_start = $start->clone();
			$reg_start->subtract(months => 1);

			my $reg_end = $start->clone();
			$reg_end->subtract(days => 7);

			$reg_end->set( hour => 20);

			my $weekend_obj = Tab::Weekend->create({
				name            => $weekend->{"name"},
				tourn           => $tourn->id,
				start           => $start,
				end             => $end,
				reg_start       => $reg_start,
				reg_end         => $reg_end,
				freeze_deadline => $reg_end,
				drop_deadline   => $reg_end,
				judge_deadline  => $reg_end,
				fine_deadline   => $reg_end,
				site            => 0
			});

			push @weekends, $weekend_obj;
		}
	}

	# One rule to ring them all, and in the darkness bind them.
	$tourn->setting("nsda_district", $district->id);
	$tourn->setting("account_contacts", 1);

	my %answers = eval {
		return %{$tourn->setting("nsda_district_questions")};
	};

	my @text = ("audit_procedures");

	foreach my $key (@text) {
		my $value = $m->comp("/funclib/save_editor.mas", text => $ARGS{$key});
		$answers{$key} = $value;
	}

	if ($answers{max_step} < 2) {
		$answers{'max_step'} = 2;
	}

	my @settings = ("nsda_tabroom_first");

	foreach my $key (@settings) {
		if ($ARGS{$key}) {
			$answers{$key} = "true";
		} else {
			$answers{$key} = "false";
		}
	}

	$answers{"nsda_tabbing_software"} = $ARGS{"nsda_tabbing_software"};
	$answers{"nsda_tabbing_software"} = "tabroom" unless $ARGS{"nsda_tabbing_software"};
	$answers{"nsda_online_tournament"} = $ARGS{"nsda_online_tournament"};

	$answers{"extemp_notecard"}   = $ARGS{"extemp_notecard"};
	$answers{"bis"}               = $ARGS{"bis"};
	$answers{"bis_name"}          = $ARGS{"bis_name"};
	$answers{"bis_email"}         = $ARGS{"bis_email"};
	$answers{"district_trophies"} = $ARGS{"district_trophies"};
	$answers{"judge_train"}       = $ARGS{"judge_train"};

	my %questions = $m->comp("/funclib/nsda/district_awards.mas");

	foreach my $key (sort keys %questions) {
		$answers{"orders"}{$questions{$key}{"label"}} = $ARGS{$questions{$key}{"label"}};
	}

    my $address;
    foreach my $field ("street", "street2", "name", "city", "state", "zip", "country") {
        $address->{$field} = $ARGS{"address_".$field};
    }

    $tourn->setting("shipping_address", "json", $address);
    $tourn->setting("nsda_district_questions", "json", \%answers);

</%init>

	<script>

		$(function() {
			$('form').on('submit', function(e) {

				var weGood = true;

				$(".options").each(function() {

			        var question = $(this);

			        if (!$(this).find('input').is(':checked')) {

						$(question).addClass('lird');
						weGood = false;

					} else {
						$(question).removeClass('lird');
					}
				});

				if (weGood) {
					return weGood;
				} else {
				 	e.preventDefault();
					alertify.confirm("You have to assign weekends to every event before continuing.");
				}
			});
		});

	</script>

	<div class="menu">
		<& "nsda_step.mas",
			step        => 2,
			district_id => $district_id,
			max_step    => $answers{"max_step"}
		&>

	</div>

	<div class="main">

		<span class="half">
			<h2>Events Schedule</h2>
		</span>

		<span class="half explain rightalign">
			Please indicate which weekend/dates that each event is held.
			<br />
			If you are not offering a qualifier in a given event, select "Not Held".
			<br />
			You can change these choices later if you alter your district dates.
		</span>

			<form
				action = "district_tournament_dates.mhtml"
				method = "post"
			>

			<input
				type  = "hidden"
				name  = "district_id"
				value = "<% $district->id %>"
			>

			<span class="half centeralign">
				<div class="row semibold ltyellow">
					<span class="tenth">
						Event
					</span>
%					foreach my $weekend (@weekends) {
						<span
							title="<% $weekend->name %>"
							class="fifth centeralign  marno"
						>
							<div class="full padno marless smaller"><% $weekend->name %></div>
							<% $weekend->start->month."/".$weekend->start->day %>
						</span>
%					}
					<span class="fifth centeralign smallish marno redtext">
						Not Held
					</span>
				</div>
			</span>
			<span class='spacer'></span><span class='quarterspacer'></span>
			<span class="half centeralign">
				<div class="row semibold ltyellow">
					<span class="tenth">
						Event
					</span>
%					foreach my $weekend (@weekends) {
						<span
							title="<% $weekend->name %>"
							class="fifth centeralign  marno"
						>
							<div class="full padno marless smaller"><% $weekend->name %></div>
							<% $weekend->start->month."/".$weekend->start->day %>
						</span>
%					}
					<span class="fifth centeralign smallish marno redtext">
						Not Held
					</span>
				</div>
			</span>

			<span class="half centeralign top">
<%perl>
				foreach my $event (@event_keys) {

					if ($event eq "DI") {
						$m->print("</span> ");
						$m->print("<span class='spacer'></span> ");
						$m->print("<span class='quarterspacer'></span>");
						$m->print('<span class="half centeralign">');
					}
</%perl>
					<div class="row <% $event %>">
						<span class="tenth">
							<% $event %>
						</span>
%						foreach my $weekend (@weekends) {
							<label for="<% $weekend->id %>_<% $event %>" >
								<span
									class = "fifth hover centeralign marno"
									title = "<% $weekend->name %>"
								>
									<input
										type     = "radio"
										class    = "eventradios"
										name     = "<% $event %>"
										value    = "<% $weekend->id %>"
										id       = "<% $weekend->id %>_<% $event %>"
										tabindex = "-1"
										<% $event_weekend{$event} == $weekend->id ?
											'checked'
											: ""
										%>
									>
								</span>
							</label>
%						}

						<label for="nope_<% $event %>">
							<span
								class = "fifth redhover centeralign marno"
								title = "No Qualifier Held in <% $event %>"
							>
								<input
									type     = "radio"
									class    = "eventradios"
									name     = "<% $event %>"
									value    = "nope"
									id       = "nope_<% $event %>"
									<% $event_weekend{$event} eq "nope" || (not defined $event_weekend{$event} )
										? 'checked'
										: ""
									%>
								>
							</span>
						</label>
					</div>
%				}
			</span>

			<div class="liblrow rightalign pagefull">
				<span class="centeralign third">
					<input
						type  = "submit"
						value = "Go to Next Step"
					>
				</span>
				</form>
			</div>
		</div>

