<%args>
	$person
	$tourn
	$setting_name   => undef
	$property_name  => undef
	$property_value => 0
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	my $allowed_settings = ({
		fontsize => 1,
	});

	my $banned_properties = ({
		site_admin     => 1,
		nsda           => 1,
		password       => 1,
		accesses       => 1,
		last_access    => 1,
		pass_timestamp => 1,
		timestamp      => 1,
		tz             => 1,
	});

	unless ($person->site_admin) {
		if (
			($property_name && $banned_properties->{$property_name})
			|| ($setting_name && (not defined $allowed_settings->{$setting_name}))
		) {
			$m->comp("/funclib/abort.mas",
				message => "You are not authorized to change those properties",
			);
		}
	}

	unless ($person) {
		$m->print('{ "error": true, "message": "No person record"}');
		$m->abort();
	}

	my $target;

	if ($person->site_admin) {
		$target = Tab::Person->retrieve($ARGS{"target_id"});
	}

	unless ($target) {
		$target = $person;
	}

	unless ($property_name || $setting_name) {
		$m->print('{ "error": true, "message": "No property to change sent"}');
		$m->abort();
	}

	my $message = "Account ".$person->id." ".$person->email." changed:";

	if ($setting_name) {
		$target->setting($setting_name, $property_value);
		$message = "Setting $setting_name changed to $property_value";
	} elsif ($property_name) {
		$target->$property_name($property_value);
		$target->update();
		$message = "Property $property_name changed to $property_value";
	}

	if ($target->id != $person->id) {
		$message .= "By ".$person->email;
		Tab::log($message);
	}

    my %response = (
		error   => 0,
		message => $message
    );

    $m->print(JSON::encode_json(\%response));
	$m->abort();

</%init>
