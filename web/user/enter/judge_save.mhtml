<%args>
	$person
	$category_id
	$chapter_judge_id => undef
	$school_id        => undef
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();

	my $category = Tab::Category->retrieve($category_id);

	my %category_settings = $category->all_settings();

	unless ($school_id) {
		my $err = "You do not have an active school entry.  Please choose ";
		$err .= " a chapter and then your tournament at left";
		$m->redirect("/user/home.mhtml?school_id=$school_id&category_id=".$category->id."&err=".$err);
	}

	my $school = Tab::School->retrieve($school_id);

	unless ($chapter_judge_id) {
		my $err = "You did not select a judge from the list.  Please try again";
		$m->redirect("judges.mhtml?school_id=$school_id&category_id=".$category->id."&err=".$err);
	}

	my $chapter_judge = Tab::ChapterJudge->retrieve($chapter_judge_id);

	unless ($chapter_judge > 0) {
		$m->comp('/funclib/abort.mas',
			message => "No judge found on your roster with ID $chapter_judge_id"
		);
	}

	if ($category_settings{"linked_only"}) {

		my $judge_person = $chapter_judge->person;

		unless ($judge_person > 0) {
			$m->redirect("judge_person_link.mhtml?school_id=$school_id&chapter_judge_id=$chapter_judge_id&category_id=$category_id");
		}

		if ($category_settings{"link_phone_required"}) {
			unless ($judge_person->phone > 2000000000) {
				my $err = $chapter_judge->first." ".$chapter_judge->last." does not have a valid phone ";
				$err .= "number in their Tabroom account.  Please have them enter a phone number ";
				$err .= "to continue registration.";
				$m->redirect("judges.mhtml?school_id=$school_id&category_id=".$category->id."&err=".$err);
			}
		}

		if ($category->setting('link_campus_required')) {

			unless ($judge_person->setting("campus_test_private")) {

				my $sth = $dbh->prepare("
					select cl.id
						from campus_log cl
					where cl.person = ?
						order by cl.id desc limit 5
				");

				$sth->execute($judge_person);
				my $results = $sth->fetchall_hash();

				if (scalar @{$results} > 0) {
					$judge_person->setting("campus_test_private", "date", DateTime->now());
				} else {
					my $err = $judge_person->first." ".$judge_person->last." has not entered an NSDA Campus room to ";
					$err .= " verify their tech works,";
					$err .= " which is required by this tournament.  Please ask the judgetto log into Tabroom ";
					$err .= " and enter the Test Campus Room at lower right with another person, to verify they can see ";
					$err .= " and hear each other before registering them for this tournament.";
					$m->redirect("judges.mhtml?school_id=$school_id&category_id=".$category->id."&err=".$err);
				}
			}
		}

	}

	my $tourn = $school->tourn;

	$m->print($tourn->id);

	my $tz = $person->tz;
	$tz = $tourn->tz unless $tz;
	$tz = "UTC" unless $tz;
	my $now = DateTime->now(time_zone => $tz);

	my $person_id = $chapter_judge->person->id if $chapter_judge && $chapter_judge->person;

	my $code;
	$code = $m->comp(
		"/funclib/category_code.mas",
		category => $category
	) unless $category_settings{"no_codes"};

	my $obligation = 0;

	if ($category_settings{"rounds_per"}) {
		$obligation = $category_settings{"max_rounds"};
		$obligation = $category_settings{'rounds_per'} unless $obligation;
	}

	my $acct_id = 0;
	$acct_id = $chapter_judge->person->id if $chapter_judge->person;

	my $judge = Tab::Judge->create({
		school        => $school->id,
		first         => $chapter_judge->first,
		last          => $chapter_judge->last,
		code          => $code,
		person        => $acct_id,
		obligation    => $obligation,
		hired         => 0,
		category      => $category->id,
		active        => 1,
		chapter_judge => $chapter_judge->id
	});

	if ($acct_id > 0) {
		$m->comp("/funclib/contact_onsite.mas", school => $school, person => $acct_id);
	}

	$judge->setting("special", $ARGS{"special"}) if $ARGS{"special"};
	$judge->setting("notes", "text", $chapter_judge->notes);
	$judge->setting("tab_rating", $ARGS{"tab_rating"}) if $ARGS{"tab_rating"};

	$judge->setting("registered_by", $person->id);

	if ($judge->person) {
		$m->comp("/funclib/person_conflict.mas",
			tourn   => $tourn,
			entered => $person,
			person  => $judge->person
		);
	}

	if ($tourn->setting("track_reg_changes")) {

		my $description = $person->first." ".$person->last." entered ".$category->abbr." judge ".$judge->code." (".$judge->first." ".$judge->last.")";

		my $change = $m->comp("/funclib/log.mas",
			tourn       => $tourn->id,
			school      => $school->id,
			type        => "registration",
			description => $description,
			person      => $person
		);
	}


	if ($category_settings{"min_registrant_jpools"}) {
		# Default if there are required registrant jpools is to join them all

		foreach my $jpool ($category->jpools()) {
			next unless $jpool->setting('registrant');
			Tab::JPoolJudge->create({
				jpool => $jpool->id,
				judge => $judge->id
			});
		}
	}

	my $text = $category_settings{"registration_email"};

	if ($text) {

		my $school_name = $school->name;
		$school_name =~ s/[\W_]//g;
		$school_name = lc($school_name);
		my $from_email = $school->name." <".$school_name.'@www.tabroom.com>';

		$m->comp("/funclib/judge_reg_email.mas",
			judge      => $judge,
			person     => $person,
			jperson    => $judge->person,
			tourn      => $tourn,
			category   => $category,
			text       => $text,
			from_email => $from_email
		);
	}


	if ($chapter_judge->notes
		|| $category_settings{"coach_ratings"}
		|| $category_settings{"ask_alts"}
		|| $category_settings{"judge_contacts"}
		|| $category_settings{"first_year_outs"}
		|| $category_settings{"free_strikes_dont_count"}
		|| $category_settings{"rounds_per"}
		|| $category_settings{"departure_times"}
		|| $category_settings{"min_registrant_jpools"}
		|| $category_settings{"judge_quals"}
		|| (	$category_settings{"judge_cells"}
				&& not defined $judge->setting("phone")
			)
	) {

		$m->redirect("judge_details.mhtml?judge_id=".$judge->id."&school_id=".$school->id);

	} else {

		$m->redirect("judges.mhtml?school_id=$school_id&judge_id=".$judge->id."&category_id=".$category->id);

	}

</%init>
