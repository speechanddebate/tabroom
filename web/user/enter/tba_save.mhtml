<%args>
	$tourn
	$person
	$event_id
	$school
	$slots => undef
</%args>
<%init>

	my $event = Tab::Event->retrieve($event_id);

	unless ($event->tourn->id == $school->tourn->id) {
		$m->redirect("students.mhtml?school_id=".$school->id."&event_id=$event_id&err=Something odd happened. Try again.");
	}

	my $tz = $school->tourn->tz;
	$tz = "UTC" unless $tz;

	my $now = DateTime->now(time_zone => $tz);

	my @alreadys = $school->entries( event => $event_id,  );
	my @all_event = $event->entries( event => $event_id,  waitlist => 0);

	my @all = $m->comp("/funclib/tourn_entries.mas", tourn => $event->tourn);

	my $cap = $event->setting("cap");
	my $school_cap = $event->setting("school_cap");
	my $tourn_cap = $event->tourn->setting("overall_cap");

	my $wl = $event->setting("always_tba");
	$wl++ if $event->setting("waitlist_all");
	my $wl_all++ if $event->setting("waitlist_all");

	if ($cap) {
		$cap -= scalar @all_event;
	} else {
		$cap = 100;
	}

	if ($school_cap) {
		$school_cap -= scalar @alreadys;
	} else {
		$school_cap = 100;
	}

	if ($tourn_cap) {
		$tourn_cap -= scalar @all;
	} else {
		$tourn_cap = 100;
	}

	if ($event->tourn->setting("track_reg_changes")) {

		my $description = $person->first." ".$person->last." entered $slots TBA slots in ".$event->abbr;

		my $change = $m->comp("/funclib/log.mas",
			tourn       => $school->tourn->id,
			school      => $school->id,
			type        => "registration",
			description => $description,
			person      => $person
		);

	}

	my $waitlist_rank;

	if ($event->setting("waitlist_rank")) {

		$waitlist_rank = 1;

		foreach my $already (@alreadys) {
			$waitlist_rank++ if $already->waitlist;
		}

	}

	foreach my $slot (1 .. $slots) {

		my $waitlist = 0;

		$waitlist++ if $wl_all;

		$waitlist = 1 if $cap <  1;
		$waitlist = 1 if $school_cap < 1;
		$waitlist = 1 if $tourn_cap < 1;

		my $person_id = $person->id if $person;

		next if $waitlist && $wl < 1 && $wl_all < 1;

		$waitlist = 1 if $waitlist > 1;

		my $entry = Tab::Entry->create({
			name          => "Names TBA",
			code          => "TBA",
			tourn         => $school->tourn->id,
			event         => $event_id,
			school        => $school->id,
			waitlist      => $waitlist,
			registered_by => $person->id,
			dropped       => 0
		});

		$entry->setting("tba", 1);

		if ($waitlist_rank) {
			$entry->setting('waitlist_rank', $waitlist_rank);
			$waitlist_rank++;
		}

		$school_cap--;
		$cap--;

	}

	$m->redirect("students.mhtml?school_id=".$school->id."&event_id=$event_id&msg=$slots slots saved");

</%init>
