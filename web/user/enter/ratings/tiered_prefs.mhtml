<%args>
	$dbh
	$person
	$school
	$category_id => undef
	$entry_id    => undef
	$prefs       => undef
</%args>
<%init>

	use POSIX;

	my $entry = Tab::Entry->retrieve($entry_id) if $entry_id;
	my $category;

	my $event;

	if ($entry) {
		$event = $entry->event;
		$category = $event->category;
	} elsif ($category_id) {
		$category = Tab::Category->retrieve($category_id);
	}

	unless ($category) {
		$m->comp("/funclib/abort.mas", message => "No valid judge category sent!");
	}

	my %category_settings = $category->all_settings;
	my $tourn = $school->tourn;

	foreach my $student ($entry->students) {
		if ($student->person > 0) {
			$m->comp("/funclib/person_conflict.mas",
				person  => $student->person,
				entered => $person,
				tourn   => $tourn,
			);
		}
	}

	my %ratings_by_judge = ();
	my %conflicts_by_id = ();

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $pref_style = $category_settings{"prefs"};
	my $strike_end = $category_settings{"strike_end"};
	$strike_end = $category_settings{"elim_strike_end"}
		if $pref_style eq "ndt";

	$strike_end->set_time_zone($tz) if $strike_end;

	my $now = DateTime->now;
	my $read_only++ if $strike_end < $now;

	my $strike_start = $category_settings{"strike_start"};
	$strike_start->set_time_zone($tz) if $strike_start;

	$strike_start = $category_settings{"elim_strike_start"}
		if $pref_style eq "ndt";

	$read_only++ if $strike_start > $now;

	my $show_diverse if $category_settings{"show_diversity"};
	undef $read_only if $entry && $entry->setting("open_prefs");

	my $has_max;
	my $has_min;

	my %freebie = $m->comp("/funclib/free_strikes.mas", category => $category);
	my $no_frees = $category_settings{"free_strikes_no_pref"};

	my $rounds_per;
	$rounds_per++ if $category_settings{"prefs"} eq "tiered_round";

	my $judges_sth;
	my $jpool;

	if ($category_settings{"pref_jpool"}) {
		$jpool = Tab::JPool->retrieve($category_settings{"pref_jpool"});

		if ($jpool->category->tourn != $tourn->id) {
			$category->setting('pref_jpool', 0);
			undef $jpool;
		}
	}

	if ($jpool) {

		$judges_sth = $dbh->prepare("
			select
				judge.id, judge.first, judge.middle, judge.last, judge.code, judge.hired, judge.obligation,
				school.id school_id, school.name school_name,
				rating_tier.id rating_id, rating_tier.name rating_name,
				paradigm.id paradigm,
				diverse.value diverse,
				neutral.value neutral,
				no_elims.value no_elims,
				judge.person person_id,
				cr_tier.name coach_rating

			from (judge, jpool_judge jpj)
				left join school on judge.school = school.id
			left join person_setting paradigm on paradigm.tag = 'paradigm' and paradigm.person = judge.person
				left join judge_setting diverse on diverse.tag = 'diverse' and diverse.judge = judge.id
				left join judge_setting neutral on neutral.tag = 'neutral' and neutral.judge = judge.id
				left join judge_setting no_elims on no_elims.tag = 'no_elims' and no_elims.judge = judge.id
				left join rating coach on judge.id = coach.judge and coach.type = 'coach'
				left join rating_tier cr_tier on cr_tier.id = coach.rating_tier
				left join rating on judge.id = rating.judge and rating.entry = ?
				left join rating_tier on rating_tier.id = rating.rating_tier

			where 1=1
				and jpj.jpool = ?
				and jpj.judge = judge.id
				and judge.active = 1
			order by school.name, judge.last, judge.first, judge.middle
		");

		$judges_sth->execute($entry->id, $jpool->id);

	} else {

		$judges_sth = $dbh->prepare("
			select
				judge.id, judge.first, judge.middle, judge.last, judge.code, judge.hired, judge.obligation,
				school.id school_id, school.name school_name,
				rating_tier.id rating_id, rating_tier.name rating_name,
				paradigm.id paradigm,
				diverse.value diverse,
				neutral.value neutral,
				no_elims.value no_elims,
				judge.person person_id,
				cr_tier.name coach_rating

			from (judge)
				left join school on judge.school = school.id
			left join person_setting paradigm on paradigm.tag = 'paradigm' and paradigm.person = judge.person
				left join judge_setting diverse on diverse.tag = 'diverse' and diverse.judge = judge.id
				left join judge_setting neutral on neutral.tag = 'neutral' and neutral.judge = judge.id
				left join judge_setting no_elims on no_elims.tag = 'no_elims' and no_elims.judge = judge.id
				left join rating coach on judge.id = coach.judge and coach.type = 'coach'
				left join rating_tier cr_tier on cr_tier.id = coach.rating_tier
				left join rating on judge.id = rating.judge and rating.entry = ?
				left join rating_tier on rating_tier.id = rating.rating_tier

			where 1=1
				and judge.category = ?
				and judge.active = 1
			order by school.name, judge.last, judge.first, judge.middle
		");

		$judges_sth->execute($entry->id, $category->id);

	}

	my $judges = $judges_sth->fetchall_hash();
	my @judges = @{$judges};

	my $tier_sth = $dbh->prepare("
		select
			rating_tier.id, rating_tier.name, rating_tier.max, rating_tier.min,
			rating_tier.start, rating_tier.strike, rating_tier.conflict
		from rating_tier
		where rating_tier.category = ?
		and rating_tier.type = 'mpj'
		order by rating_tier.name
	");

	$tier_sth->execute($category->id);
	my $tier_refs = $tier_sth->fetchall_hash();
	my %tiers = map {$_->{id} => $_} @{$tier_refs};

	my $event_struck;

</%init>

	<script>

		function totalTiers(tierCheck) {

			$(".tiers").each(function() {
				var totalCount = 0;
				$("."+this.id+":checked").not(".free").each(function(pref) {
					totalCount += parseInt($(this).attr("rounds"));
				});
				$("#"+this.id).text(totalCount);
			});

			checkCounts();
		}

		function checkCounts() {

			$(".tiers").each(function() {
				var max = parseInt($("#max_"+this.id).text()) || 0;
				var min = parseInt($("#min_"+this.id).text()) || 0;
				var total = parseInt($("#"+this.id).text()) || 0;

				if (max < total || min > total) {
					$("#"+this.id).addClass("redtext");
				} else {
					$("#"+this.id).removeClass("redtext");
				}

				if (max > 0) {

					var maxDiff = max - total;

					$("."+this.id).attr("disabled", false);
					$("."+this.id).removeClass("graytext");
					$("."+this.id).removeClass("italic");
					$("."+this.id).parent().parent().removeClass("graytext");
					$("."+this.id).parent().parent().removeClass("italic");

					$("."+this.id).not('.free').not(":checked").each( function (index, judge) {
						if ($(judge).attr("rounds") > maxDiff) {
							$(judge).attr('disabled', true);
							$(judge).parent().parent().addClass("graytext");
							$(judge).parent().parent().addClass("italic");
						}
					});
				}

			});
		}

		$(document).ready(function() {
			totalTiers();
		});

	</script>


	<div class="main">

%		unless ($prefs) {
			<& "/user/enter/tabbar.mas",
				school => $school,
				whoami => "ratings"
			&>
%		}

		<& "paradigm_check.mas", school => $school, category => $category &>

%		unless ($entry) {

			<h3>Judge Ratings in <% $category->name %> </h3>
			<p>Choose a competitor to continue</p>

%		} else {

<%perl>
			$event_struck = $m->comp("/funclib/event_strike_judges.mas", event => $entry->event->id, dbh => $dbh);

			foreach my $id (keys %tiers) {
				$has_max++ if $tiers{$id}{max} > 0;
				$has_min++ if $tiers{$id}{min} > 0;
			}

			my @conflicts = $m->comp(
				"/funclib/entry_conflicts.mas",
				entry => $entry
			);

			my @school_conflicts = $m->comp(
				"/funclib/school_conflicts.mas",
				school => $school
			);

			foreach (@conflicts, @school_conflicts) {
				$conflicts_by_id{$_->judge->id}++;
			}

</%perl>
			<&
				"/funclib/tablesorter.mas",
				table     => "tiers",
				hover     => "yes",
				nobuttons => 1
			&>

			<div class="full flexrow">
				<span class="twothirds nospace">
					<h5>Rate <% $category->abbr %> Judges for <% $entry->name %></h5>
				</span>

				<span class="third rightalign padright">
					<a
						class="buttonwhite greentext hover fa fa-lg fa-file-excel-o"
						href="export_prefs.mhtml?entry_id=<% $entry_id %>&school_id=<% $school->id %>"
					>
					</a>
				</span>
			</div>

%			if ($read_only) {

				<div class="full nospace">

					<span class="half centeralign">

						<h6>
							Prefs open
							<% Tab::shortdate($strike_start) %>
							<% Tab::nicetime($strike_start) %> <% Tab::tzname($tz) %>
						</h6>

					</span>

					<span class="half centeralign">

						<h6>
							Pref deadline:
							<% Tab::shortdate($strike_end) %>
							<% Tab::nicetime($strike_end) %> <% Tab::tzname($tz) %>
						</h6>
					</span>

				</div>

%			} elsif (%freebie) {
				<p class="centeralign greentext semibold">
					Judges marked in green are free; they do not count against rating quotas
				</p>
%			}

			<div
				class="padno martop noscroll"
			>

%			unless ($read_only) {

				<form
					action = "tiered_prefs_save.mhtml"
					method = "post"
				>

				<input
					type  = "hidden"
					name  = "entry_id"
					value = "<% $entry->id %>"
				>

				<input
					type  = "hidden"
					name  = "school_id"
					value = "<% $entry->school->id %>"
				>

				<input
					type  = "hidden"
					name  = "category_id"
					value = "<% $category->id %>"
				>
%			}

			<table id="tiers">

				<thead>

				<tr class="yellowrow">

					<th class="smallish">
						Name
					</th>

%					if ($category_settings{"rounds_per"} || $rounds_per) {
						<th class="smaller limitsmall">
							Rds
						</th>
%					}

%					if ($category_settings{"show_diversity"}) {
						<th
							class="smaller"
							title="Diversity enhancing"
						>
							Div
						</th>
%					}

					<th class="smallish">
						School
					</th>

%					if ($category_settings{'coach_ratings'}) {
						<th class="smaller">
							Ex
						</th>
%					}

					<th class="smallish"
						style="width: 440px;"
					>
						Your Rating
					</th>

				</tr>

				</thead>
				<tbody>
<%perl>
					my $total;
					my $ratings;

					foreach my $judge (sort {$a->{rating_name} cmp $b->{rating_name}} @judges) {

						next if ($judge->{school_id} == $entry->school->id)
							&& (not defined $judge->{neutral});

						next if $conflicts_by_id{$judge->{id}};
						next if $event_struck && $event_struck->{$judge->{id}};
						next if $no_frees && $freebie{$judge->{id}};
						next if $pref_style eq "ndt" && $judge->{"no_elims"};

						# I'll have none of that Kinkaid School bullshit here thanks.
						my $last_name = ucfirst($judge->{last});
						my $first_name = ucfirst($judge->{first});
						my $middle_name = ucfirst($judge->{middle});

						my $rounds = $judge->{obligation} + $judge->{hired};
						if (
							($category_settings{"max_rounds"} > 0)
							&& ($category_settings{"max_rounds"} < $rounds)
						) {
							$rounds = $category_settings{"max_rounds"};
						}

						$rounds = 1 unless $rounds_per;
						$total++;
</%perl>

						<tr class="<% $freebie{$judge->{id}} ? 'ligrnrow' : "row" %>">

							<td
								class     = "smallish limit nospace nowrap"
								title     = "<% $first_name." ".$middle_name." ".$last_name %>"
								data-text = "<% $last_name %>"
							>
%								if ($judge->{paradigm}) {
									<a
										class  = "button leftalign white marno bluetext"
										href   = "/index/paradigm.mhtml?judge_person_id=<% $judge->{person_id} %>"
										target = "_blank"
									>
										<% $last_name.", ".$first_name %> <% $middle_name %>
									</a>
%								} else {
									<span class="full padleft marleft redtext">
										<% $last_name.", ".$first_name %> <% $middle_name %>
									</span>
%								}
							</td>

%							if ($category_settings{"rounds_per"} || $rounds_per) {
								<td class="smaller padno centeralign">
									<% $rounds %>
								</td>
%							}

%							if ($category_settings{"show_diversity"}) {
								<td class="smaller padno centeralign">
									<% $judge->{"diverse"} %>
								</td>
%							}

							<td class="smaller limit">
								<% $judge->{school_name} ? $judge->{school_name} : "Hire" %>
								<% $category_settings{neutrals} && $judge->{neutral} ? "(Neutral)" : "" %>
							</td>

%							if ($category_settings{'coach_ratings'}) {
								<td class="smallish padno centeralign">
									<% $judge->{coach_rating} %>
								</td>
%							}

							<td
								class="smallish padno"
								data-text="<% $judge->{rating_name} %>"
							>
								<div class="full nospace flexrow">

%								if ($read_only) {

									<span class="quarter centeralign biggish grow">
										<% $judge->{rating_name} %>
									</span>
<%perl>
								}  else {

									foreach my $tier_id (sort {$tiers{$a}{"name"} cmp $tiers{$b}{"name"}} keys %tiers) {
</%perl>
										<span class="tenth hover padmore marno grow">
											<label for="<% $tier_id."_".$judge->{id} %>">
												<div class="parent flexrow full">
													<span class="twofifths rightalign">
														<input
															type    = "radio"
															name    = "<% $judge->{id} %>"
															class   = "<% $tier_id %> <% $freebie{$judge->{id}} ? "free" : "" %>"
															style   = "margin: 1px;"
															value   = "<% $tier_id %>"
															id      = "<% $tier_id."_".$judge->{id} %>"
															rounds  = "<% $rounds %>"
															onClick = "totalTiers(this);"

%															if ($judge->{rating_id}) {
																<% $tier_id == $judge->{rating_id} ? "checked" : "" %>
%															} else {
																<% $tiers{$tier_id}{start} ? "checked" : "" %>
%															}
														>
													</span>
													<span class="threefifths padleftless">
														<% $tiers{$tier_id}{strike} ? "S" : $tiers{$tier_id}{conflict} ? "C" : $tiers{$tier_id}{name} %>
													</span>
												</div>
											</label>
										</span>
%									}
%								}
								</div>
							</td>
						</tr>
%					}
				</tbody>
			</table>
			</div>

%			unless ($read_only) {
				<span class="full liblrow rightalign padvert">
					<span class="third centeralign">
						<input
							type="submit"
							class="notfirst"
							value="Save Ratings"
						>
					</span>
				</span>
				</form>
%			}
%		}

	</div>

    <div class="menu">

%		if ($category && $entry) {

			<div class="sidenote">
<%perl>

	        my $ratable_judges;

    	    foreach my $judge (@judges) {

    	        next if $judge->{school_id} == $school->id && (not defined $judge->{neutral});
    	        next if $conflicts_by_id{$judge->{id}};
				next if $event_struck->{$judge->{id}};
				next if $freebie{$judge->{id}};

				if ($category_settings{"prefs"} eq "tiered_round") {
					$ratable_judges += $judge->{obligation};
					$ratable_judges += $judge->{hired};
				} else {
					$ratable_judges++;
				}

    	    }
</%perl>
			<div class="full flexrow">
				<span class="quarter bluetext">
					<h6>
						Totals
					</h6>
				</span>
				<span class="threequarters rightalign smallish semibold">
%					if ($category_settings{"prefs"} eq "tiered_round") {
						<% $ratable_judges %> rounds of judging to rate
%					} else {
						<% $ratable_judges %> total judges (besides yours)
%					}
				</span>
			</div>

			<table>

				<tr class="yellowrow">

					<th class="smaller">
						Tier
					</th>

%					if ($has_max) {
						<th class="smaller centeralign padno">
							Max
						</th>
%					}

%					if ($has_min) {
						<th class="smaller centeralign padno">
							Min
						</th>
%					}

					<th class="smaller centeralign padno">
						Done
					</th>

				</tr>

%				foreach my $id (sort {$tiers{$a}{name} cmp $tiers{$b}{name}} keys %tiers) {
%					my $tier = $tiers{$id};

					<tr class="row">

						<th class="smallish">
							<% $tier->{strike} ? "Strike" : $tier->{conflict} ? "Conflict" : $tier->{name} %>
						</td>

%						if ($has_max) {
							<td
								id = "max_<% $id %>"
								class="smaller centeralign padno"
							>
								<%
									($pref_style eq "caps" || $pref_style eq "ndt")
										&& $tier->{max} > 0
											? $tier->{max}
											: $tier->{max} > 0
												? ceil( $tier->{max} * $ratable_judges / 100)
												: ""
								%>
							</td>
%						}

%						if ($has_min) {

							<td
								id = "min_<% $id %>"
								class="smaller centeralign padno"
							>
								<%
									($pref_style eq "caps" || $pref_style eq "ndt")
									&& $tier->{min} > 0
									? $tier->{min}
									: $tier->{min} > 0
										? floor( $tier->{min} * $ratable_judges / 100)
										: ""
								%>
							</td>
%						}

						<td
							id    = "<% $id %>"
							class = "smaller centeralign padno tiers semibold"
						>
						</td>
					</tr>
%				}
			</table>
<%perl>
			my @others = $m->comp(
				"/funclib/school_entry_by_category.mas",
				category => $category,
				school => $school
			);

			if ($prefs < 2 && $entry && scalar @others && not defined $read_only) {
</%perl>
				<p>Clone <% $entry->name %>'s prefs to:</p>

				<form action="clone.mhtml" method="post">

				<input
					type  = "hidden"
					name  = "source_id"
					value = "<% $entry->id %>"
				>

				<input
					type  = "hidden"
					name  = "school_id"
					value = "<% $entry->school->id %>"
				>

				<input
					type  = "hidden"
					name  = "style"
					value = "tiered"
				>

				<div class="even full nospace">

					<span class="threequarter centeralign">

					<select name="target_id" class="notfirst">
						<option value="all">All Entries in <% $event->abbr %></option>
<%perl>
						foreach my $other (sort {$a->name cmp $b->name} @others) {
							next if $entry->id == $other->id;
							next if $entry->dropped;
							next if $entry->waitlist;
</%perl>
							<option value="<% $other->id %>"><% $other->name %></option>
%						}
					</select>

					</span>

					<span class="quarter centeralign">
						<input
							type  = "submit"
							class = "notfirst thin"
							value = "Go"
						>
						</form>
					</span>
				</div>

%			}

			</div>

%		}

%		my $whoami = "entry_ratings";
%		$whoami = "tiered_ratings" if $pref_style eq "ndt";

		<& menu.mas,
			person      => $person,
			school      => $school,
			whoami      => $whoami,
			category_id => $category->id,
			entry_id    => $entry_id,
			nodiv       => 1,
			prefs       => $prefs
		&>

	</div>
