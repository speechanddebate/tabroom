<%args>
	$person
	$person_settings
	$perms
	$tourn_id   => undef
	$entry_id   => undef
	$judge_id   => undef
	$school_id  => undef
	$chapter_id => undef
</%args>
<%init>

	if (
		$r->uri eq "/user/enter/strike_cards.mhtml"
		|| $r->uri eq "/user/enter/strike_cards.mhtml"
		|| $r->uri eq "/user/enter/create.mhtml"
		|| $r->uri eq "/user/enter/school_switch.mhtml"
		|| $r->uri eq "/user/enter/entry_switch.mhtml"
		|| $r->uri eq "/user/enter/nats/entry_switch.mhtml"
		|| $r->uri eq "/user/enter/nats/conflict_rm.mhtml"
		|| $r->uri eq "/user/enter/nats/supp_drop.mhtml"
		|| $r->uri eq "/user/enter/signup_switch.mhtml"
		|| $r->uri eq "/user/enter/signup_all.mhtml"
		|| $r->uri eq "/user/enter/observer_rm.mhtml"
		|| $r->uri eq "/user/enter/observer_add.mhtml"
		|| $r->uri eq "/user/enter/ratings/conflict_switch.mhtml"
		|| $r->uri eq "/user/enter/ratings/strike_switch.mhtml"
		|| $r->uri eq "/user/enter/strike_card_save.mhtml"
		|| $r->uri eq "/user/enter/flip.mhtml"
		|| $r->uri eq "/user/enter/nats/ada_switch.mhtml"
		|| $r->uri eq "/user/enter/flip_save.mhtml"
		|| $r->uri eq "/user/enter/details_save.mhtml"
	) {
		$m->call_next;
		return;
	}

	if ($r->uri eq "/user/enter/nsda_roster_check.mhtml" && (not defined $school_id)) {
		$m->call_next();
		return;
	}

	my $tourn = Tab::Tourn->retrieve($tourn_id) if $tourn_id;
	my $entry = Tab::Entry->retrieve($entry_id) if $entry_id;
	my $judge = Tab::Judge->retrieve($judge_id) if $judge_id;

	my $school;

	if ($school_id == int($school_id)) {

		$school = Tab::School->retrieve($school_id);

	} elsif ($school_id) {

		my $test = eval{
			return shift @{$school_id};
		};

		if ($test && $test == int($test)) {
			$school_id = $test;
			$school = Tab::School->retrieve($school_id);
		}
	}

	my $chapter = Tab::Chapter->retrieve($chapter_id) if $chapter_id;

	$school = $entry->school if $entry && (not defined $school);
	$school = $judge->school if $judge && (not defined $school);
	$tourn = $school->tourn if $school && (not defined $tourn);

	$school = Tab::School->search(
		chapter => $chapter,
		tourn   => $tourn_id
	)->first unless $school;

	unless ($school) {
		$m->redirect("/user/home.mhtml?err=School $school_id does not exist yet.  Please register.  URL ".$r->uri);
	}

	if ($school->chapter > 0) {

		$chapter = $school->chapter;

	} else {

		my $dbh = Tab::DBI->db_Main();

		my $sth = $dbh->prepare("
			select permission.id
				from permission, school
			where school.id = ?
				and school.district = permission.district
				and permission.tag in ('wsdc', 'chair')
				and permission.person = ?
		");

		$sth->execute($school->id, $person->id);

		my $ok = $sth->fetchrow_array();


		if ($ok) {

			$m->call_next(
				entry  => $entry,
				school => $school,
				tourn  => $tourn,
				perms  => $perms
			);

			$m->abort();
		}

		$sth->finish;
	}

	if ($person->site_admin || ($perms->{"chapter"}{$chapter} eq "chapter")) {

		$m->call_next(
			entry  => $entry,
			school => $school,
			tourn  => $tourn,
			perms  => $perms
		);

	} elsif ($perms->{"chapter"}{$chapter} eq "prefs") {

		$m->call_next(
			entry  => $entry,
			school => $school,
			tourn  => $tourn,
			prefs  => 1,
			perms  => $perms
		);

	} elsif ($entry && $school && $chapter->setting("self_prefs")) {

		my $yay;

		unless ( $r->uri =~ /\/ratings\// ) {
			$m->print("You can only access ratings & your pref sheet, not other pages");
			$m->abort();
		}

		foreach my $student ($entry->students) {

			if ($student->person && $student->person->id == $person->id) {
				$m->call_next(
					entry  => $entry,
					tourn  => $tourn,
					school => $school,
					prefs  => 2
				);
				$yay++;
			}
		}

		$m->redirect("/user/home.mhtml?err=You are not authorized to edit that pref sheet") unless $yay;

	} else {

		$m->redirect("/user/home.mhtml?err=You are not authorized to access that school");

	}


</%init>

