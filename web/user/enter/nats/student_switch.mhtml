<%args>
	$person
	$perms
	$student_id      => undef
	$tourn_id       => undef
	$setting_name   => undef
	$property_value => 0
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($student_id) {
		$m->print('{ "error": true, "message": "No student ID sent"}');
		$m->abort();
	}

	unless ($setting_name) {
		$m->print('{ "error": true, "message": "No property to change sent"}');
		$m->abort();
	}

	my $student = Tab::Student->retrieve($student_id);

	unless ($student) {
		$m->print('{ "error": true, "message": "No student found for ID '.$student_id.'"}');
		$m->abort();
	}

	my %response;
	my $tourn = Tab::Tourn->retrieve($tourn_id);

	if ($setting_name) {

		if ($setting_name eq "online_hybrid") {

			my $message;
			my $error = "false";

			my $reply = $m->comp("/funclib/nsda/online_suppswitch.mas",
				student => $student,
				tourn   => $tourn,
				value   => $ARGS{"property_value"}
			);

			%response = %{$reply};

		} else {

			$student->setting($setting_name, $property_value);
			$response{"message"} .= " not " unless $property_value;
			$response{"message"} .= $setting_name;
		}
	}

	my $school = Tab::School->search(
		tourn => $tourn->id,
		chapter => $student->chapter
	)->first;

	if ($school) {
		$m->comp("/funclib/nsda/status_check.mas",
			student => $student,
			school  => $school
		);
	}

	$response{"error"}   = "false" unless $response{"error"};

    $m->print(JSON::encode_json(\%response));

	$m->abort();

</%init>
