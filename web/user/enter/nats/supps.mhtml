<%args>
	$person
	$school
	$tourn
	$tourn_settings
</%args>
<%init>

	my $tz = $tourn->tz;
	my $now = DateTime->now();

	unless (keys %{$tourn_settings}) {
		%{$tourn_settings} = $tourn->all_settings();
	}

	$now->set_time_zone($tz);
	use Data::Dumper;

	Tab::Entry->columns(TEMP => "reregistered_by");
	Tab::Entry->columns(TEMP => "reregistered_at");
	Tab::Entry->columns(TEMP => "rereg_start");
	Tab::Entry->columns(TEMP => "rereg_end");
	Tab::Entry->columns(TEMP => "eventabbr");
	Tab::Entry->columns(TEMP => "eventid");
	Tab::Entry->columns(TEMP => "eventsupp");
	Tab::Entry->columns(TEMP => "studentid");
	Tab::Entry->columns(TEMP => "last");
	Tab::Entry->columns(TEMP => "first");

	Tab::Entry->set_sql( supps => "
		select entry.*,
			event.abbr as eventabbr,
			event.id as eventid,
			reregistered.value as reregistered_by,
			reregistered.timestamp as reregistered_at,
			rereg_start.value_date as rereg_start,
			rereg_end.value_date as rereg_end,
			entry_student.student as studentid,
			supp.value as eventsupp,
			student.first first,
			student.last last
		from (entry, event, entry_student, student)

		left join entry_setting reregistered
			on reregistered.entry = entry.id
			and reregistered.tag = 'reregistered'

		left join event_setting rereg_start
			on rereg_start.event = event.id
			and rereg_start.tag = 'rereg_start'

		left join event_setting rereg_end
			on rereg_end.event = event.id
			and rereg_end.tag = 'rereg_end'

		left join event_setting supp
			on supp.event = event.id
			and supp.tag = 'supp'

		where entry.school = ?
			and entry.unconfirmed = 0
			and entry.event = event.id
			and entry.id = entry_student.entry
			and entry_student.student = student.id
			and (
				exists (
					select supp.id
					from event_setting supp
					where supp.event = event.id
					and supp.tag = 'supp'
				)
			)

			and not exists (
				select no_rereg.id
				from event_setting no_rereg
				where no_rereg.event = event.id
				and no_rereg.tag = 'no_rereg'
			)

		order by rereg_start.value_date, event.abbr, entry.code
	");

	my @entries = Tab::Entry->search_supps($school->id);

	my %deadlines;
	my %entry_ok;

	Tab::Student->columns(TEMP => "eventabbr");

	Tab::Student->set_sql( unclear_supps => "
		select student.*, event.abbr as eventabbr
		from student, entry_student, entry, event, ballot, panel, round
		where student.chapter = ?
			and student.id = entry_student.student
			and entry_student.entry = entry.id
			and entry.unconfirmed = 0
			and entry.event = event.id
			and event.tourn = ?

			and not exists (
				select supp.id
				from event_setting supp
				where supp.event = event.id
				and supp.tag = 'supp'
			)

			and ballot.entry = entry.id
			and ballot.panel = panel.id
			and panel.round  = round.id
			and round.name in (
				select max(last.name)
				from round last
				where last.event = round.event
				and  (
					last.published > 0
					or exists (
						select round_setting.id
						from round_setting
						where round_setting.round = last.id
						and round_setting.tag = 'publish_entry_list'
					)
				)
			)
	");

	my @students = Tab::Student->search_unclear_supps($school->chapter, $tourn->id);
	my %unclear_supps = map {$_->id => $_} @students;

	my $get_url = "/user/enter/nats/supp_api.mhtml?school_id=".$school->id;
	my $supp_url = "/user/enter/nats/supp_team.mhtml?school_id=".$school->id;

	my $supp_team;
	my %sites_by_id;

	if ($tourn_settings->{"supp_team_show_coaches"}) {
		my $supp_teams = $tourn_settings->{supp_teams};
		$supp_team = $supp_teams->{$school->setting("supp_team")};
		%sites_by_id = map {$_->id => $_} $tourn->sites;
	}

</%init>

	<script>

		function checkTeamConfirm() {
			$.ajax({
				type        : 'GET',
				url         : '<% $supp_url %>',
				crossDomain : true,
				xhrFields: {
					withCredentials: true
				},
			}).then(function(confirmed) {
				console.log(`Reply was ${confirmed}`);
				if (confirmed) {
					$('#supp_team').addClass('hidden');
					$('#supp_rereg').removeClass('hidden');
				} else {
					$('#supp_rereg').addClass('hidden');
					$('#supp_team').removeClass('hidden');
				}

				fixVisual();
			});
		}

		function checkSupps() {
			$.ajax({
				type        : 'GET',
				url         : '<% $get_url %>',
				crossDomain : true,
				xhrFields: {
					withCredentials: true
				},
			}).then(function(clearEntries) {

				$(".entryswitch").addClass("hidden");
				$(".entryblock").removeClass("hidden");

				clearEntries.forEach(function(entryId) {
					$("#"+entryId+"_block").addClass("hidden");
					$("#"+entryId+"_switch").removeClass("hidden");
				});

				fixVisual();
			});
		}

		$(document).ready(function() {
			checkSupps();
%			if ($supp_team) {
				checkTeamConfirm();
%			}
		});

	</script>

	<div class="main">

		<& "../tabbar.mas",
			school         => $school,
			tourn          => $tourn,
			tourn_settings => $tourn_settings,
			whoami         => "supps"
		&>

%		if ($supp_team) {

			<div id="supp_team" class="padtop padno blueborder odd martop">

				<div class="full flexrow padvertmuchmore centeralign">
						<h6 class="inline italic padright">Your District's Supplemental Assignment Is:</h6>
						<h2 class="inline padleft">TEAM <% $supp_team->{label} %>
					</span>
				</div>

				<div class="splitpage martop padbottommore odd">
					<span class="pagehalf centeralign">
						<h4>ON WEDNESDAY</h4>

						<p class="bigger">Speech Events</p>
						<h6 class="semibold bluetext">
							<% $sites_by_id{$supp_team->{wed_speech}}->name %>
						</h6>

						<p class="bigger">Extemp Debate</p>
						<h6 class="semibold bluetext">
							<% $sites_by_id{$supp_team->{wed_debate}}->name %>
						</h6>
					</span>

					<span class="pagehalf centeralign">
						<h4>ON THURSDAY</h4>

						<p class="bigger">Speech Events</p>
						<h6 class="semibold orangetext">
							<% $sites_by_id{$supp_team->{thu_speech}}->name %>
						</h6>

						<p class="bigger">Extemp Debate</p>
						<h6 class="semibold orangetext">
							<% $sites_by_id{$supp_team->{thu_debate}}->name %>
						</h6>
					</span>
				</div>

				<p class="italic semibold bigger centeralign padvertmore">
					Entries going to other supplementals locations will not be able to compete!
				</p>

				<p class="italic redtext semibold bigger centeralign padvertmore">
					Confirm below to continue with supplemental re-registration:
				</p>

				<div class="centeralign liblrow padvertmore marno">
					<button
						class     = "redtext buttonwhite invert padvert semibold"
						school_id = "<% $school->id %>"
						onClick   = "postSwitch(this, 'supp_confirm.mhtml', checkTeamConfirm);"
					>I Promise We Will Go To The Above Locations</button>
				</div>
			</div>
%		}

		<div id="supp_rereg" class="full nospace">

		<div class="full flexrow">
			<span class="fourfifths">
				<h4>Supplemental Events</h4>
			</span>
			<span
				id="supps_buttonarea"
				class="fifth rightalign"
			></span>
		</div>


		<div class="biggish semibold greentext flexrow padvert">
			<span class="italic ninetenths rightalign padright">
				When this switch is GREEN, your supplemental entry is registered to compete!
			</span>
			<span class="tenth centeralign padright">
				<span class="inline fa fa-arrow-down greentext fa-lg"></span>
			</span>
		</div>

		<& "/funclib/tablesorter.mas", table => "supps" &>

		<table id="supps">

			<thead>
				<tr class="yellowrow smallish">
					<th>
						Name
					</th>

					<th>
						Code
					</th>

					<th>
						Event
					</th>

					<th>
						Deadline
					</th>

					<th>
						Status
					</th>

					<th>
					</th>
				</tr>
			</thead>

			<tbody>
<%perl>
				foreach my $entry (sort {
					$a->last cmp $b->last
					|| $a->first cmp $b->first
				} @entries) {

					unless ($deadlines{$entry->eventabbr}) {
						$deadlines{$entry->eventabbr}{"start"} = eval {
							my $dt = DateTime::Format::MySQL->parse_datetime($entry->rereg_start);
							$dt->set_time_zone("UTC");
							$dt->set_time_zone($tz);
							return $dt;
						};

						$deadlines{$entry->eventabbr}{"end"} = eval {
							my $dt = DateTime::Format::MySQL->parse_datetime($entry->rereg_end);
							$dt->set_time_zone("UTC");
							$dt->set_time_zone($tz);
							return $dt;
						};
					}

					next unless $deadlines{$entry->eventabbr}
						&& $deadlines{$entry->eventabbr}{"start"};

					my $registered_at = eval {
						my $dt = DateTime::Format::MySQL->parse_datetime($entry->reregistered_at);
						$dt->set_time_zone("UTC");
						$dt->set_time_zone($tz);
						return $dt;
					};

					my $registered_by = eval {
						return Tab::Person->retrieve($entry->reregistered_by);
					};
</%perl>
					<tr
						id      = "<% $entry->studentid %>_<% $entry->eventid %>"
						event   = "<% $entry->eventid %>"
						student = "<% $entry->studentid %>"
						class   = "smallish"
					>
						<td>
							<% $entry->name %>
						</td>

						<td class="centeralign">
							<% $entry->code %>
						</td>

						<td class="centeralign">
							<% $entry->eventabbr %>
						</td>

						<td class="centeralign">
%							if ($registered_at) {
%							} elsif ($deadlines{$entry->eventabbr}{"start"} > $now) {
								<span
									class="nospace full italic graytext"
								>
									<span class="sixth">Opens</span>
									<span class="twothirds">
										<& "/funclib/showdt.mas",
											dt      => $deadlines{$entry->eventabbr}{"start"},
											tz      => $tz,
											show_tz => 1,
											at      => 1,
											format  => "murica_weekday"
										&>
									</span>
								</span>
%							} elsif ($entry->dropped) {
								<span class="nospace full semibold redtext">
									<div class='full nosspace'
										id = "<% $entry->id %>_deadline"
									>
										<span class="sixth">Due</span>
										<span class="twothirds">
											<& "/funclib/showdt.mas",
												dt      => $deadlines{$entry->eventabbr}{"end"},
												tz      => $tz,
												show_tz => 1,
												at      => 1,
												format  => "murica_weekday"
											&>
										</span>
									</div>
								</span>
%							}
						</td>

						<td id="<% $entry->id %>" class='centeralign'>
%							if ($registered_at) {
								<span class="italic greentext explain">
								Confirmed on <& "/funclib/showdate.mas", dt => $registered_at &>
								at <& "/funclib/showtime.mas", dt => $registered_at &>
								<% $registered_by ? "<br />by ".$registered_by->email : "" %>
								</span>
%							} elsif ($entry->dropped > 0) {
								<span class="biggish semibold redtext">
									Not Registered
								</span>
%							} elsif ($entry->active > 0) {
								<span class="biggish semibold greentext">
									Admin Re-Registered
								</span>
%							} else {
								<span class="italic explain greentext">
									Auto-Confirmed Supp Only Entry
								</span>
%							}
						</td>

						<td class="centeralign padno">
							<span class="hidden">
								<% $entry->dropped ? "1" : "2" %>
							</span>
<%perl>
							if ($deadlines{$entry->eventabbr}{"start"} < $now
								&& $deadlines{$entry->eventabbr}{"end"} > $now
							) {

								if ($unclear_supps{$entry->studentid}) {

									my $title = "Students may not enter Supps before they are eliminated in Main events";
   									$m->print("<div class='padvert italic orangetext semibold yellowhover' title='".$title."'>");
   									$m->print("Active in ".$unclear_supps{$entry->studentid}->eventabbr);
   									$m->print("</div>");

								} else {
</%perl>
									<span class="entryswitch hidden" id="<% $entry->id %>_switch">
										<label class="switch marless">
											<input
												type         = "checkbox"
												value        = "1"
												id           = "<% $entry->id %>"
												setting_name = "reregistered"
												entry_id     = "<% $entry->id %>"
												onChange     = "postSwitch(this, 'entry_switch.mhtml', checkSupps);"
												<% $entry->dropped > 0 ? "" : 'checked="checked"' %>
											>
											<div class="slider"></div>
										</label>
									</span>

									<span
										class = "centeralign entryblock orangetext"
										id    = "<% $entry->id %>_block"
										title = "Entering this event is not permitted due to cross entry limits"
									>
										Cross Entry <br />
										Limit Reached
									</span>
<%perl>
								}

							} elsif ($deadlines{$entry->eventabbr}{"start"} > $now) {
								$m->print("<span class='padvertmore marvert semibold italic'>");
								$m->print("Not yet open");
								$m->print("</span>");
							} elsif ($entry->dropped) {
								$m->print("<span class='padvert semibold redtext'>");
								$m->print("Entry is Dropped");
								$m->print("<br />(Reg Deadline Passed)");
								$m->print("</span>");
							} else {
								$m->print("<span class='padvert semibold greentext'>");
								$m->print("Entry is Active");
								$m->print("<br />(Reg Deadline Passed)");
								$m->print("</span>");
							}
</%perl>
						</td>
					</tr>
%				}
			</tbody>
		</table>

		</div>
	</div>

	<div class="menu">

%		if ($supp_team) {
			<div class="sidenote">
				<h4>SUPP TEAM: <% $supp_team->{label} %></h4>
				<p class="bluetext semibold martopmore">ON WEDNESDAY</p>

				<div class="full flexrow odd marno">
					<span class="third padleft">Speech</span>
					<span class="twothirds semibold bluetext"><% $sites_by_id{$supp_team->{wed_speech}}->name %></span>
				</div>
				<div class="full flexrow odd marno">
					<span class="third padleft">ExtDebate</span>
					<span class="twothirds semibold bluetext"><% $sites_by_id{$supp_team->{wed_debate}}->name %></span>
				</div>

				<p class="bluetext semibold martopmore">ON THURSDAY</p>

				<div class="full flexrow odd marno">
					<span class="third padleft">Speech</span>
					<span class="twothirds semibold orangetext"><% $sites_by_id{$supp_team->{thu_speech}}->name %></span>
				</div>
				<div class="full flexrow odd marno">
					<span class="third padleft">ExtDebate</span>
					<span class="twothirds semibold orangetext"><% $sites_by_id{$supp_team->{thu_debate}}->name %></span>
				</div>
			</div>
%		}

		<div class="sidenote">
			<h4>Supplementals</h4>

			<p class="redtext semibold padvert ltbordertop ltborderbottom padleft">
				Entries are eligible to re-register only after a round of
				main events they did NOT clear into is published.
			</p>

%			if ($tourn_settings->{"supps_and_conns"}) {
				<p class="ltbordertop ltborderbottom">
					<% $tourn_settings->{"supps_and_conns"} %>
				</p>
%			}
		</div>
	</div>

