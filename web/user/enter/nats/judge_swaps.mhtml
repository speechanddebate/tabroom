<%args>
	$now
	$dbh
	$tourn
	$school
	$category_id => undef
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $category = Tab::Category->retrieve($category_id);
	my %tourn_settings = $tourn->all_settings();

	unless ($category->setting("nats_category")) {
		$m->comp("/funclib/abort.mas",
			warn => "You may only swap judge assignments in the MAIN category"
		);
	}

    my $rounds_sth = $dbh->prepare("
        select
            jpool.id, jpool.name,
			days.value,
			site.name,
            min(CONVERT_TZ(timeslot.start, '+00:00', tourn.tz)),
            max(CONVERT_TZ(timeslot.end, '+00:00', tourn.tz)),
			no_swaps.value

        from (jpool, jpool_round jpr, round, timeslot, tourn)

			left join jpool_setting no_swaps
				on no_swaps.jpool = jpool.id
				and no_swaps.tag = 'no_swaps'

			left join jpool_setting days
				on days.jpool = jpool.id
				and days.tag = 'rounds'

			left join site on site.id = jpool.site

        where jpool.category = ?
            and jpool.id = jpr.jpool
            and jpr.round = round.id
            and round.timeslot = timeslot.id
            and timeslot.tourn = tourn.id
        group by jpool.id
    ");

    $rounds_sth->execute($category->id);

    my %jpools;

    while (
        my (
            $jpool_id, $jpool_name, $days, $site, $start, $end, $no_swaps
        ) = $rounds_sth->fetchrow_array()
    ) {

		$jpools{$jpool_id}{"name"} = $jpool_name;
		$jpools{$jpool_id}{"site"} = $site;

		if ($no_swaps) {
			$jpools{$jpool_id}{"no_swaps"} = $no_swaps;
		}
        $jpools{$jpool_id}{"raw_start"} = $start;
        $jpools{$jpool_id}{"raw_end"} = $end;

        $jpools{$jpool_id}{"start"} = eval {
			my $dt = DateTime::Format::MySQL->parse_datetime($start);
			return $dt;
        };

        $jpools{$jpool_id}{"end"} = eval {
            my $dt = DateTime::Format::MySQL->parse_datetime($end);
			return $dt;
        };

		$jpools{$jpool_id}{"day"} = $jpools{$jpool_id}{"start"}->day."-".$jpools{$jpool_id}{"start"}->strftime('%p');
		$jpools{$jpool_id}{"daycount"} = $days;

		$jpools{$jpool_id}{"day_name"} = $jpools{$jpool_id}{"start"}->day_abbr;
        $jpools{$jpool_id}{"epoch_start"} = $jpools{$jpool_id}{"start"}->epoch;
        $jpools{$jpool_id}{"epoch_end"} = $jpools{$jpool_id}{"end"}->epoch;
    }

	my $sth = $dbh->prepare("
		select
			judge.id, judge.first, judge.last,
			judge.obligation,
			jpj.id, jpool.id,
			registrant.value

		from judge
			left join jpool_judge jpj on jpj.judge = judge.id
			left join jpool on jpj.jpool = jpool.id

			left join jpool_setting registrant
				on registrant.jpool = jpool.id
				and registrant.tag = 'registrant'

		where judge.school = ?
		and judge.category = ?
		and judge.active = 1
	");

	$sth->execute($school->id, $category_id);

	my $open = $category->setting("open_switcheroo");
	my $close = $category->setting("close_switcheroo");

	my %judges;

	while (
		my (
			$judge_id, $first, $last, $obl, $jpj, $jpool_id, $reg
		) = $sth->fetchrow_array()
	) {

		$judges{$judge_id}{"name"} = $first." ".$last;
		$judges{$judge_id}{"obl"} = $obl;

		next if $reg;
		if ($jpj) {
			$judges{$judge_id}{"count"}++;
			my $day = $jpools{$jpool_id}{"day"};

			$judges{$judge_id}{"day"}{$day} = $jpool_id;
		}
	}

    my $strike_sth = $dbh->prepare("
        select
			judge.id,
            min(CONVERT_TZ(strike.start, '+00:00', tourn.tz)),
            max(CONVERT_TZ(strike.end, '+00:00', tourn.tz))

        from judge, strike, category, tourn

        where judge.category = ?
			and judge.school = ?
			and judge.id = strike.judge
			and judge.category = category.id
			and category.tourn = tourn.id
		group by strike.id
    ");

    $strike_sth->execute($category->id, $school->id);

	while (
		my (
			$judge_id, $strike_start, $strike_end
		) = $strike_sth->fetchrow_array()
	) {

		my $dts = eval {
			my $dt = DateTime::Format::MySQL->parse_datetime($strike_start);
			$dt->set_time_zone($tz);
			return $dt;
        };

		if ($dts) {
			$judges{$judge_id}{"day_strike"}{$dts->day} = 1;
		}
	}

</%init>

	<div class="menu">

		<div class="sidenote">
			<h5>Return</h5>
			<a class="blue full"
				href="judges.mhtml?category_id=<% $category->id %>&school_id=<% $school->id %>"
			>Return to <% $category->abbr %> Judges</a>
		</div>

		<div class="sidenote">
			<h4>Please Note</h4>

			<p>
				<span class="orangetext semibold inline">
					Big Questions and Worlds judges
				</span>
				may not be swapped on this page.  They are obligated to judge
				the whole tournament and not specific days, and should report
				to their respective sites for each day of the tournament.
			</p>

			<p>
				<span class="orangetext semibold inline">
					Your judges' day obligations
				</span>
				are locked in at this point. If you put in more days than your
				school needed, at this point we cannot honor requests to lower
				your committments.
			</p>

			<p>
				<span class="orangetext semibold inline">All swaps must be legal:</span>
				the two judges must be free on the
				days they're being swapped with. No judge can end up with more
				than 3 days of judging total.
			</p>

			<p>
				<span class="orangetext semibold inline">
					Some assignments,
				</span>
					such as finals/late elims or serving as a parliamentarian, cannot be swapped.
			</p>
		</span>

		</div>

	</div>

	<div class="main">

		<& "../tabbar.mas",
			school         => $school,
			tourn          => $tourn,
			tourn_settings => \%tourn_settings,
			whoami         => "judges"
		&>

		<h5 class="padtop">Swap Judging Assignments</h5>

		<div class="full padvertless centeralign">
			<span class="centeralign semibold threequarters marbottom">
				Swaps begin on
				<& "/funclib/showdt.mas",
					dt     => $open,
					tz     => $tz,
					tzname => "yasqueen"
				&>
				and must be completed by
				<span class="inline redtext">
				<& "/funclib/showdt.mas",
					dt     => $close,
					tz     => $tz,
					tzname => "yasqueen",
					format => "murica",
					at => 1
				&>
				</span>
			</span>
		</div>

%		if ($open > $now) {
			<h5 class="centeralign">
				Swaps are not yet open.
			</h5>
%		} elsif ($now > $close) {
			<h5 class="centeralign">
				Swaps are no longer open.
			</h5>
%		} else {

		<form
			action = "judge_swaps_save.mhtml"
			method = "post"
		>

		<input
			type  = "hidden"
			name  = "school_id"
			value = "<% $school->id %>"
		>

		<input
			type  = "hidden"
			name  = "category_id"
			value = "<% $category->id %>"
		>
<%perl>

		foreach my $judge_id (sort keys %judges) {

			my @days = sort {$a <=> $b} keys %{$judges{$judge_id}{"day"}};
</%perl>
			<div class="row flexrow">

				<span class="fifth semibold">
					<% $judges{$judge_id}{"name"} %> <br />

					<div class="full explain bluetext padtop padleft">
						<% $judges{$judge_id}{"obl"} %> days obligation
					</div>
				</span>

				<span class="fourfifths flexrow">

%				unless (@days) {
					<span class="padsetting ltborderleft marvert semibold italic padleft">
						No rounds currently assigned.
					</span>
%				}
<%perl>
				foreach my $day (@days) {

					my $jpool_id = $judges{$judge_id}{"day"}{$day};
					my $no_swaps = $jpools{$jpool_id}{"no_swaps"};
					next unless $day;
					next unless $jpool_id;
</%perl>
					<span class="third nospace ltborderleft padleft top">

%						if ($day) {

							<div class="semibold bluetext padtop smallish padbottomless">
								<% $jpools{$jpool_id}{"name"} %>
							</div>

%							if ($jpools{$jpool_id}{"daycount"} > 1) {
								<div class="semibold explain padvertless greentext padleft">
									Counts for <% $jpools{$jpool_id}{"daycount"} %> days
								</div>
%							}
%							if ($jpools{$jpool_id}{"site"}) {
								<div class="semibold explain padvertless graytext padleft">
									at <% $jpools{$jpool_id}{"site"} %>
								</div>
%							}

%							if ($no_swaps) {
								<div
									class="semibold smallish redtext italic padleft padvert"
								>
									Non-swappable assignment
								</div>
%							} else {

								<div class="padvertless padleft padright">
									<select name="<% $judge_id."_".$jpool_id %>">
										<option value="">_</option>
<%perl>
										JUDGE:
 										foreach my $ojudge_id (sort keys %judges) {

											next if $ojudge_id == $judge_id;
											my $ojpool_id = $judges{$ojudge_id}{"day"}{$day};

											if ($judges{$ojudge_id}{"day_strike"}{$day}) {
												next JUDGE;
											}

											if ($ojpool_id) {
												next JUDGE if $jpools{$ojpool_id}{"no_swaps"};

											} else {
												# I have my quota already and can only swap.
												if ($judges{$ojudge_id}{"count"} > 2
													&& (not defined $ojpool_id)
												) {
													next JUDGE;
												}

												$ojpool_id = "add";
											}
</%perl>
												<option
													value="<% $ojudge_id."_".$ojpool_id %>"
												> <%
													$judges{$ojudge_id}{"name"}
												%>: <%
													$ojpool_id eq "add"
														? "Add"
														: "Swap w/".$jpools{$ojpool_id}{"name"}
												%>
												</option>
%											}
									</select>
								</div>
%							}
%						}
					</span>
%				}

				</span>
			</div>
%		}

		<div class="liblrow rightalign">
			<span class="third centeralign">
				<input type="submit" value="Save Swaps">
				</form>
			</span>
		</div>
%		}
	</div>
