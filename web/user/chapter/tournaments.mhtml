<%args>
	$person
	$person_settings
	$session
	$defaults   => undef
	$all        => undef
	$chapter_id => undef
	$dbh
</%args>
<%init>

	my $access = Tab::Permission->search(
		person  => $person,
		chapter => $chapter_id
	)->first;

	unless ($person->site_admin) {
		$m->abort() unless $access;
		$m->abort unless $chapter_id;
		$m->redirect("prefs.mhtml?chapter_id=$chapter_id")
			if $access->tag eq "prefs";
	}

	my $tz = $person->tz;
	$tz = "UTC" unless $tz;

	my $chapter = Tab::Chapter->retrieve($chapter_id);
	$m->abort unless $chapter;

	unless ($chapter && $chapter->level) {
		my $err = "Please fill in your institution's level before continuing";
		$m->redirect("/user/chapter/settings.mhtml?chapter_id=".$chapter->id."&err=$err");
	}

	my $now = DateTime->now(time_zone => "UTC");
	our $nowstring = DateTime::Format::MySQL->format_datetime($now);
	$nowstring =~ s/[\D_]//g;

	my $search_start = $now->clone;
	$search_start->subtract(days => 7);

	my $search_start_string = DateTime::Format::MySQL->format_datetime($search_start);
	my $now_string = DateTime::Format::MySQL->format_datetime($now);

	my $sth = $dbh->prepare("
		select
			tourn.id,
			tourn.name,
				CONVERT_TZ(tourn.start, '+00:00', tourn.tz),
				CONVERT_TZ(tourn.end, '+00:00', tourn.tz),
			tourn.start as utcstart, tourn.end as utcend,
			tourn.tz,
				CONVERT_TZ(tourn.reg_start, '+00:00', tourn.tz),
				CONVERT_TZ(tourn.reg_end, '+00:00', tourn.tz),
			tourn.reg_end utc_reg_end,
			tourn.city, tourn.state, tourn.country,
			school.id, school.name, school.onsite,
			onsite_registration.value,
				CONVERT_TZ(onsite_starts.value_date, '+00:00', tourn.tz),
				CONVERT_TZ(onsite_ends.value_date, '+00:00', tourn.tz),
			onsite_starts.value_date utc_onsite_start,
			onsite_ends.value_date utc_onsite_end

		from (tourn, school)

			left join tourn_setting onsite_registration
				on onsite_registration.tag = 'onsite_registration'
				and onsite_registration.tourn = tourn.id

			left join tourn_setting onsite_starts
				on onsite_starts.tag = 'onsite_starts'
				and onsite_starts.tourn = tourn.id

			left join tourn_setting onsite_ends
				on onsite_ends.tag = 'onsite_ends'
				and onsite_ends.tourn = tourn.id

		where tourn.end > ?
			and tourn.hidden = 0
			and tourn.id = school.tourn
			and school.chapter = ?

		and not exists (
			select district.id
				from tourn_setting district
			where district.tourn = tourn.id
				and district.tag = 'nsda_district'
				and district.value != '999'
		)

		and not exists (
			select rejected.id
				from school_setting rejected
			where rejected.school = school.id
				and rejected.tag = 'rejected'
		)

		and not exists (
			select district.id
				from tourn_setting district
			where district.tourn = tourn.id
				and district.tag = 'nsda_nats'
		)

		and not exists (
			select msnats.id
				from tourn_setting msnats
			where msnats.tourn = tourn.id
				and msnats.tag = 'nsda_ms_nats'
		)

		and not exists (
			select district.id
				from tourn_setting district
			where district.tourn = tourn.id
				and district.tag = 'nsda_online_nats'
		)

		order by tourn.start, tourn.name
	");

	$sth->execute($search_start_string, $chapter->id);

	my %registered;

	while (
		my (
			$tid,
			$tourn_name, $tourn_start, $tourn_end,
			$utc_start, $utc_end,
			$tourn_tz,
			$tourn_reg_start, $tourn_reg_end,
			$utc_reg_end,
			$tourn_city, $tourn_state, $tourn_country,
			$school_id, $school_name, $school_onsite,
			$onsite_reg,
			$onsite_start,
			$onsite_end,
			$utc_onsite_start,
			$utc_onsite_end
		) = $sth->fetchrow_array()
	) {

		$registered{$tid}{"chapter_id"}   = $chapter->id;
		$registered{$tid}{"id"}           = $tid;
		$registered{$tid}{"name"}         = $tourn_name;
		$registered{$tid}{"start"}        = $tourn_start;
		$registered{$tid}{"end"}          = $tourn_end;
		$registered{$tid}{"tz"}           = $tourn_tz;
		$registered{$tid}{"reg_start"}    = $tourn_reg_start;
		$registered{$tid}{"reg_end"}      = $tourn_reg_end;
		$registered{$tid}{"city"}         = $tourn_city;
		$registered{$tid}{"start"}        = $tourn_start;
		$registered{$tid}{"country"}      = $tourn_country;
		$registered{$tid}{"school"}       = $school_id;
		$registered{$tid}{"onsite"}       = $school_onsite if $school_onsite > 0;
		$registered{$tid}{"onsite_reg"}   = $onsite_reg;
		$registered{$tid}{"onsite_start"} = $onsite_start;
		$registered{$tid}{"onsite_end"}   = $onsite_end;

		$tourn_start =~ s/[\D_]//g;
		$utc_start =~ s/[\D_]//g;
		$registered{$tid}{"startsort"} = $utc_start;

		$tourn_end =~ s/[\D_]//g;
		$utc_end =~ s/[\D_]//g;
		$registered{$tid}{"endsort"} = $utc_end;

		$tourn_reg_end =~ s/[\D_]//g;
		$utc_reg_end =~ s/[\D_]//g;
		$registered{$tid}{"reg_endsort"} = $utc_reg_end;

		$onsite_end =~ s/[\D_]//g;
		$utc_onsite_end =~ s/[\D_]//g;
		$registered{$tid}{"onsite_endsort"} = $utc_onsite_end;

		$onsite_start =~ s/[\D_]//g;
		$utc_onsite_start =~ s/[\D_]//g;
		$registered{$tid}{"onsite_startsort"} = $utc_onsite_start;
	}

	$sth->finish();

	$sth = $dbh->prepare("
		select tourn.id, round.id, entry.school as strikeschool
            from round, round_setting, panel, ballot, entry, school, tourn
        where 1=1

            and school.chapter      = ?
            and entry.school        = school.id
            and entry.id            = ballot.entry
            and ballot.panel        = panel.id
            and panel.bye 			!= 1
            and panel.round         = round.id
            and round.id            = round_setting.round
            and round_setting.tag   = 'strikes_published'
            and round.published 	!= 1
            and round_setting.value = 1
            and tourn.id            = school.tourn
            and tourn.start 		< now()
            and tourn.end 			> now()
            and tourn.hidden 		!= 1
        order by round.start_time;
	");

	$sth->execute($chapter->id);

	while (
		my (
			$tourn_id, $round_id, $school_id
		) =  $sth->fetchrow_array()
	) {
		$registered{$tourn_id}{"strikes"}++;
	}

	$sth = $dbh->prepare("
		select
			tourn.id, tourn.name, tourn.city, tourn.state, tourn.country,
				CONVERT_TZ(tourn.start, '+00:00', tourn.tz),
				CONVERT_TZ(tourn.end, '+00:00', tourn.tz),
				tourn.webname,
				CONVERT_TZ(tourn.reg_start, '+00:00', tourn.tz),
				CONVERT_TZ(tourn.reg_end, '+00:00', tourn.tz),
			group_concat(distinct circuit.abbr SEPARATOR ', ') as circuits,
			group_concat(distinct circuit.id SEPARATOR ',') as circuit_ids,
			past.id

			from (tourn, tourn_circuit, chapter_circuit, circuit)

			left join school past on
				past.chapter = chapter_circuit.chapter
				and exists (
					select tp.id
					from tourn tp
					where tp.webname = tourn.webname
					and tp.id != tourn.id
					and tp.id = past.tourn
				)

			where chapter_circuit.chapter = ?
				and chapter_circuit.circuit = tourn_circuit.circuit
				and tourn_circuit.tourn = tourn.id
				and tourn_circuit.circuit = circuit.id
				and tourn_circuit.approved = 1
				and tourn.hidden = 0
				and tourn.reg_end > NOW()
				and tourn.reg_start < NOW()

			and not exists (
				select tourn_setting.id
					from tourn_setting
				where tourn_setting.tag IN ('closed_entry', 'nsda_nats', 'nsda_online_nats', 'nsda_ms_nats', 'ncfl')
					and tourn_setting.value = 1
					and tourn_setting.tourn = tourn.id
			)

			and not exists (
				select district.id
				from tourn_setting district
				where district.tag = 'nsda_district'
					and district.tourn = tourn.id
					and district.value != '999'
			)

			group by tourn.id
			order by tourn.start, tourn.name
	");

	my %open_tourns;
	$sth->execute($chapter->id);

	while (
		my (
			$tourn_id, $tourn_name, $tourn_city, $tourn_state, $tourn_country,
			$tourn_start, $tourn_end, $tourn_webname,
			$tourn_reg_start, $tourn_reg_end,
			$circuits, $circuit_ids, $past
		) = $sth->fetchrow_array()
	) {

		if ($circuit_ids eq "6"
			&& $tourn_state ne uc($person->state)
			&& (not defined $past)
		) {

			if (index($tourn_name, "Scrimmage") != -1) {
				next;
			}

			$open_tourns{$tourn_id}{"national"}++;
		}

		$open_tourns{$tourn_id}{"name"}     = $tourn_name;
		$open_tourns{$tourn_id}{"city"}     = ucfirst($tourn_city);
		$open_tourns{$tourn_id}{"state"}    = $tourn_state;
		$open_tourns{$tourn_id}{"webname"}  = $tourn_webname;
		$open_tourns{$tourn_id}{"circuits"} = $circuits;
		$open_tourns{$tourn_id}{"state"}    = $tourn_country unless $open_tourns{$tourn_id}{"state"};

		$open_tourns{$tourn_id}{"start_sort"}   = $tourn_start;
		$open_tourns{$tourn_id}{"start_sort"}   =~ s/[\D_]//g;
		$open_tourns{$tourn_id}{"reg_end_sort"} = $tourn_reg_end;

		$open_tourns{$tourn_id}{"start"}     = substr($tourn_start, 5, 2)."/".substr($tourn_start, 8, 2);
		$open_tourns{$tourn_id}{"end"}       = substr($tourn_end, 5, 2)."/".substr($tourn_end, 8, 2);
		$open_tourns{$tourn_id}{"reg_start"} = substr($tourn_reg_start, 5, 2)."/".substr($tourn_reg_start, 8, 2);
		$open_tourns{$tourn_id}{"reg_end"}   = substr($tourn_reg_end, 5, 2)."/".substr($tourn_reg_end, 8, 2);

		$open_tourns{$tourn_id}{"reg_end"} =~ s/^0//;
		$open_tourns{$tourn_id}{"reg_end"} =~ s/\/0/\//;

		foreach my $tag ("start", "end", "reg_start", "reg_end") {
			$open_tourns{$tourn_id}{$tag} =~ s/^0//g;
			$open_tourns{$tourn_id}{$tag} =~ s/\/0/\//g;
		}
	}

	$sth->finish();

	my %districts;

	if ($chapter->nsda) {

		my $limit;

		if ($chapter->level eq "highschool") {
			$limit = "AND ( (district.tag = 'nsda_district' and district.value = ?)
				OR district.tag IN ('nsda_nats', 'nsda_online_nats') )";
		} elsif ($chapter->level eq "middle") {
			$limit = "and district.tag = 'nsda_ms_nats'";
		}

		my $sth = $dbh->prepare("
			select
				tourn.id, tourn.name, tourn.tz,
				CONVERT_TZ(tourn.start, '+00:00', tourn.tz),
				CONVERT_TZ(tourn.end, '+00:00', tourn.tz),
				tourn.city, tourn.state,
				CONVERT_TZ(tourn.reg_start, '+00:00', tourn.tz),
				CONVERT_TZ(tourn.reg_end, '+00:00', tourn.tz),
				weekend.id, weekend.name,
				CONVERT_TZ(weekend.start, '+00:00', tourn.tz),
				CONVERT_TZ(weekend.end, '+00:00', tourn.tz),
				CONVERT_TZ(weekend.reg_start, '+00:00', tourn.tz),
				CONVERT_TZ(weekend.reg_end, '+00:00', tourn.tz),
				weekend.city, weekend.state,
				school.id,
				district.tag

			from (tourn, tourn_setting district)

				left join school
					on school.tourn = tourn.id
					and school.chapter = ?
					and not exists (
						select rejected.id
							from school_setting rejected
						where rejected.school = school.id
							and rejected.tag = 'rejected'
					)

				left join weekend on weekend.tourn = tourn.id

			where tourn.end > now()
				and tourn.id = district.tourn
				and tourn.hidden = 0
				$limit
			order by tourn.start
		");

		if ($chapter->level eq "highschool") {
			$sth->execute($chapter->id, $chapter->district);
		} elsif ($chapter->level eq "middle") {
			$sth->execute($chapter->id);
		}

		if ($chapter->level eq "middle" || $chapter->level eq "highschool") {

			while (
				my (
					$tid, $name, $tz,
					$start, $end,
					$city, $state,
					$reg_start, $reg_end,
					$wid, $w_name, $w_start, $w_end,
					$w_reg_start, $w_reg_end,
					$w_city, $w_state,
					$school, $tag
				) = $sth->fetchrow_array()
			) {

				if ($tag eq "nsda_district") {

					$districts{"id"}        = $tid;
					$districts{"tz"}        = $tz;
					$districts{"name"}      = $name;
					$districts{"start"}     = $start;
					$districts{"end"}       = $end;
					$districts{"school"}    = $school;
					$districts{"startsort"} = $start;
					$districts{"endsort"}   = $end;
					$districts{"startsort"} =~ s/[\D_]//g;
					$districts{"endsort"}   =~ s/[\D_]//g;

					if ($w_name) {

						my $st = $w_reg_start;
						$st=~ s/[\D_]//g;
						next if ($st > $nowstring);

						$districts{'weekends'}{$wid}{"district_name"} = $name;
						$districts{'weekends'}{$wid}{"district_name"} =~ s/Tournament//g;
						$districts{'weekends'}{$wid}{"name"}          = $w_name;
						$districts{'weekends'}{$wid}{"start"}         = $w_start;
						$districts{'weekends'}{$wid}{"end"}           = $w_end;
						$districts{'weekends'}{$wid}{"reg_end"}       = $w_reg_end;
						$districts{'weekends'}{$wid}{"reg_start"}     = $w_reg_start;
						$districts{'weekends'}{$wid}{"city"}          = $w_city;
						$districts{'weekends'}{$wid}{"state"}         = $w_state;
						$districts{'weekends'}{$wid}{"startsort"}     = $w_start;
						$districts{'weekends'}{$wid}{"endsort"}       = $w_end;
						$districts{'weekends'}{$wid}{"reg_endsort"}   = $w_reg_end;
						$districts{'weekends'}{$wid}{"reg_startsort"} = $w_reg_start;

						$districts{'weekends'}{$wid}{"startsort"}     =~ s/[\D_]//g;
						$districts{'weekends'}{$wid}{"endsort"}       =~ s/[\D_]//g;
						$districts{'weekends'}{$wid}{"reg_endsort"}   =~ s/[\D_]//g;
						$districts{'weekends'}{$wid}{"reg_startsort"} =~ s/[\D_]//g;

						$districts{'weekends'}{$wid}{"school"} = $school;
						$districts{'weekends'}{$wid}{"id"} = $tid;
					}

				} elsif (
					($tag eq "nsda_nats" || $tag eq "nsda_online_nats" || $tag eq "nsda_ms_nats" )
				) {

					if ($tag eq "nsda_nats" && $districts{"id"}) {
						#Districts ain't done yet
						next;
					}
					my $subtag = "nats";
					$subtag = "online" if $tag eq "nsda_online_nats";

					my $st = $reg_start;
					$st=~ s/[\D_]//g;
					next if ($st > $nowstring);

					$districts{$subtag}{"tz"}        = $tz;
					$districts{$subtag}{"id"}        = $tid;
					$districts{$subtag}{"name"}      = $name;
					$districts{$subtag}{"start"}     = $start;
					$districts{$subtag}{"end"}       = $end;
					$districts{$subtag}{"school"}    = $school;
					$districts{$subtag}{"reg_end"}   = $reg_end;
					$districts{$subtag}{"reg_start"} = $reg_start;
					$districts{$subtag}{"city"}      = $city;
					$districts{$subtag}{"state"}     = $state;

					$districts{$subtag}{"startsort"}     = $start;
					$districts{$subtag}{"endsort"}       = $end;
					$districts{$subtag}{"reg_endsort"}   = $reg_end;
					$districts{$subtag}{"reg_startsort"} = $reg_start;
					$districts{$subtag}{"startsort"}     =~ s/[\D_]//g;
					$districts{$subtag}{"endsort"}       =~ s/[\D_]//g;
					$districts{$subtag}{"reg_endsort"}   =~ s/[\D_]//g;
					$districts{$subtag}{"reg_startsort"} =~ s/[\D_]//g;
				}
			}
		}
	}

</%init>

	<& "/user/menu.mas",
		person          => $person,
		person_settings => $person_settings,
		chapter         => $chapter
	&>

	<div class="main">
		<h2><% $chapter->name %>: Tournaments</h2>

		<&
			"tabbar.mas",
			chapter => $chapter,
			person  => $person,
			session => $session,
			whoami  => "tourn"
		&>

		<& /funclib/tablesorter.mas, table => "moi" &>

%		if (keys %registered) {

			<span class="twothirds nospace">
				<h4>Existing tournament registrations</h4>
			</span>

			<span
				class="third nospace rightalign"
				id="moi_buttonarea"
			>
			</span>

			<table id="moi" class="unfixed">

				<thead>
					<tr class="yellowrow">
						<th class="smallish">
							Dates
						</th>

						<th class="smallish">
							Name
						</th>

						<th class="smallish">
							Location
						</th>

						<th class="smallish" title="New registration due date">
							Due
						</th>

						<th class="nosort smallish">
						</th>

					</tr>
				</thead>

				<tbody>
<%perl>
					foreach my $tid (
						sort {
							$registered{$a}{"startsort"} <=> $registered{$b}{"startsort"}
							|| $registered{$a}{"name"} cmp $registered{$b}{"name"}
						} keys %registered
					) {

						&show_tourn($registered{$tid});
					}
</%perl>
				</tbody>
			</table>
%		}

%		if (scalar %districts) {

%			my $tid = $districts{"id"};

			<div class="martopmore">
				<span class="twothirds nospace">
%					if ($chapter->level eq "middle") {
						<h5>NSDA Middle School National Tournament</h5>
%					} else {
						<h5>National Speech &amp; Debate Tournament</h5>
%					}
				</span>

				<span class="third rightalign">
					<a
						class	= "smallish buttonwhite greentext hover invert"
						href	= "/user/enter/nsda_roster_check.mhtml?chapter_id=<% $chapter->id %>&tourn_id=<% $tid %>">
						Eligibility
					</a>
				</span>
			</div>

			<& /funclib/tablesorter.mas, table => "districts", nobuttons => 1 &>

			<table id="districts" class="unfixed">
				<thead>
					<tr class="yellowrow">
						<th class="smallish">
							Dates
						</th>

						<th class="smallish">
							Name
						</th>

						<th class="smallish">
							Location
						</th>

						<th class="smallish" title="New registration due date">
							Due
						</th>

						<th class="nosort smallish">
						</th>
					</tr>
				</thead>

				<tbody>
<%perl>
					$districts{'name'} =~ s/ Tournament//g;

					foreach my $wid (
						sort {
							$districts{"weekends"}{$a}{"startsort"} <=> $districts{"weekends"}{$b}{"startsort"}
							|| $districts{"weekends"}{$a}{"name"} cmp $districts{"weekends"}{$b}{"name"}
						} keys %{$districts{'weekends'}}
					) {

						$districts{'weekends'}{$wid}{"chapter_id"} = $chapter->id;
						&show_tourn($districts{'weekends'}{$wid});

					}

					if ($districts{"nats"}) {
						$districts{"nats"}{"bold"}++;
						$districts{"nats"}{"chapter_id"} = $chapter->id;
						&show_tourn($districts{"nats"});
					}

					if ($districts{"online"}) {
						$districts{"online"}{"bold"}++;
						$districts{"online"}{"chapter_id"} = $chapter->id;
						&show_tourn($districts{"online"});
					}
</%perl>
				</tbody>
			</table>
%		}

<%perl>
		unless (
			$chapter->nsda > 0
			|| ($chapter->level ne "highschool" && $chapter->level ne "middle")
			|| $person_settings->{"no_ads_plz"}
		) {
</%perl>

			<div class="full bluebordertop ltborderbottom marvertmore" id="no_ads_plz">
				<span class="twofifths centeralign logo" title="NSDA Logo">
					<img
						src="/lib/images/nsda-logo-cleaner.png"
						alt="Join the NSDA graphic"
						style="max-width: 100%;"
					/>
				</span>

				<span class="threefifths nospace leftalign adtext padleft">
					<p class="semibold biggish">
						ELEVATE YOUR SPEECH AND DEBATE EXPERIENCE - JOIN THE NSDA
					</p>

					<p>The National Speech &amp; Debate Association has been
					supporting speech and debate programs for nearly 100 years.
					Membership includes:</p>

					<ul>
						<li style="line-height: 16px; padding-bottom: 4px;">
							Access to the
							<a 	href="https://www.speechanddebate.org/nationals"
								class="bluetext semibold link-underline"
							>National Tournament</a>.
						</li>

						<li style="line-height: 16px; padding-bottom: 4px;">
							Grab-and-Go
							<a href="https://www.speechanddebate.org/start-here"
							   class="bluetext semibold link-underline"
							>lesson plan collections</a>
							and practice tools.
						</li>

						<li style="line-height: 16px; padding-bottom: 4px;">
							<a
								href="https://www.speechanddebate.org/honor-society/"
								class="bluetext semibold link-underline"
							>Honor Society</a> recognition.
						</li>
					</ul>

					<p>
						<a href="https://www.speechanddebate.org/school-membership/?mtm_campaign=Maximize%20Tabroom.com%20Revenue&mtm_kwd=Learn%20More&mtm_source=Tabroom.com%20Membership%20Ad&mtm_placement=Tabroom.com"
							class="bluetext link-underline"
						>Learn more</a>
						or
						<a
							href="https://www.speechanddebate.org/signup/?mtm_campaign=Maximize%20Tabroom.com%20Revenue&mtm_source=Tabroom.com%20Membership%20Ad&mtm_placement=Tabroom.com"
							class="bluetext link-underline"
						>join today</a>.
					</p>
				</span>
				<span class="spacer ltborder top padleftless padrightless padvertless marleft">
					<a
						class   = "fa fa-times graytext fa-lg normalweight"
						onClick = "postSwitch(this, 'hide_ad.mhtml');"
					></a>
				</span>
			</div>
%		}

%		if (keys %open_tourns) {

			<div class="full martopmore nospace">
				<span class='twothirds nospace'>
					<h4>
						Your local circuit &amp; past tournaments
					</h4>
				</span>

				<span class="third rightalign nospace" id="open_tourns_buttonarea">
					<a
						onClick = "showIgnores();"
						class   = "buttonwhite bluetext hover fa-sm fa fa-eye"
						id      = "ignoreswitch"
						title   = "Show Hidden"
					>
					</a>

					<a
						onClick = "hideIgnores();"
						class   = "buttonwhite bluetext invert hover hidden fa-sm fa fa-eye-slash"
						id      = "ignorenotswitch"
						title   = "Hide Hidden"
					>
					</a>
				</span>
			</div>

			<& /funclib/tablesorter.mas, table => "open_tourns" &>

			<script>

				function ignoreTourn(clickObject) {
					var targetId  = $("#"+clickObject.id).attr("target_id");
					$("#"+targetId).addClass("hidden");
					$("#"+targetId).addClass("ignored");
					$("#"+targetId+"_ignoreme").addClass("hidden");
					$("#"+targetId+"_ignoremenot").removeClass("hidden");

					$("#open_tourns").trigger("applyWidgets");
					$("#open_tourns").trigger("update");
					$("#open_tourns").trigger('resort');
				}

				function revealTourn(clickObject) {
					var targetId  = $("#"+clickObject.id).attr("target_id");
					$("#"+targetId).removeClass("hidden");
					$("#"+targetId).removeClass("ignored");
					$("#"+targetId+"_ignoreme").removeClass("hidden");
					$("#"+targetId+"_ignoremenot").addClass("hidden");
					$("#open_tourns").trigger("applyWidgets");
					$("#open_tourns").trigger("update");
					$("#open_tourns").trigger('resort');
				}

				function showIgnores() {
					$(".ignored").removeClass("hidden");
					$("#ignoreswitch").addClass("hidden");
					$("#ignorenotswitch").removeClass("hidden");
					$("#open_tourns").trigger("applyWidgets");
				}

				function hideIgnores() {
					$(".ignored").addClass("hidden");
					$("#ignoreswitch").removeClass("hidden");
					$("#ignorenotswitch").addClass("hidden");
					$("#open_tourns").trigger("applyWidgets");
				}

			</script>

			<table id="open_tourns" class="unfixed">

				<thead>
					<tr class="yellowrow">
						<th class="smallish nosort">
							Hide
						</th>

						<th class="smallish">
							Dates
						</th>

						<th class="smallish">
							Name
						</th>

						<th class="smallish">
							City
						</th>

						<th class="smallish smallhide">
							Location
						</th>

						<th class="smallish smallhide">
							Circuits
						</th>

						<th class="smallish" title="New registration due date">
							Due
						</th>

						<th class="nosort">
						</th>
					</tr>

				</thead>
				<tbody>
<%perl>
					my %ignores = $m->comp("/funclib/tourn_ignores.mas", person => $person);

					my $nats_counter = 32;

					foreach my $tourn_id (
						sort {
							$open_tourns{$a}{"national"} <=> $open_tourns{$b}{"national"}
							|| $open_tourns{$a}{"start_sort"} <=> $open_tourns{$b}{"start_sort"}
							|| $open_tourns{$a}{"name"} cmp $open_tourns{$b}{"name"}
						} keys %open_tourns
					) {

						next if $ignores{$tourn_id};
						next if $registered{$tourn_id}++;

						if ($open_tourns{$tourn_id}{"national"}) {
							$nats_counter--;
							last if $nats_counter < 1;
						}
</%perl>
%						if ($open_tourns{$tourn_id}{"national"} && $nats_counter == 31) {
							<tr class="odd norow blueborderbottom nospace" style="background-color: #fcfcfc;">
								<td colspan="8">
									<h4 class="padbottomno marvertno padtopmore">
										National Circuit Tournaments
									</h4>
								</td>
							</tr>
%						}

						<tr
							id    = "<% $tourn_id %>"
							class = "<% $ignores{$tourn_id} ? "ignored hidden" : "" %>"
						>

							<td class="nospace centeralign nospace">
								<a
									value         = "1"
									id            = "<% $tourn_id %>_ignoreme"
									property_name = "ignore"
									target_type   = "tourn"
									target_id     = "<% $tourn_id %>"
									onClick       = "postSwitch(this, 'ignore_switch.mhtml'); ignoreTourn(this);"
									class         = "<% $ignores{$tourn_id} ? "hidden" : "" %>
													 buttonwhite fa-sm fa fa-eye-slash redtext hover"
									title         = "Conceal this tournament"
								>
								</a>

								<a
									value         = "0"
									id            = "<% $tourn_id %>_ignoremenot"
									property_name = "unignore"
									target_type   = "tourn"
									target_id     = "<% $tourn_id %>"
									onClick       = "postSwitch( this, 'ignore_switch.mhtml'); revealTourn(this);"
									class         = "<% $ignores{$tourn_id} ? "" : "hidden" %>
													 buttonwhite fa-sm fa fa-eye greentext hover"
									title         = "Reveal tournament"
								>
								</a>
							</td>

							<td
								class="nowrap centeralign smaller"
								data-text="<% $open_tourns{$tourn_id}{start_sort} %>"
							>
								<%
									$open_tourns{$tourn_id}{start}
								%><% $open_tourns{$tourn_id}{start} ne $open_tourns{$tourn_id}{end}
									? "-".$open_tourns{$tourn_id}{end}
									: ""
								%>
							</td>

							<td class="smallish nospace">
								<a
									class="white padvert marno"
									href="/index/tourn/index?tourn_id=<% $tourn_id %>"
								>
									<% $open_tourns{$tourn_id}{name} %>
									<% $open_tourns{$tourn_id}{hidden} %>
								</a>
							</td>

							<td class="smallish">
								<% $open_tourns{$tourn_id}{city} %>
							</td>

							<td class="centeralign smallish smallhide">
								<% $open_tourns{$tourn_id}{state} %>
							</td>

							<td class="centeralign smallish smallhide">
								<% $open_tourns{$tourn_id}{circuits} %>
							</td>

							<td
								class="centeralign smallish"
								data-text="<% $open_tourns{$tourn_id}{reg_end_sort} %>"
							>
								<%  $open_tourns{$tourn_id}{reg_end} %>
							</td>

							<td class="centeralign marno padless">
								<a
									class="buttonwhite greentext smallish hover invert fa fa-sign-in"
									href="/user/enter/create.mhtml?chapter_id=<% $chapter->id %>&tourn_id=<% $tourn_id %>"
									title="Register for <% $open_tourns{$tourn_id}{"name"} %>"
									alt="Register for <% $open_tourns{$tourn_id}{"name"} %>"
								></a>
							</td>

						</tr>
%					}

				</tbody>
			</table>
%		}

%		unless ( (keys %open_tourns) || (keys %registered)) {

<%perl>

			my $circuit_sth = $dbh->prepare("
				select circuit.id, circuit.abbr, circuit.name,
					circuit.state, circuit.country
				from circuit, chapter_circuit cc
				where cc.chapter = ?
					and cc.circuit = circuit.id
				order by circuit.name
			");

			$circuit_sth->execute($chapter->id);

			my $results = $circuit_sth->fetchall_hash();
			my @circuits = @{$results};
</%perl>

%			if (scalar @circuits > 0) {

				<h4>No tournaments are currently open for registration</h4>

				<p>
					Your school can see tournaments from the following
					circuits.  If you want to see tournaments from additional
					circuits, sign up under the Circuits tab above.
				</p>

				<table class='unfixed'>
<%perl>
					foreach my $circuit (@circuits) {

						my $now = DateTime->now(time_zone => $tz);

						my @tourns = $m->comp("/funclib/circuit_tourns.mas", circuit => $circuit->{id}, future => 1);

						my $next_tourn = $tourns[0] if @tourns;

</%perl>
						<tr class="row">
							<td>
								<% $circuit->{state} ? $circuit->{state}."/" : "" %><% $circuit->{country}  %>
							</td>

							<td>
								<a class="white" href="circuit.mhtml?circuit_id=<% $circuit->{id} %>">
									<% $circuit->{name} %>
								</a>
							</td>

							<td>
								<% ($next_tourn)
									? $next_tourn->name." opens ".Tab::niceshortdate($next_tourn->reg_start)
									: ""
								%>
							</td>
						</tr>
%					}

				</table>

%			} else {

				<h4>You must join a circuit</h4>

				<p>
					There are currently no tournaments open for registration
					because you are not set up to see any circuits.
				</p>

				<p>

					All tournaments are registered under one or more
					circuit so high schools don't have to see university
					tournaments, or people in Montana aren't offered
					locals in Maryland, or so on.
				</p>

				<p>
					Double-check your <a href="circuits.mhtml?chapter_id=<%
					$chapter->id%>">Circuit Memberships</a> by clicking the tab
					above if there are tournaments you believe you should be
					able to register for.
				</p>

				<p>
					Remember also you must add competitors and judges to your
					rosters (tabs above) before you can register them for
					tournaments!
				</p>
%			}
%		}
	</div>

<%perl>

	sub show_tourn {

		my $tourn_ref = shift;
		my $one = substr($tourn_ref->{"start"}, 8, 2);
		my $two = substr($tourn_ref->{"end"}, 8, 2);

</%perl>
		<tr>
			<td
				class="smaller nowrap centeralign"
				data-text="<% $tourn_ref->{"startsort"} %>"
			>
				<& "/funclib/showdate.mas",
					string => $tourn_ref->{"start"},
					length => "shortest"
				&>
%				if ($one ne $two) {
					&ndash;
					<& "/funclib/showdate.mas",
						string => $tourn_ref->{"end"},
						length => "shortest"
					&>
%				}
			</td>

			<td class="nospace">

%				if ($tourn_ref->{"district_name"}) {
					<a
						class="white padmore padtop padbottom smallish padleft <% $tourn_ref->{"bold"} ? "semibold" : "" %>"
						href="/user/enter/entry.mhtml?chapter_id=<% $tourn_ref->{"chapter_id"} %>&tourn_id=<% $tourn_ref->{id} %>"
					>
						<span class="half semibold">
							<% $tourn_ref->{"district_name"} %>
						</span>
						<span class="half">
							<% $tourn_ref->{"name"} %>
						</span>
					</a>

%				} else {
					<a
						class="white padmore padtop padbottom smallish padleft <% $tourn_ref->{"bold"} ? "semibold bluetext" : "" %>"
						href="/user/enter/entry.mhtml?chapter_id=<% $tourn_ref->{"chapter_id"} %>&tourn_id=<% $tourn_ref->{id} %>"
					><% $tourn_ref->{"name"} %></a>
%				}
			</td>

			<td class="smallish leftalign">
				<%
					$tourn_ref->{"city"} ? $tourn_ref->{"city"} : ""
				%><%
					$tourn_ref->{"state"}
					? ", ".$tourn_ref->{"state"}
					: $tourn_ref->{"country"}
						? ", ". $tourn_ref->{"country"}
						: ""
				%>
			</td>

			<td
				class     = "centeralign smallish"
				data-text = "<% $tourn_ref->{"reg_endsort"} %>"
			>
				<& "/funclib/showdate.mas",
					string => $tourn_ref->{"reg_end"},
					length => "shortest"
				&>
			</td>

			<td class="centeralign nospace">

				<div class="full flexrow flexgrow nospace">
%				if ($nowstring < $tourn_ref->{"endsort"}) {
%					if ($tourn_ref->{"school"}) {
						<span class="flexthird grow nospace">
							<a
								class = "buttonwhite bluetext hover invert fa  fa-table"
								title = "Entries and registration"
								alt   = "Entries and registration"
								href  = "/user/enter/entry.mhtml?chapter_id=<% $tourn_ref->{"chapter_id"} %>&tourn_id=<% $tourn_ref->{id} %>"
							></a>
						</span>
%					} else {
						<span class="flexthird grow nospace">
							<a
								class = "buttonwhite greentext hover invert fa fa-sign-in"
								title = "Register for <% $tourn_ref->{"name"} %>"
								alt   = "Register for <% $tourn_ref->{"name"} %>"
								href  = "/user/enter/create.mhtml?chapter_id=<% $tourn_ref->{"chapter_id"} %>&tourn_id=<% $tourn_ref->{id} %>"
							></a>
						</span>
%					}
%				}

%				if ($tourn_ref->{"strikes"}) {
					<span class="flexthird grow nospace">
						<a
							href  = "/user/enter/strike_cards.mhtml"
							class = "buttonwhite orangetext hover invert fa  fa-strikethrough"
							title = "Strike Cards"
							alt   = "Enter Online Strike Cards"
						></a>
					</span>
%				}
<%perl>
				if (
					$tourn_ref->{"onsite_reg"}
					&& (not defined $tourn_ref->{"onsite"})
					&& ($tourn_ref->{"onsite_startsort"} < $nowstring)
					&& ($tourn_ref->{"onsite_endsort"} > $nowstring)
				) {
</%perl>
					<span class="flexthird grow nospace">
						<a
							class = "buttonwhite orangetext invert hover fa  fa-check-circle"
							href  = "/user/enter/onsite.mhtml?chapter_id=<% $tourn_ref->{chapter_id} %>&tourn_id=<% $tourn_ref->{id} %>"
							title = "Confirm Registration"
							alt   = "Confirm Registration"
						></a>
					</span>
<%perl>
				}

				if (
					($nowstring > $tourn_ref->{"startsort"})
					&& ($nowstring < $tourn_ref->{"endsort"})
				) {
</%perl>
					<span class="flexthird grow nospace">
						<a
							class = "buttonwhite greentext hover invert fa  fa-tachometer"
							href  = "/user/enter/dashboard.mhtml?school_id=<% $tourn_ref->{"school"} %>"
							title = "Competition Dashboard"
							alt   = "Competition Dashboard"
						></a>
					</span>

%				} elsif ($nowstring > $tourn_ref->{"endsort"}) {

					<span class="flexthird grow nospace">
						<a
							class = "buttonwhite redtext hover invert fa  fa-trophy"
							href  = "/user/results/report.mhtml?school_id=<% $tourn_ref->{"school"} %>"
							title = "Results"
							alt   = "Results"
						></a>
					</span>
%				}
			</td>
		</tr>
%	}

%	undef $nowstring;
