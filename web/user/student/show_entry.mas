<%args>
	$entry
	$person
	$student    => undef
	$student_id => undef
	$already    => undef
	$dbh
	$now
</%args>
<%init>

	return unless $entry && $entry->id;

	$student = Tab::Student->retrieve($student_id) unless $student;
	$m->abort unless $student;

	my $event = $entry->event;
	my $school = $entry->school;
	my $tourn = $event->tourn;
	my $event_type = $event->type;
	my $category = $event->category;

	unless ($event && $category ) {
		return;
	}

	my %category_settings = $category->all_settings();
	my %event_settings = $event->all_settings();

	my $is_pf;

	my %ts = $tourn->all_settings();
	my $tourn_settings = \%ts;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
	my $tzname = Tab::tzname($tz);

	my $student_ballot = $event_settings{"student_online_ballots"};
	my @students;

    Tab::Round->columns( TEMP => "deadline");

    Tab::Round->set_sql( entry_strikes => "
        select distinct round.*, strike_deadline.value_date as deadline
        from (round, round_setting, panel, ballot)

			left join round_setting strike_deadline
				on strike_deadline.round = round.id
				and strike_deadline.tag = 'strikes_due'

		where ballot.entry = ?
			and ballot.panel = panel.id
			and panel.bye != 1
			and panel.round = round.id
			and round.id = round_setting.round
			and round_setting.tag = 'strikes_published'
			and round_setting.value = 1

        order by round.start_time
    ");

	my @strike_cards = Tab::Round->search_entry_strikes($entry->id);

    Tab::Round->set_sql( entry_flips => "
        select distinct round.*, flip_at.value_date deadline
        from (round, round_setting, panel, ballot, panel_setting flip_at, panel_setting flip_status)
		where ballot.entry = ?
			and ballot.panel = panel.id
			and panel.bye != 1
			and panel.round = round.id

			and flip_at.tag = 'flip_at'
			and flip_at.panel = panel.id

			and flip_status.tag = 'flip_status'
			and flip_status.panel = panel.id
			and flip_status.value != 'done'

			and round.id = round_setting.round
			and round_setting.tag = 'flip_published'
			and round_setting.value = 1
        order by round.start_time
    ");

	my @flip_cards = Tab::Round->search_entry_flips($entry->id);

	my $supp_team;
	my %sites_by_id;

	if ($tourn_settings->{"supp_team_show_entries"}) {
		my $supp_teams = $tourn_settings->{supp_teams};
		$supp_team = $supp_teams->{$school->setting("supp_team")};
		%sites_by_id = map {$_->id => $_} $tourn->sites;
	}

</%init>

%	unless ($already->{$tourn->id}) {

		<div class="full flexrow martop">

			<span class="fivesixths nospace">
				<h6 class='nospace semibold'>
					<% $tourn->name %>
				</h6>
			</span>

			<span class="sixth rightalign padright">
				<a
					title = "Tournament Website"
					class = "fa buttonwhite bluetext fa-external-link invert"
					href  = "/index/tourn/index.mhtml?tourn_id=<% $tourn->id %>"
				></a>
			</span>
		</div>
%	}

	<div class="full flexrow padtop wrap bluebordertop marno">

		<div class="full flexrow">
			<span class="half graytext semibold bigger">
				<% $event->name %> (<% $event->abbr %>)
			</span>

			<span class="half bluetext semibold rightalign">
%				unless ($tourn_settings->{"hide_codes"}) {
					Your Code: <% $entry->code %>
%				}
			</span>
		</div>

%		if ($event_settings{"supp"} && $entry->dropped) {
			<div
				class = "bigger redtext full semibold padvert padtopmore"
				title = "You will not be scheduled for rounds in this Supp event unless your coach re-registers you Tuesday night"
			><% $event_settings{"supp"} && $entry->dropped ? "Not Re-Registered" : "" %></div>

%		} elsif ($event_settings{supp} && $entry->active) {

			<div
				class = "biggish greentext full semibold padvert"
				title = "You will be scheduled into rounds for this Supp event!"
			><i class="fa fa-sm fa-check padright nospace"></i>Re-Registered</div>
%		}

		<span class="flexrow right half wrap">
<%perl>
			if ($student_ballot) {

				Tab::Panel->columns(TEMP => "roundname");
				Tab::Panel->columns(TEMP => "roundlabel");
				Tab::Panel->columns(TEMP => "side");
				Tab::Panel->columns(TEMP => "feedback");

				Tab::Panel->set_sql(open_ballot => "
					select panel.*, round.name as roundname, round.label as roundlabel,
						ballot.side as side
					from panel, ballot, round, round_setting
					where ballot.entry = ?
						and ballot.panel = panel.id
						and panel.round = round.id
						and round.id = round_setting.round
						and round_setting.tag = 'student_vote_open'
					group by panel.id
				");

				my @panels = Tab::Panel->search_open_ballot($entry->id);

				foreach my $panel (@panels) {
</%perl>
					<div class="odd ltborder padvert flexrow full">
						<span class="twenty"></span>
						<span class="semibold bigger padleft threefifths">
							<div class="bluetext full biggish">
								Competitor Voting Open
							</div>

							<div class="bluetext full biggish">
								<% $panel->roundlabel || "Sess ".$panel->roundname %>
							</div>
						</span>

						<span class="twofiths centeralign">
							<a
								class = "buttonwhite redtext invert"
								href  = "student_vote.mhtml?entry_id=<% $entry->id %>&panel_id=<% $panel->id %>"
							>Vote Online Now</a>
						</span>
					</div>
<%perl>
 				}
				undef @panels;
 			}
</%perl>

%			if ($entry->waitlist) {
				<span
					class = "biggish redtext"
				>Waitlisted</span>
%			}

%			if ($event_settings{supp} && $supp_team) {
				<div class="full semibold padbottomless flexkids">
					<div class="full ltborderbottom marbottomless">
						<span class="half rightalign">
							DISTRICT SUPP TEAM
						</span>
						<span class="half">
							<% uc($supp_team->{label}) %>
						</span>
					</div>

					<div class="full orangetext">
						<span class="half padleft">
							Wednesday At
						</span>
						<span class="half">
							<% $sites_by_id{$supp_team->{"wed_".$event->type}}->name %>
						</span>
					</div>

					<div class="full bluetext">
						<span class="half padleft">
							Thursday At
						</span>
						<span class="half">
							<% $sites_by_id{$supp_team->{"thu_".$event->type}}->name %>
						</span>
					</div>
				</div>
%			}

%			if ($category_settings{livedoc_url}) {
				<a
					href  = "<% $category_settings{livedoc_url} %>"
					target = "_blank"
					class = "plain white bluetext hover half flexrow padleft semibold padvertless martopless"
				>
					<% $category->abbr %>
					<% $category_settings{livedoc_caption} || "Live Document" %>
					<button class="buttonwhite bluetext fa fa-sm fa-file marleftmuchmore"></button>
				</a>
%			}
		</span>
	</div>

<%perl>

	my $online_mode = $event_settings{"online_mode"};

	if (
		$online_mode
		&& $online_mode ne "none"
		&& ($tourn->end > $now)
	) {

		my $prep = $event_settings{"online_prep"};
		my $online_rooms = $tourn_settings->{"online_rooms"};
		my @local_rooms = @{$online_rooms} if $online_rooms;

		my @rooms;

		foreach my $room (@local_rooms) {

			if (
				$room->{access} eq "entry"
				&& (
					($room->{event_id} < 1)
					|| $room->{event_id} == $event->id
				)
			) {
				push @rooms, $room;
			}
		}

</%perl>
		<p class="semibold bigger">
			Online Spaces
		</p>

		<div class="bluebordertop odd">

%			if ($school) {
				<span class="half leftalign">
					<span class="fourfifths semibold bluetext">
						<% Tab::short_name($school->name) %> Squad Room
					</span>
					<span class="fifth centeralign padvert nospace">
						<& "/funclib/online_room.mas",
							school => $school->id,
							person => $person,
							show   => 1,
							class  => "fa"
						&>
					</span>
				</span>
%			}

%			if ($prep) {
				<span class="half leftalign">
					<span class="fourfifths semibold bluetext">
						<% $entry->code %> Prep Room
					</span>
					<span class="fifth centeralign padvert nospace">
						<& "/funclib/online_room.mas",
							entry  => $entry,
							person => $person,
							show   => 1,
							class  => "fa"
						&>
					</span>
				</span>
%			}

%			foreach my $room (@rooms) {
				<span class="half leftalign">
					<span class="fourfifths semibold bluetext padleft">
						<% $room->{"name"} %>
					</span>
					<span class="sixth centeralign padvert nospace">
						<& "/funclib/online_room.mas",
							util   => $room,
							person => $person,
							show   => 1,
							class  => "fa"
						&>
					</span>
				</span>
%			}
		</div>
%	}


<%perl>

	if (@strike_cards) {

</%perl>

		<div class="full ltborder flexrow">
			<span class="threequarters semibold bluetext padleft">
<%perl>
				foreach my $strike_card (@strike_cards) {
					my $due = eval {
						my $dt = DateTime::Format::MySQL->parse_datetime($strike_card->deadline);
						$dt->set_time_zone("UTC");
						$dt->set_time_zone($tz);
						return $dt;
					};
</%perl>
					Strike card available for <% $strike_card->realname %>
					<% $due ? "Due by ".Tab::nicetime($due)." ".Tab::tzname($tz) : "" %><br />
%				}
			</span>

			<span class="quarter padright rightalign">
				<a 	class="buttonwhite bluetext invert"
					href="/user/enter/strike_cards.mhtml"
				>
					Strike Card
				</a>
			</span>
		</div>
%	}

%	if (@flip_cards) {

		<div class="bluebordertop martopmore odd flexrow">

			<span class="fourfifths semibold orangetext">
<%perl>
				foreach my $flip_card (@flip_cards) {

					my $due = eval {
						my $dt = DateTime::Format::MySQL->parse_datetime($flip_card->deadline);
						$dt->set_time_zone("UTC");
						$dt->set_time_zone($tz);
						return $dt;
					};
</%perl>
					<div class="full orangetext padvertless marno">
						Flip choice available for <% $flip_card->realname %> <br />
					</div>
					<div class="full bluetext padvertless marno">
						<% $due ? "Due by ".Tab::nicetime($due)." ".Tab::tzname($tz) : "" %>
					</div>
%				}
			</span>

			<span class="fifth centeralign">
				<a 	class="buttonwhite bluetext invert fa fa-check-square-o"
					href="/user/enter/flip.mhtml"
				>
				</a>
			</span>
		</div>
%	}

	<&
		"/funclib/tablesorter.mas",
		table     => $entry->id,
		nobuttons => 1
	&>

<%perl>

	my $shares;

	my $sth = $dbh->prepare("
		select
			entry.id, entry.code, entry.name,
			panel.id, panel.letter,
			flip_status.value, share_room.value,
			CONVERT_TZ(flip_at.value_date, '+00:00', tourn.tz),
			panel.bye, panel.flight,
			ballot.id, ballot.side, ballot.speakerorder, ballot.bye, ballot.forfeit, ballot.audit, ballot.approved,
			round.id, round.name, round.label, round.type,
				round.published, round.post_primary, round.post_secondary, round.post_feedback, round.flighted,
				public_wins.value, public_points.value,
				entry_wins.value, entry_points.value,
			CONVERT_TZ(round.start_time, '+00:00', tourn.tz),
			CONVERT_TZ(round.start_time, '+00:00', person.tz),
			CONVERT_TZ(timeslot.start, '+00:00', tourn.tz),
			CONVERT_TZ(timeslot.start, '+00:00', person.tz),
			person.id, person.tz,
			tourn.tz, tourn.hidden,
			event.id, event.abbr, event.name, event.type,
			tourn.id, tourn.name,
			score.id, score.tag, score.value, score.speech, score.content, score.topic,
			room.id, room.name, room.url, room.notes,
			judge.id, judge.code, judge.first, judge.last,
			student.id, student.first, student.last,
			scorestudent.id, scorestudent.first, scorestudent.last,
			judge.person, paradigm.id,
			ldparadigm.id, cxparadigm.id,
			jpool.id,
			flight_offset.value,
			opponent.code,
			aff_label.value,
			neg_label.value,
			online_mode.value,
			online_prep.value,
			use_normal_rooms.value,
			no_side_constraints.value,
			sidelock_elims.value,
			include_room_notes.value,
			publish_prelim_chamber.value,
			show_async_to_entries.value,
			po_contest.value,
			seating.value,
			cbr.value

		from (entry, event, tourn, entry_student es, student, person)

			left join ballot on entry.id = ballot.entry

			left join panel on panel.id = ballot.panel

			left join round on panel.round = round.id and round.event = event.id

			left join timeslot on timeslot.id = round.timeslot

			left join score on ballot.id = score.ballot

			left join student scorestudent on scorestudent.id = score.student

			left join room on panel.room = room.id

			left join judge on ballot.judge = judge.id

			left join school on entry.school = school.id

			left join chapter_setting cbr
				on cbr.chapter = school.chapter
				and cbr.tag = 'coach_ballot_review'

			left join panel_setting share_room
				on share_room.tag = 'share'
				and share_room.panel = panel.id

			left join panel_setting flip_at
				on flip_at.panel = panel.id
				and flip_at.tag = 'flip_at'

			left join panel_setting flip_status
				on flip_status.panel = panel.id
				and flip_status.tag = 'flip_status'

			left join person_setting paradigm
				on paradigm.person = judge.person
				and paradigm.tag = 'paradigm'

			left join judge_setting ldparadigm
				on ldparadigm.judge = judge.id
				and ldparadigm.tag = 'form_LDParadigm'

			left join judge_setting cxparadigm
				on cxparadigm.judge = judge.id
				and cxparadigm.tag = 'form_CXParadigm'

			left join event_setting po_contest
				on po_contest.event = event.id
				and po_contest.tag = 'po_contest'

			left join event_setting nats_jpool
				on nats_jpool.event = event.id
				and nats_jpool.tag = 'nats_jpool'

			left join jpool on jpool.id = nats_jpool.value

			left join event_setting flight_offset
				on flight_offset.event = event.id
				and flight_offset.tag = 'flight_offset'

			left join event_setting aff_label
				on aff_label.event = event.id
				and aff_label.tag = 'aff_label'

			left join event_setting neg_label
				on neg_label.event = event.id
				and neg_label.tag = 'neg_label'

			left join event_setting online_mode
				on online_mode.event = event.id
				and online_mode.tag = 'online_mode'

			left join round_setting use_normal_rooms
				on use_normal_rooms.round = round.id
				and use_normal_rooms.tag = 'use_normal_rooms'

			left join event_setting show_async_to_entries
				on show_async_to_entries.event = event.id
				and show_async_to_entries.tag = 'show_async_to_entries'

			left join event_setting online_prep
				on online_prep.event = event.id
				and online_prep.tag = 'online_prep'

			left join event_setting no_side_constraints
				on no_side_constraints.event = event.id
				and no_side_constraints.tag = 'no_side_constraints'

			left join event_setting sidelock_elims
				on sidelock_elims.event = event.id
				and sidelock_elims.tag = 'sidelock_elims'

			left join event_setting seating
				on seating.event = event.id
				and seating.tag in ('congress_seating_entrycodes',
					'congress_seating_entrynames',
					'congress_seating_schoolcodes',
					'congress_seating_schoolnames'
				)

			left join round_setting include_room_notes
				on include_room_notes.round = round.id
				and include_room_notes.tag = 'include_room_notes'

			left join round_setting public_wins
				on public_wins.round = round.id
				and public_wins.tag = 'public_wins'

			left join round_setting public_points
				on public_points.round = round.id
				and public_points.tag = 'public_points'

			left join round_setting entry_wins
				on entry_wins.round = round.id
				and entry_wins.tag = 'entry_wins'

			left join round_setting entry_points
				on entry_points.round = round.id
				and entry_points.tag = 'entry_points'

			left join round_setting publish_prelim_chamber
				on publish_prelim_chamber.round = round.id
				and publish_prelim_chamber.tag = 'publish_prelim_chamber'

			left join ballot oppballot
				on oppballot.panel = panel.id
				and oppballot.entry != entry.id

			left join entry opponent
				on opponent.id = oppballot.entry

		where entry.id = ?
			and student.person = person.id
			and student.id     = es.student
			and es.entry       = entry.id
			and entry.event    = event.id
			and event.tourn    = tourn.id
			and tourn.start    < now()
			and tourn.hidden != 1

		order by event.abbr, entry.code, round.name desc, score.speech, ballot.audit
	");

	$sth->execute($entry->id);

	my %current = ();
	my $event_po_contest;

	my $did_things;

	while (
		my (
			$entry_id, $entry_code, $entry_name,
			$panel_id, $panel_letter, $panel_flip_status, $panel_share_room,
			$panel_flip_at, $panel_bye, $panel_flight,
			$ballot_id, $ballot_side, $ballot_speakerorder, $ballot_bye, $ballot_forfeit, $ballot_audit, $ballot_approved,
			$round_id, $round_name, $round_label, $round_type,
				$round_published, $post_primary, $post_secondary, $post_feedback, $round_flighted,
				$public_wins, $public_points,
				$entry_wins, $entry_points,
			$round_start_time,
			$my_round_start_time,
			$timeslot_start,
			$my_timeslot_start,
			$person_id, $person_tz,
			$tourn_tz, $tourn_hidden,
			$event_id, $event_abbr, $event_name, $event_type,
			$tourn_id, $tourn_name,
			$score_id, $score_tag, $score_value, $score_speech, $score_content, $score_topic,
			$room_id, $room_name, $room_url, $room_notes,
			$judge_id, $judge_code, $judge_first, $judge_last,
			$student_id, $student_first, $student_last,
			$scorestudent_id, $scorestudent_first, $scorestudent_last,
			$judge_person, $paradigm_id,
			$ldparadigm, $cxparadigm,
			$nats_jpool,
			$flight_offset,
			$opponent_code,
			$aff_label,
			$neg_label,
			$online_mode,
			$online_prep,
			$use_normal_rooms,
			$no_side_constraints,
			$sidelock_elims,
			$include_room_notes,
			$publish_prelim_chamber,
			$show_async_links,
			$po_contest,
			$seating,
			$cbr
		) = $sth->fetchrow_array()
	) {

		if ($person_id != $person && (not defined $person->site_admin)) {
			next;
		}

		if ($round_published == 1 || $post_primary > 0) {
			undef $publish_prelim_chamber;
		}

		unless ($round_published > 0
			|| ( $event_type eq "congress"
				&& $round_name == 1
				&& $publish_prelim_chamber == 1
			)
		) {
			next;
		}

		$did_things++;

		unless ($current{$panel_id}{"round_number"}) {
			$current{$panel_id}{"panel_flight"}   = $panel_flight;
			$current{$panel_id}{"round_flighted"} = $round_flighted;
			$current{$panel_id}{"flight_offset"}  = $flight_offset;
			$current{$panel_id}{"round_number"}   = $round_name;
			$current{$panel_id}{"round_id"}       = $round_id;
			$current{$panel_id}{"seating"}        = $seating;
		}

		if ($publish_prelim_chamber) {
			$current{$panel_id}{"round_name"} = "Prelim Chamber";
		} elsif ($round_label && $round_label ne int($round_label)) {
			$current{$panel_id}{"round_name"} = $round_label;
		} elsif ($event_type eq "congress") {
			$current{$panel_id}{"round_name"} = "Session ".$round_name;
		} else {
			$current{$panel_id}{"round_name"} = "Round ".$round_name;
		}

		$current{$panel_id}{"po_contest"} = $po_contest;
		$current{$panel_id}{"cbr"} = $cbr;

		if ($score_tag eq "po") {
			$current{$panel_id}{"po"} = 1;
		}

		$event_po_contest += $po_contest;

		unless ($publish_prelim_chamber || $current{$panel_id}{"round_start"}) {

			if ($online_mode && $person_tz && $person_tz ne $tourn_tz) {

				if ($round_start_time) {
					$current{$panel_id}{"round_start"} = $round_start_time;
					$current{$panel_id}{"my_round_start"} = $my_round_start_time;
				} else {
					$current{$panel_id}{"round_start"} = $timeslot_start;
					$current{$panel_id}{"my_round_start"} = $my_timeslot_start;
				}

				unless ($current{$panel_id}{"tourn_tz"}) {
					$current{$panel_id}{"tourn_tz"} = Tab::tzname($tourn_tz);
				}
				unless ($current{$panel_id}{"person_tz"}) {
					$current{$panel_id}{"person_tz"} = Tab::tzname($person_tz);
				}

			} else {

				if ($round_start_time) {
					$current{$panel_id}{"round_start"} = $round_start_time;
				} else {
					$current{$panel_id}{"round_start"} = $timeslot_start;
				}
			}
		}

		if ($current{$panel_id}{"not_done"}
			|| ($ballot_audit < 1)
		) {
			undef $post_primary;
			undef $post_secondary;
			undef $post_feedback;
			undef $current{$panel_id}{"post_primary"};
			undef $current{$panel_id}{"post_secondary"};
			undef $current{$panel_id}{"post_feedback"};
			$current{$panel_id}{"not_done"}++;
		}

		if ($use_normal_rooms) {
			$online_mode = "sync";
		}

		if ($online_mode) {
			$current{$panel_id}{"online_mode"}      = $online_mode;
			$current{$panel_id}{"online_prep"}      = $online_prep;
			$current{$panel_id}{"post_primary"}     = $post_primary;
			$current{$panel_id}{"room_name"}        = $room_name;
			$current{$panel_id}{"show_async_links"} = $show_async_links;
		} else {
			$current{$panel_id}{"room_name"} = $room_name;
			$current{$panel_id}{"room_url"}  = $room_url;

			if ($include_room_notes) {
				$current{$panel_id}{"room_notes"} = $room_notes;
			}
		}

		unless (
			$publish_prelim_chamber || $round_published == 2
		) {

			if ($judge_id > 0
				&& (not defined $current{$panel_id}{"judgenames"}{$judge_id})
			) {
				$current{$panel_id}{"judgenames"}{$judge_id} = $judge_last.", ".$judge_first;
			}

			$current{$panel_id}{"judgecode"}{$judge_id} = $judge_code;

			if ($ballot_approved > 0) {
				$current{$panel_id}{"scores"}{$judge_id}{"approved"}++;
			}

			if (
				$judge_id > 0
				&& $post_feedback > 1
				&& ($score_tag eq "rfd"|| $score_tag eq "comments" || $score_tag eq 'speech')
			) {
				$current{$panel_id}{"scores"}{$judge_id}{"feedback"}++;

				if ($score_tag eq "rfd") {
					$current{$panel_id}{"scores"}{$judge_id}{"rfd"} = Tab::Utils::uncompress($score_content);
				} elsif ($score_tag eq "comments") {
					$current{$panel_id}{"scores"}{$judge_id}{"comments"} = Tab::Utils::uncompress($score_content);
				} elsif ($score_tag eq "speech") {

					my $text = Tab::Utils::uncompress($score_content);
					$current{$panel_id}{"scores"}{$judge_id}{"speeches"}{$score_id}{"comments"} = $text;
					$current{$panel_id}{"scores"}{$judge_id}{"speeches"}{$score_id}{"score"}    = $score_value;
					$current{$panel_id}{"scores"}{$judge_id}{"speeches"}{$score_id}{"speech"}   = $score_speech;
					$current{$panel_id}{"scores"}{$judge_id}{"speeches"}{$score_id}{"topic"}    = $score_topic;
				}
			}
		}

		$current{$panel_id}{"letter"} = $panel_letter;

		if ($event_type eq "speech") {

			$current{$panel_id}{"side_sort"} = $ballot_speakerorder;
			$current{$panel_id}{"order"}     = $ballot_speakerorder;

			if ($score_tag eq "time") {
				$current{$panel_id}{"time"}{$judge_id} = $score_content;
			}

			if ($judge_id > 0) {

				if (
					$post_primary > 1 && $score_tag eq "rank"
				) {
					$current{$panel_id}{"scores"}{$judge_id}{$score_tag} = $score_value;
				}

				if (
					$post_secondary > 1 && $score_tag eq "point"
				) {
					$current{$panel_id}{"scores"}{$judge_id}{$score_tag} = $score_value;
				}
			}

		} elsif ($event_type eq "wudc") {

			my %order = $m->comp("/funclib/wudc_order.mas", format => 'short');
			$current{$panel_id}{"side"} = $order{$ballot_speakerorder};
			$current{$panel_id}{"side_sort"} = $ballot_speakerorder;

			if ($judge_id > 0) {

				if (
					$post_primary > 1
					&& ($score_tag eq "rank" || $score_tag eq "winloss")
				) {
					$current{$panel_id}{"scores"}{$judge_id}{$score_tag} = $score_value;
				}

				if (
					$post_primary > 1 && $score_tag eq "point"
				) {

					$current{$panel_id}{"scores"}{$judge_id}{$score_tag} = $score_value;

					$current{$panel_id}{"students"}{$scorestudent_id}{"name"}
						= ucfirst(substr($scorestudent_first,0,1)).ucfirst(substr($scorestudent_last,0,1));
				}

			}

			if ($ldparadigm && $event_abbr eq "LD") {
				$current{$panel_id}{"nats_paradigm"}{$judge_id} = $nats_jpool;
			} elsif ($cxparadigm && $event_abbr eq "CX") {
				$current{$panel_id}{"nats_paradigm"}{$judge_id} = $nats_jpool;
			} elsif ($paradigm_id) {
				$current{$panel_id}{"paradigm"}{$judge_id} = $judge_person;
			}

		} elsif ($event_type eq "congress") {

			if ($judge_id > 0) {

				if (
					$post_primary > 1 && $score_tag eq "rank"
				) {
					$current{$panel_id}{"scores"}{$judge_id}{"rank"} = $score_value;
				}

				if (
					$post_secondary > 1
					&& ($score_tag eq "speech" || $score_tag eq "point")
				) {

					if ($score_tag eq "speech") {

						if ($current{$panel_id}{"scores"}{$judge_id}{$score_tag}) {
							$current{$panel_id}{"scores"}{$judge_id}{$score_tag} .= ",";
						}

						$current{$panel_id}{"scores"}{$judge_id}{$score_tag} .= $score_value;


					} else {

						$current{$panel_id}{"scores"}{$judge_id}{$score_tag} = $score_value;
					}
				}

				if ($post_feedback && $score_tag eq "comments") {
					$current{$panel_id}{"scores"}{$judge_id}{"rfd"}++;
				}
			}

		} elsif ($panel_bye) {

			$current{$panel_id}{"bye"}++;

		} else {

			$aff_label = "Aff" unless $aff_label;
			$neg_label = "Neg" unless $neg_label;

			if (
				($round_type eq "elim"
					&& (not defined $sidelock_elims))
				|| $no_side_constraints
			) {

				$is_pf = $no_side_constraints;

				if ($panel_flip_status eq "done" || $ballot_audit) {
					$current{$panel_id}{"order"} = $ballot_speakerorder;
					if ($ballot_side == 1) {
						$current{$panel_id}{"side"} = $aff_label;
					} elsif ($ballot_side == 2) {
						$current{$panel_id}{"side"} = $neg_label;
					}
				}

			} else {

				if ($ballot_side == 1) {
					$current{$panel_id}{"side"} = $aff_label;
				} elsif ($ballot_side == 2) {
					$current{$panel_id}{"side"} = $neg_label;
				}
			}

			if ($panel_share_room) {
				$current{$panel_id}{"share_room"}  = $panel_share_room;
				$shares++;
			}

			$current{$panel_id}{"opponent"}  = $opponent_code;
			$current{$panel_id}{"side_sort"} = $ballot_side;

			unless ($round_published > 1) {
				if ($ballot_bye) {
					$current{$panel_id}{"bye"}++;
				} elsif ($ballot_forfeit) {
					$current{$panel_id}{"forfeit"}++;
				}
			}

			if ($judge_id > 0) {

				if (
					$post_primary > 1 && $score_tag eq "winloss"
				) {

					if ($score_value == 1) {
						$current{$panel_id}{"scores"}{$judge_id}{"winloss"} = "W";
					} else {
						$current{$panel_id}{"scores"}{$judge_id}{"winloss"} = "L";
					}
				}

				if (
					$post_secondary > 1
					&& ($score_tag eq "point" || $score_tag eq "rank" || $score_tag eq "refute")
				) {

					if ($scorestudent_id && (not defined $event_settings{"team_points"})) {
						$current{$panel_id}{"scores"}{$judge_id}{$score_tag}{$scorestudent_id} = $score_value;
						$current{$panel_id}{"students"}{$scorestudent_id}{"name"}
							= ucfirst(substr($scorestudent_first,0,1)).ucfirst(substr($scorestudent_last,0,1));
					} else {
						$current{$panel_id}{"scores"}{$judge_id}{$score_tag} = $score_value;
					}
				}
			}

			if ($ldparadigm && $event_abbr eq "LD") {
				$current{$panel_id}{"nats_paradigm"}{$judge_id} = $nats_jpool;
			} elsif ($cxparadigm && $event_abbr eq "CX") {
				$current{$panel_id}{"nats_paradigm"}{$judge_id} = $nats_jpool;
			} elsif ($paradigm_id) {
				$current{$panel_id}{"paradigm"}{$judge_id} = $judge_person;
			}

		}
	}

</%perl>

%	if (keys %current) {

		<div class="full nospace martop dkborderbottom marbottommuchmore">

		<table id="<% $entry->id %>">
			<thead>
				<tr class="smallish semibold yellowrow">

					<th >
						Round
					</th>

					<th >
						Start
					</th>

					<th >
						Room
					</th>

%					if ($event_type eq "speech") {
						<th title='Section Designation' class="smallhide">
							Sct
						</th>

						<th title="Speaker Order">
							Spk
						</th>
%					} elsif ($event_type eq "congress") {
						<th title='Chamber Designation'>
							Chamber
						</th>

						<th title="Seating Chart">
							Chart
						</th>

%					} elsif ($event_type eq "wudc") {
						<th >
							Position
						</th>

						<th >
							Opponent
						</th>
%					} else {
						<th >
							Side
						</th>

						<th >
							Opp
						</th>
%					}

%					if ($shares) {
						<th
							title = "Online access to the https://share.tabroom.com document repository"
						>
							Doc Share
						</th>
%					}

					<th class="nosort">
						Judges &amp; Results
					</th>

%					if ($event_po_contest) {
						<th class="nosort centeralign">
							Vote
						</th>
%					}

				</tr>
			</thead>

			<tbody>
<%perl>
			my $notfirst;

			foreach my $panel_id (
				sort {
					$current{$b}{"round_number"} <=> $current{$a}{"round_number"}
				} keys %current
			) {

				my $panel = $current{$panel_id};
				my $round_id = $panel->{"round_id"};

</%perl>
				<tr class="row">

					<td class="smallish centeralign">
						<div class="full smallhide">
							<% $panel->{"round_name"} %>
						</div>
						<div class="full smallshow">
							R<% $panel->{"round_number"} %>
						</div>
						<% $panel->{"round_flighted"} > 1 ? "Flt ".$panel->{"panel_flight"} : "" %>
					</td>

					<td class="smallish leftalign">

%						if ($panel->{"my_round_start"}) {
							<div class="flexrow padvertless nowrap">
								<& "/funclib/showdate.mas",
									length      => "murica_shorter",
									string      => $panel->{"my_round_start"},
									add_minutes => ($panel->{"flight_offset"}
													* ($panel->{"panel_flight"} - 1))
								&>
							</div>

							<div class="flexrow padvertless nowrap">
								<& "/funclib/showtime.mas",
									length      => "shortish",
									string      => $panel->{"my_round_start"},
									add_minutes => ($panel->{"flight_offset"}
													* ($panel->{"panel_flight"} - 1))
								&>
								<% $panel->{"person_tz"} %>
							</div>

							<div class="flexrow padvertless smallish italic">
								(<& "/funclib/showtime.mas",
									length      => "shortish",
									string      => $panel->{"round_start"},
									add_minutes => ($panel->{"flight_offset"}
													* ($panel->{"panel_flight"} - 1))
								&>
								<% $panel->{"tourn_tz"} %>)
							</div>

%						} else {

							<& "/funclib/showtime.mas",
								length      => "day",
								string      => $panel->{"round_start"},
								add_minutes => ($panel->{"flight_offset"}
												* ($panel->{"panel_flight"} - 1))
							&>
%						}
					</td>

					<td>

%						if ($panel->{"online_mode"} eq "async") {
%							if ($panel->{"show_async_links"}) {
								<a
									class  = "full bluetext semibold link-underline yellowhover"
									target = "_blank"
									href   = "videos.mhtml?entry_id=<% $entry->id %>&round_id=<% $round_id %>"
								>Watch Videos</a>
%							} else {
								<div class="centeralign italic full">
									Async
								</div>
%							}
<%perl>
						} elsif (
							$panel->{"online_mode"}
							&& ($panel->{"post_primary"} < 1)
						) {

							my $current;

							if ($panel->{"online_mode"} eq "sync" && $panel->{"room_name"}) {
								$current = "fa_sm";
</%perl>
								<span class="threequarters leftalign smallish">
									<% $panel->{"room_name"} %>
								</span>
								<span class="quarter leftalign nospace">
%							}

								<& "/funclib/online_room.mas",
									panel  => $panel_id,
									person => $person,
									show   => 1,
									class  => $current
								&>

%							if ($panel->{"online_mode"} eq "sync") {
								</span>
%							}

%						} else {
%							if ($panel->{"room_url"}) {
								<span class="threequarters leftalign smallish">
									<% $panel->{"room_name"} %>
								</span>

								<span class="quarter centeralign nospace">
									<a
                                        class = "fa fa-map fa-sm buttonwhite bluetext"
                                        href  = "<% $panel->{"room_url"} %>"
                                    ></a>
								</span>
%							} else {
								<% $panel->{"room_name"} %>
%							}

%							if ($panel->{"room_notes"}) {
								<span class="nospace martopless">
									<% $panel->{"room_notes"} %>
								</span>
%							}
%						}
					</td>

%					if ($event_type eq "speech") {
						<td class="smallish centeralign smallhide">
							<% $panel->{"letter"} %>
						</td>

						<td class="smallish centeralign">
							<% Lingua::EN::Numbers::Ordinate::ordinate($panel->{"order"}) %>
						</td>
%					} elsif ($event_type eq "congress") {

						<td class="smallish centeralign semibold">
							Chamber <% $panel->{"letter"} %>
						</td>

						<td class="smallish centeralign semibold redtext">
%							if ($panel->{"po"}) {
								<a
									href   = "po_dashboard.mhtml?chamber_id=<% $panel_id %>"
									target = "_blank"
									title  = "PO Dashboard"
									class  = "buttonwhite redtext fa-lg padless fa fa-table marbottomless"
								></a>
%							} elsif ($panel->{"seating"}) {
								<a
									href   = "seating.mhtml?chamber_id=<% $panel_id %>"
									target = "_blank"
									title  = "Seating Chart"
									class  = "buttonwhite greentext fa-lg padless fa fa-table marbottomless"
								></a>
%							}
						</td>

%					} elsif ($event_type eq "wudc") {

						<td class="smallish centeralign">
							<% $panel->{"side"} %>
						</td>

						<td class="smallish">
							<% $panel->{"opponent"} %>
						</td>

%					} else {

						<td class="smallish centeralign">
							<% $panel->{"side"} %>

%						if ($is_pf && $panel->{"order"} > 0) {
							<span class="full nospace padless">
								<% Lingua::EN::Numbers::Ordinate::ordinate($panel->{"order"}) %>
							</span>
%						}
						</td>

						<td class="smallish">
							<% $panel->{"opponent"} %>
						</td>
%					}

%					if ($shares) {
						<td class="smallish">
							<a
								class = "smallish bluetext link-underline"
								href  = "https://share.tabroom.com/<% $panel->{"share_room"} %>"
							><% $panel->{"share_room"} %></a>
						</td>
%					}

					<td class="smallish nospace">
%						if ($panel->{"bye"}) {
							<div class="nospace centeralign full semibold redtext padvertmore">
								BYE
							</div>
%						} elsif ($panel->{"forfeit"}) {
							<div class="nospace centeralign full semibold redtext">
								FORFEIT
							</div>
%						} else {

%							my $judgenum = scalar (keys %{$panel->{"judgenames"}});

%							my $rfd;

							<div class='full flexrow'>
								<span class="sixthsevenths grow">

%							foreach my $jid (sort keys %{$panel->{"judgenames"}}) {

%								my $scores = $panel->{"scores"}{$jid};
%								$rfd++ if $current{$panel_id}{"scores"}{$jid}{"feedback"};

								<div class="full flexrow">

								<span
									class = "half padvertless marvertno smallish padleft flexrow grow"
									title = "<% $panel->{"judgenames"}{$jid} %>"
								>
<%perl>
									unless (
										($tourn_settings->{"ncfl"} || $event_settings{anonymous_public})
										&& (not defined $event_settings{no_anon_dashboard})
									) {
										if ($panel->{"nats_paradigm"}{$jid}) {
											my $jpool = $panel->{"nats_paradigm"}{$jid};
</%perl>
											<span class="fifth centeralign" title="Nationals Paradigm">
												<a
													class  = "bluetext buttonwhite smaller padless marno"
													target = "_blank"
													href   = "/index/tourn/paradigm.mhtml?tourn_id=<% $tourn->id %>&judge_id=<% $jid %>&jpool_id=<% $jpool %>"
												>P</a>
											</span>
%										} elsif ($panel->{"paradigm"}{$jid}) {
											<span class="fifth centeralign" title="Paradigm">
												<a
													class  = "bluetext buttonwhite smaller padless marno semibold"
													target = "_blank"
													href   = "/index/paradigm.mhtml?judge_person_id=<% $panel->{"paradigm"}{$jid} %>"
												>P</a>
											</span>
%										} else {
											<span class='fifth'>
											</span>
%										}
%									}

									<span class="fourfifths grow nowrap padrightless">
%										if ($event_settings{no_anon_dashboard}) {
											<% $panel->{judgecode}{$jid} %>
											<% $panel->{judgenames}{$jid} %>
%										} elsif ($event_settings{anonymous_public}) {
											<% $panel->{judgecode}{$jid} %>
%										} else {
											<% $panel->{judgenames}{$jid} %>
%										}
									</span>
								</span>

%								if ($scores) {

									<span class="flexrow half">
<%perl>
										if ($event_type eq "speech"
											|| $event_type eq "congress"
										) {
</%perl>
											<span title="Rank" class="quarter semibold centeralign">
												<% $panel->{"scores"}{$jid}{"rank"} %>
											</span>

											<span class="threequarters" title="Points">
												<% $panel->{"scores"}{$jid}{"point"} %>
											</span>

%										} elsif ($event_type eq "wudc") {

											<span class="quarter marno semibold centeralign">
												<% $panel->{"scores"}{$jid}{"rank"} %>
											</span>

											<span class="threequarters">
%												foreach my $sid (sort keys %{$panel->{"students"}}) {
%													my $points = eval { return $panel->{"scores"}{$jid}{"point"}{$sid}; };
													<span class="full padvertless marno">
														<span class="half nospace">
															<% $panel->{"students"}{$sid}{"name"} %>
														</span>
														<span class="half nospace">
															<% $points %>
														</span>
													</span>
%												}
											</span>

%										} else {

											<span class="quarter semibold centeralign">
												<% $panel->{"scores"}{$jid}{"winloss"} %>
											</span>

											<span class="threequarters rightalign nospace padvertless padrightless">

%												if ($event_settings{team_points}) {

													<span class="full leftalign flexrow padvertless">
														<span class="half smaller">
															<% $panel->{"scores"}{$jid}{"point"} %>
														</span>
														<span class="half">
															<% $panel->{"scores"}{$jid}{"rank"} %>
															<% $panel->{"scores"}{$jid}{"refute"} %>
														</span>
													</span>
<%perl>

												} elsif ($panel->{"students"}) {

													foreach my $sid (sort keys %{$panel->{"students"}}) {

														unless (
															$panel->{"scores"}{$jid}{"point"}{$sid}
															|| $panel->{"scores"}{$jid}{"rank"}{$sid}
														) {
															next;
														}
</%perl>
														<span class="full leftalign flexrow padvertless">
															<span class="third smaller">
																<% $panel->{"students"}{$sid}{"name"} %>
															</span>
															<span class="third smaller">
																<% $panel->{"scores"}{$jid}{"point"}{$sid} %>
															</span>
															<span class="third">
																<% $panel->{"scores"}{$jid}{"rank"}{$sid} %>
																<% $panel->{"scores"}{$jid}{"refute"}{$sid} %>
															</span>
														</span>
%													}
%												}
											</span>
%										}

%									} else {

%									}

								</div>
%							}

							</span>
							<span class="seventh padright">
%								if ($rfd) {
									<a
										class  = "buttonwhite bluetext fa fa-sm fa-file-text-o hover padless"
										target = "_blank"
										title  = "RFD, Comments and Feedback"
										onClick = "toggleView('<% $panel_id %>_feedback');"
									></a>
%								}
							</span>
%						}
					</td>

%					if ($panel->{"round_number"} && $event_po_contest) {
						<td class="centeralign">
							<a
								class  = "greentext marno fa fa-check-square-o buttonwhite invert block fa-lg"
								target = "_blank"
								title  = "Vote for the Presiding Officer"
								href   = "/user/student/po_vote.mhtml?entry_id=<% $entry->id %>&panel_id=<% $panel_id %>"
							></a>
						</td>
%					}

				</tr>
				<tr
					hidden = true
					class  = "feedback"
					id     = "<% $panel_id %>_feedback"
				>
					<td colspan="50">

<%perl>

				foreach my $judge_id (sort keys %{$panel->{"judgenames"}}) {
					next unless $panel->{"scores"}{$judge_id}{"feedback"};

					unless ($panel->{"scores"}{$judge_id}{"approved"} || $panel->{"cbr"} < 1) {
						next;
					}

					my $rfd = $panel->{"scores"}{$judge_id}{"rfd"};
					my $comments = $panel->{"scores"}{$judge_id}{"comments"};
					my $speeches = $panel->{"scores"}{$judge_id}{"speeches"};
</%perl>

					<div
						class  = "full <% $notfirst++ ? "" : "bluebordertop" %>"
					>

					<span class="half nospace">
						<h5><% $panel->{"judgenames"}{$judge_id} %></h5>
					</span>

%					if ($panel->{"time"}{$judge_id}) {
						<span class="tenth semibold greentext biggish">
							Time: <% $panel->{"time"}{$judge_id} %>
						</span>

						<span class="twofifths rightalign smallish">
							<h6><% $panel->{"round_name"} %> Feedback</h6>
						</span>

%					} else {
						<span class="half nospace rightalign">
							<h6><% $panel->{"round_name"} %> Feedback</h6>
						</span>
%					}

%						if ($rfd) {
							<div class="full ltbordertop padvert">
								<p class="bluetext semibold bigger">Reason for Rank/Decision</p>
								<span class="ninetenths padleftmore">
									<% $rfd %>
								</span>
							</div>
%						}

%						if ($comments) {
							<div class="full ltbordertop padvert">
								<p class="bluetext semibold bigger">Comments for you</p>
								<span class="ninetenths padleftmore">
									<% $comments %>
								</span>
							</div>
%						}

<%perl>
						if ($speeches) {
							my $counter = 1;
							foreach my $speech_id (
								sort {$speeches->{$a}{"speech"} <=> $speeches->{$b}{"speech"}}
								keys %{$speeches}
							) {

								my $speech =  $panel->{"scores"}{$judge_id}{"speeches"}{$speech_id};
</%perl>
								<div class="full ltbordertop padvert">
									<span class="fifth semibold bluetext">
										Speech #<% $counter++ %>
									</span>

									<span class="fifth semibold bluetext">
										<% $speech->{"score"} ? $speech->{"score"}." points" : "" %>
									</span>

									<span class="threefifths rightalign smallish">
										<% $speech->{"topic"} %>
									</span>

									<span class="ninetenths padleftmore">
										<% $speech->{"comments"} %>
									</span>
								</div>

%							}
%						}

					</div>

%				}
				</td>
				</tr>
%			}

			</tbody>
		</table>

		</div>

%	}
