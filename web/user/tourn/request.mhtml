<%args>
	$person
	$session
	$defaults => undef
	$clone_from => undef
	$dbh
</%args>
<%init>

	my $tz = $person->tz;
	$tz = "UTC" unless $tz;

	my $request = $defaults->{"request"};

	my $clone = eval {

		my $cf;

		my $sth = $dbh->prepare("
			select
				tourn.id, tourn.name, tourn.webname,
				tourn.city, tourn.state, tourn.country
			from tourn
			where tourn.id = ?
		");

		my $ok;

		if ($clone_from) {

			$sth->execute($clone_from);
			my $tourns = $sth->fetchall_hash();

			if ($tourns && @{$tourns}) {
				$cf = shift @{$tourns};
			}

			my @perms = Tab::Permission->search(
				tourn  => $cf->{id},
				person => $person->id
			);

			foreach my $perm (@perms) {
				$ok++ if $perm->tag eq "owner";
				$ok++ if $perm->tag eq "tabber";
			}
		}

		if ($ok) {
			return $cf;
		}
		return;
	};

	unless ($clone > 0) {
		undef $clone;
	}

	my $no_districts = 1;

	if ($person->site_admin) {
		# Mostly for the LCQ
		undef $no_districts;
	}

	my $previous_sth = $dbh->prepare("
		select tourn.id, tourn.name, tourn.start
		from (tourn, permission)
		where 1=1
			and permission.person = ?
			and permission.tag in ('owner', 'tabber')
			and permission.tourn = tourn.id
		order by tourn.start DESC, tourn.name
	");

	$previous_sth->execute($person->id);
	my $previous = $previous_sth->fetchall_hash();

	my $startdt = eval {
		return Tab::dtme($request->{"start"}, $request->{"starttime"}, $tz);
	};
	my $enddt = eval {
		return Tab::dtme($request->{"end"}, $request->{"endtime"}, $tz);
	};

	my $defaultstart = DateTime->now();

	$defaultstart->set(
		hour   => 8,
		minute => 00,
		second => 00
	);

	my $defaultend = DateTime->now();

	$defaultend->set(
		hour   => 20,
		minute => 00,
		second => 00
	);

	my $sth = $dbh->prepare("
		select distinct tourn.webname, tourn.start
		from tourn, permission
		where tourn.id = permission.tourn
		and ( permission.tag = 'owner' or permission.tag = 'tabber')
		and permission.person = ?
	");

	$sth->execute($person->id);

	my %webnames;

	while (
		my ($past, $start) = $sth->fetchrow_array()
	) {
		$webnames{$past} = $start;
	}

</%init>

	<div class="main">

		<h2>Create your tournament on Tabroom</h2>

%		if ($request->{"error"}) {
			<p class="warning">
				<% $request->{"error"} %>
			</p>
%		}

		<form
			action = "deadlines.mhtml"
			method = "post"
		>

		<div class="<% $request->{"errors"}{"name"} ? "lirdrow" : "row" %> flexrow">
			<span class='fifth semibold padleft'>
				Tournament Name
			</span>

			<span class="fourfifths">
				<input
					type        = "text"
					name        = "name"
					size        = "64"
					value       = "<% $request->{"name"} || $clone->{name} %>"
					placeholder = "DO NOT include the year; it's automatically included where needed."
				>
			</span>
		</div>

		<div class="<% $request->{"errors"}{"webname"} ? "lirdrow" : "row" %> flexrow">
			<span class='fifth semibold padleft'>
				Web Name
			</span>

			<span class="twofifths">
%				if (%webnames) {
					<div class="full flexrow">
						<span class="third semibold bluetext marno">
							Existing
						</span>

						<span class="twothirds">
							<select
								name = "existing_webname"
								id   = "existing_webname"
							>
%									my $notfirst;
%									$notfirst++ if $request->{"webname"};
%									$notfirst++ if $clone && $clone->{webname};
%									foreach my $past (sort {$webnames{$b} cmp $webnames{$a}} keys %webnames) {
%										next unless $past;
										<option value="<% $past %>"
											<% $past eq $request->{"webname"}
												? "selected"
												: $clone && $clone->{webname} eq $past
													? "selected"
													:  ""
											%> <% $notfirst++ ? "" : "selected" %>
										><% $past %></option>
%									}
								<option value="">New Webname</option>
							</select>
						</span>
					</div>
%				}

				<div class='full ltbordertop flexrow'>
					<span class="third semibold bluetext marno">
						Or, New*
					</span>

					<span class="twothirds">
						<input
							type  = "text"
							name  = "webname"
							size  = "16"
							value = "<% $request->{"webname"} %>"
						>
					</span>
				</div>
			</span>

			<span class="twofifths bluetext centeralign">
				<div class="full marno padvertless semibold">
					* Lowercase letters, no spaces, no year.
				</div>

				<div class="full marno padvertless">
					Keep the same webname year to year.
				</div>

				<div class="full marno padvertless">
					Your tournament website will be
					<span class="inline redtext semibold">http://&lt;&lt;webname&gt;&gt;.tabroom.com</span>
				</div>
			</span>

		</div>

		<& "/funclib/datepicker.mas",
			from => "tournfrom",
			to   => "tournto"
		&>

		<div class="<% $request->{"errors"}{"dates"} ? "lirdrow" : "row flexrow" %>">
			<span class="fifth semibold padleft marvert">
				Dates
			</span>

			<span class='fourfifths flexrow wrap'>

				<div class='full flexrow padright'>
					<span class="sixth semibold bluetext marno">
						Start
					</span>

					<span class="quarter">
						<input
							type  = "text"
							name  = "start"
							id    = "tournfrom"
							size  = "16"
							value = "<% $request->{"start"} %>"
						>
					</span>
					<span class="centeralign tenth">
						at
					</span>
					<span class="fifth">
						<& "/funclib/timepicker.mas",
							size    => 6,
							name    => "starttime",
							time    => $startdt,
							default => $defaultstart
						&>
					</span>
				</div>

				<div class='full flexrow ltbordertop padright'>
					<span class="sixth semibold bluetext marno">
						End
					</span>

					<span class="quarter">
						<input
							type  = "text"
							name  = "end"
							id    = "tournto"
							value = "<% $request->{"end"} %>"
						>
					</span>

					<span class="tenth centeralign">
						at
					</span>

					<span class="fifth">
						<& "/funclib/timepicker.mas",
							size    => 6,
							name    => "endtime",
							time    => $enddt,
							default => $defaultend
						&>
					</span>
				</div>

				<div class="flexrow full ltbordertop
					<% $request->{"errors"}{"tz"} ? "borderred" : "" %>
				">
					<span class="sixth semibold bluetext">
						Time Zone
					</span>

					<span class="twofifths">
						<select name="tz">
							<& "/funclib/timezones.mas", tz => $tz &>
						</select>
					</span>
				</div>

			</span>
		</div>

		<script>

			function checkOnline() {
				$(".city").removeClass("hidden");

				if ($("#nsda_campus").prop("checked")) {
					$(".city").addClass("hidden");
				} else if ($("#online_other").prop("checked")) {
					$(".city").addClass("hidden");
				}
			}

			function checkImport() {
				if ($("#clone").val()) {
					$("#subbutton").attr("value", "Clone Previous Tournament");
					$("#reference").val("");
					$(".reference").addClass("hidden");
				} else if ($("#reference").val()) {
					$("#subbutton").attr("value", "Clone Previous Tournament");
					$(".clone").addClass("hidden");
				} else {
					$("#subbutton").attr("value", "Next: Set Deadlines");
					$(".reference").removeClass("hidden");
					$(".clone").removeClass("hidden");
				}

				fixVisual();
			}

			$(document).ready(function() {
				checkImport();
			});

		</script>

		<div class="row flexrow">

			<span class="fifth semibold padleft">
				Location
			</span>

			<span class="fourfifths">

				<div class="nospace full flexrow">
					<span class="sixth semibold bluetext">
						Mode
					</span>

					<span class="fifth hover">
						<label for="nope">
							<input
								type  = "radio"
								name  = "online"
								id    = "nope"
								value = "nope"
								<% $ARGS{"online"} eq "other" ? "checked" : "" %>
								onChange = "checkOnline()";
							>In Person
						</label>
					</span>

					<span class="fifth hover">
						<label for="nsda_campus">
							<input
								type  = "radio"
								name  = "online"
								id    = "nsda_campus"
								value = "nsda_campus"
								<% $ARGS{"online"} eq "nsda_campus" ? "checked" : "" %>
								onChange = "checkOnline()";
							>NSDA Campus
						</label>
					</span>

					<span class="fifth hover">
						<label for="other">
							<input
								type  = "radio"
								name  = "online"
								id    = "other"
								value = "other"
								<% $ARGS{"online"} eq "other" ? "checked" : "" %>
								onChange = "checkOnline()";
							>Other Online
						</label>
					</span>

					<span class="nospace grow padleft">
						<label for="nsda_campus">
							<a  href   = "https://www.speechanddebate.org/nsda-campus/"
								target = "_blank"
								class  = "bluetext plain full marno smallish semibold italic"
							>
								More about NSDA Campus <span class="fa fa-tiny fa-external-link"></span>
							</a>
						</label>
					</span>
				</div>

				<div class="ltbordertop nospace city full
					<% $request->{"errors"}{"city"} ? "borderred" : "" %>
				">
					<span class="sixth semibold bluetext">
						City
					</span>

					<span class="twothirds">
						<input
							type  = "text"
							name  = "city"
							size  = "32"
							value = "<% $request->{"city"} ? $request->{"city"} : $clone->{city} || $person->city %>"
						>
					</span>
				</div>

				<div class="nospace full ltbordertop">
					<span class="sixth semibold bluetext">
						State
						<% $clone->{state} %>
					</span>

					<span class="twothirds">
						<select name="state">
							<&
								"/funclib/state_select.mas",
								state  => $request->{"state"} || $clone->{state} || $person->state,
								person => $person
							&>
						</select>
					</span>
				</div>

				<div class="nospace full ltbordertop">
					<span class="sixth semibold bluetext">
						Country
					</span>

					<span class="twothirds">
						<select
							name  = "country"
							class = "fixedbig"
						>
							<&
								"/funclib/country_select.mas",
								country  => $request->{"country"} || $clone->{country} || $person->country,
								person  => $person
							&>
						</select>
					</span>
				</div>
			</span>
		</div>

%		if (scalar @{$previous} > 0 || $person->site_admin) {

			<div class="row flexrow clone">
				<span class="quarter semibold padleft">
					Clone setup from
				</span>

				<span class="half grow padrightmore">
					<select
						id       = "clone"
						name     = "clone"
						onChange = "checkImport();"
					>
						<option value="">None: Create tournament from scratch</option>

%						foreach my $tourn (@{$previous}) {
							<option
								value="<% $tourn->{id} %>"
								<% $request->{'clone'} == $tourn->{id} ? "selected" : $clone && $clone == $tourn->{id} ? "selected" : "" %>
							><% substr($tourn->{start}, 0, 4) %> <% $tourn->{name} %></option>
%						}
					</select>
				</span>

%				if ($person->site_admin) {
					<span class="quarter centeralign padrightmore padleftmore">
						<input
							type        = "number"
							id          = "clone_id"
							name        = "clone_id"
							class       = "sizeme"
							placeholder = "or, ID#"
							value       = "<% $clone->{id} %>"
						>
					</span>
%				}
			</div>
%		}

<%perl>
		my $reference_sth = $dbh->prepare("
			select tourn.id, tourn.name,
				label.value label

			from (tourn, tourn_setting reference)
				left join tourn_setting label
					on label.tourn = tourn.id
					and label.tag = 'reference_label'

			where 1=1
				and tourn.id = reference.tourn
				and reference.tag = 'reference'
				and tourn.hidden = 0
			order by label.value, tourn.name
		");

		$reference_sth->execute();
		my $references = $reference_sth->fetchall_hash();

		if (scalar @{$references} > 0) {
</%perl>

			<div class="row flexrow reference">
				<span class="quarter semibold padleft">
					Or, Use Reference Tournament:
				</span>
				<span class="threequarters padrightmore">
					<select
						id       = "reference"
						name     = "reference"
						onChange = "checkImport();"
					>
						<option value="">None: Create tournament from scratch</option>
%						foreach my $tourn (@{$references}) {
							<option
								value="<% $tourn->{id} %>"
								<% $request->{'reference'} == $tourn->{id} ? "selected" : "" %>
							><% $tourn->{label} || $tourn->{name} %></option>
%						}
					</select>
				</span>
			</div>
%		}

		<label for="test">
			<div class="hover row <% $request->{"errors"}{"test"} ? "redtext borderred" : "" %>">
				<span class="fifth semibold padleft">
					Test Tournament
				</span>

				<span class="fifth centeralign">
					<input
						type  = "checkbox"
						name  = "test"
						class = "check"
						value = "-1"
						id    = "test"
					>
				</span>

				<span class="threefifths bluetext">
%					if ($request->{"errors"}{"test"}) {
						<div class="full marno padvertless redtext">
							Your tournament has "test" in the name.
							Confirm that no, really, it is not a test tournament.
						</div>
%					}
					<div class="full marno padvertless padtop">
						A test tournament is useful to test &amp; learn how to use Tabroom.com.
						Test tournaments allow you to quickly create fake entries &amp; results.
					</div>
					<div class="full marno padvertless padbottom">
						Test tournaments do not appear on the front page or for
						registration, and results do not publish.  You do not
						have to pay to run a test tournament.
					</div>
				</span>
			</div>
		</label>

		<div class="liblrow rightalign">
			<span class="twofifths centeralign">
				<input
					id    = "subbutton"
					type  = "submit"
					value = "Next: Set Deadlines"
				>
			</span>
		</div>
		</form>

	</div>

	<div class="menu">

		<div class="sidenote">

			<h4>Don't register entries here</h4>

			<p title="Yes, people do this.  No, I don't get it either">
				This area is for tournament directors.  Do not use this form if
				you are trying to register for someone else's tournament.  Go
				back to your <a class="inline redtext"
				href="/user/home.mhtml">home screen</a> and if the tournament
				does not appear, join the circuit the tournament is in.  Or
				find the tournament on the <a class="inline redtext"
				href="/">Tabroom home page</a>.

			</p>

			<h4 class="padtopmore">Tournament directors</h4>

			<p>
				Once you set up your tournament, a request will be sent to
				the administrators of your circuit for approval.  After they
				approve the tournament, it'll appear on the schedule for the
				circuit and be open for entries on this website on the date you
				set.
			</p>

			<p>
				Not all options are covered by the pre-approval forms; be sure
				to go into the admin pages once it's approved and create
				divisions and judge categories and a schedule etc.
			</p>

		</div>

	</div>

