<%args>
	$dbh
	$person
	$person_settings
	$panel_id => undef
	$judge_id => undef
	$errs     => undef
</%args>
<%init>

	unless ($panel_id && $judge_id) {
		my $err = "I didn't get both a judge and a ballot record";
		$m->redirect("/user/home.mhtml?err=$err");
	}


	my $panel = Tab::Panel->retrieve($panel_id);
	$m->abort unless $panel;
	$m->comp("/funclib/panel_dedupe.mas", panel => $panel);

	my $judge = Tab::Judge->retrieve($judge_id);

	my $round    = $panel->round;
	my $event    = $round->event;
	my $category = $event->category;
	my $tourn    = $category->tourn;

	my %event_settings = $event->all_settings;
	my %round_settings = $round->all_settings;

	if ($round_settings{"use_normal_rooms"}) {
		$event_settings{"online_mode"} = "sync";
	}

	my $event_type = $event->type;

	my %tb_types = $m->comp(
		"/funclib/tiebreak_types.mas",
		round => $round
	);

	if ($event_type eq "wsdc" && $tb_types{"point"}) {
		$m->redirect("wsdc_ballot.mhtml?panel_id=".$panel->id."&judge_id=".$judge->id);
	}

	my %tourn_settings = $tourn->all_settings();

	if ($tourn_settings{"legion"}) {
		$m->redirect("legion_ballot.mhtml?panel_id=".$panel->id."&judge_id=".$judge->id);
	}

	my $ballot_header;

	if ($tourn_settings{"nsda_district"}
		|| $tourn_settings{"nsda_nats"}
		|| $tourn_settings{"nsda_ms_nats"}
		|| $tourn_settings{"nsda_billing"}
	) {

		my $nsda_district_ballot_header
			= Tab::TabroomSetting->search(
				tag   => "nsda_district_ballot_header"
			)->first;

		if ($nsda_district_ballot_header) {
			$ballot_header = $nsda_district_ballot_header->value_text();
		}
	}

	my $tourn_logo = $tourn_settings{"logo"};
	my %category_settings = $category->all_settings;

	if ($event_settings{"no_judge_violations"}) {
		undef $tb_types{"tv"};
	}

	my $now = DateTime->now();

    my %max_subpoints = ();
    my %min_subpoints = ();

    my @scores = ("Style", "Content", "Strategy", "POI");

    foreach my $key (@scores) {
        $min_subpoints{$key} = $event_settings{"min_".lc($key)."_points"};
        $max_subpoints{$key} = $event_settings{"max_".lc($key)."_points"};
        $min_subpoints{$key} = 0 unless $min_subpoints{$key};
        $min_subpoints{"total"} += $min_subpoints{$key} unless $key eq "POI";
        $max_subpoints{"total"} += $max_subpoints{$key} unless $key eq "POI";
    }

    my $trash = pop @scores unless $max_subpoints{"POI"};
	my $no_lpw++ if $event_settings{"no_lpw"};

	my $start_bias = DateTime->new(
		year      => 2021,
		month     => 8,
		day       => 1,
		hour      => 0,
		minute    => 0,
		second    => 0,
		time_zone => "UTC"
	);

	if (
		($tourn->start > $start_bias || $tourn_settings{"bias_saved"})
		&& (not defined $tourn_settings{"bias_statement"})
		&& (not defined $ballot_header)
	) {

		$tourn_settings{"bias_statement"} = eval {

			my $bias_statement = Tab::TabroomSetting->search(
				tag   => "bias_statement"
			)->first;

			my ($yes, $no) = split(/Please/, $bias_statement->value_text);

			$yes =~ s/\R//g;
			$yes =~ s/\r//g;
			$yes =~ s/\n//g;
			$yes =~ s/'&nbsp;'//g;
			$yes =~ s/<p>//g;
			$yes =~ s/<\/p>//g;

			chomp $yes;
			return $yes;
		}

	} else {

		my $yes = $tourn_settings{"bias_statement"};
		$yes =~ s/\R//g;
		$yes =~ s/\r//g;
		$yes =~ s/\n//g;
		$yes =~ s/'&nbsp;'//g;
		$yes =~ s/<p>//g;
		$yes =~ s/<\/p>//g;
		chomp $yes;
		$tourn_settings{"bias_statement"} = $yes;
	}

	if ($event_type eq 'debate') {
		undef($category_settings{"ballot_entry_names"});
		undef($category_settings{"ballot_entry_first_names"});
		undef($category_settings{"ballot_school_names"});
	}

	my $ballot_entry_name       = $category_settings{"ballot_entry_names"} || $event_settings{"ballot_names"};
	my $ballot_entry_first_name = $category_settings{"ballot_entry_first_names"} || $event_settings{"ballot_first_names"};
	my $ballot_school_code      = $category_settings{"ballot_school_codes"};
	my $ballot_school_name      = $category_settings{"ballot_school_names"};

	my $flip_status = $panel->setting('flip_status');
	my $show_async = $panel->setting("show_async");
	my $share_room = $panel->setting("share");

	undef $category_settings{"ballot_entry_titles"} unless $event_type eq "speech";

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
	$now->set_time_zone($tz);

	my $start = $round->start_time;
	$start = $round->timeslot->start unless $start;
	$start->set_time_zone($tz);

	my $decision_deadline;
	my $decision_time;

	if ($round->type eq "elim" || $round->type eq "final") {
		$decision_deadline = $event_settings{"elim_decision_deadline"};
	} else {
		$decision_deadline = $event_settings{"prelim_decision_deadline"};
	}

	if ($decision_deadline) {
		$decision_time = $start->clone;
		$decision_time->add("minutes", $decision_deadline);
	}

	if ($event_settings{"flight_offset"}) {
		foreach my $flight (2 .. $panel->flight) {
			$decision_time->add('minutes', $event_settings{"flight_offset"}) if $decision_time;
			$start->add('minutes', $event_settings{"flight_offset"});
		}
	}

	my $time_left;

	if ($decision_time) {
		$time_left = ($decision_time - $now);
	}

	my %bq_stuff;

	if ($event_settings{"big_questions"}) {

        $bq_stuff{bqd_logo}  = "/lib/images/big-questions-logo.jpg";
        $bq_stuff{nsda_logo} = "/lib/images/nsda-logo-printable.png";
        $bq_stuff{jtf_logo}  = "/lib/images/templeton-logo.png";

        $bq_stuff{resolution} = Tab::TabroomSetting->search(
            tag   => "bqd_resolution"
        )->first;

        $bq_stuff{resolution} = $m->comp("/funclib/print_format.mas",
            message =>  $bq_stuff{resolution}->value_text
        ) if $bq_stuff{resolution};

        $bq_stuff{rules} = Tab::TabroomSetting->search(
            tag   => "bqd_rules"
        )->first;

        $bq_stuff{rules} = $bq_stuff{rules}->value_text if $bq_stuff{rules};
		$bq_stuff{rules} =~ s/\n/<br \/>/g;

		my $st = Tab::TabroomSetting->search(
            tag   => "bqd_speech_times"
        )->first;

		$event_settings{"speech_times"} = $st->value_text;
	}

	my $wudc++ if $event_type eq "wudc";

	unless ($panel && $judge) {
		my $err = "No ballots found for that judge and that panel.";
		$m->redirect("/user/home.mhtml?err=$err");
	}

	my $notme;

	if ($judge->person->id == $person->id) {

	} elsif ($person->site_admin) {
		$notme++;
	} else {
		my $err = "You are not authorized to enter ballots for that judge.";
		$m->redirect("/user/home.mhtml?err=$err")
	}

	unless ($round->protocol) {
		my $err = "That tournament does not have tiebreakers set.";
		$err .= " Please contact the tournament tab staff to let them know.";
		$m->redirect("/user/judge/panels.mhtml?err=$err");
	}

	my @ballots = sort {$a->side <=> $b->side} Tab::Ballot->search(
		judge => $judge->id,
		panel => $panel->id
	);

	if (
		$event_type eq "speech"
		|| $event_settings{"no_side_constraints"}
		|| $event_settings{"sort_precedence"}
	) {
		@ballots = sort {$a->speakerorder <=> $b->speakerorder} @ballots;
	}

	my @clean;
	my $chair;
	my $audit = 1;
	my $i_can_haz_doubled;
	my $chart;

	foreach my $ballot (@ballots) {

		next unless $ballot->entry > 0;
		$chart++ if $ballot->seat;

		unless ($chair) {
			$chair++ if $ballot->chair;
		}

		undef $audit unless $ballot->audit;
		push @clean, $ballot;
	}

	@ballots = @clean;
	unless (@ballots) {
		my $err = "That judge does not judge in that room.";
		$m->redirect("/user/home.mhtml?err=$err");
	}

	my %entries;

	my $entry_sth = $dbh->prepare("
		select entry.id, entry.code, entry.name, entry.active, entry.dropped,
			school.code, school.name, region.code,
			ballot_notes.value_text,
			title.value,
			positions.value_text,
			video_link.value_text
		from (entry, ballot, event)
			left join school on entry.school = school.id
			left join region on school.region = region.id
			left join entry_setting ballot_notes on ballot_notes.entry = entry.id and ballot_notes.tag = 'ballot_notes'
			left join entry_setting title on title.entry = entry.id and title.tag = 'title'
			left join entry_setting video_link on video_link.entry = entry.id and video_link.tag = 'video_link'
			left join entry_setting positions on positions.entry = entry.id and positions.tag = 'positions'
		where ballot.panel = ?
			and ballot.entry = entry.id
			and entry.event = event.id
			and (entry.active = 1 OR event.type = 'debate' OR event.type = 'wsdc')
	");

	$entry_sth->execute($panel_id);

	while (
		my (
			$id, $code, $name, $active, $dropped,
				$scode, $sname, $rcode,
				$notes,
				$title,
				$positions,
				$video_link
		) = $entry_sth->fetchrow_array()
	) {

		$entries{$id}{"code"}    = $code;
		$entries{$id}{"name"}    = $name;
		$entries{$id}{"active"}  = $active;
		$entries{$id}{"dropped"} = $dropped;
		$entries{$id}{"notes"}   = $notes;
		$entries{$id}{"title"}   = $title;

		$entries{$id}{"school_code"} = $scode;
		$entries{$id}{"region_code"} = $rcode;
		$entries{$id}{"school_name"} = $sname;
		$entries{$id}{"video_link"}  = $video_link;

		$entries{$id}{"positions"} = eval {
			return JSON::decode_json($positions);
		};
	}

	$entry_sth->finish();

	unless ($notme) {

		my $ballot_sth = $dbh->prepare("
			update ballot set started_by = ?, judge_started = NOW()
				where panel = ?
				and judge = ?
				and (judge_started IS NULL OR judge_started = '0000-00-00 00:00:00')
		");

		$ballot_sth->execute($person->id, $panel->id, $judge->id);
		$ballot_sth->finish();
	}

	my $team_points++ if $event_settings{"team_points"};
	$team_points++ if $event_type eq "speech";
	$team_points++ if $event_type eq "congress";

	undef $tb_types{"rank"} if $wudc;

	my @panel_students = $m->comp(
		'/funclib/panel_students.mas',
		panel => $panel
	);

	my $forfeit++ if $event_type eq "speech"
		&& ($round->protocol->setting("forfeits_never_break")
			|| $round->protocol->setting("forfeits_rank_last")
		);

	my $max_points = $event_settings{"max_points"};
	my $min_points = $event_settings{"min_points"};

	my %entry_scores = ();
	my $po_points;

	if ($event_type eq 'congress') {

		$min_points = 0 unless $min_points;
		$max_points = 6 unless $max_points;

		my @scores = $m->comp(
			'/funclib/judge_scores.mas',
			judge    => $judge,
			timeslot => $round->timeslot,
			tag      => "speech"
		);

		foreach my $score (@scores) {
			$entry_scores{$score->entryid}{$score->speech} = $score;
			$entry_scores{$score->entryid}{"total"} += $score->value;
			$entry_scores{$score->entryid}{"count"}++;
		}

		if ( (not defined $chair) && $event_settings{"enforce_equal_speeches"}) {

			# Check to see if other judges have the same number of scores for
			# each competitor

			my %other_entry_scores_count;

			# Get other judges from panel
			my @judges = $m->comp(
				'/funclib/panel_judges.mas',
				panel 	=> $panel
			);

			foreach my $other_judge (@judges) {
				next if $other_judge == $judge;

				# Get scores for this judge
				my @other_scores = $m->comp(
					'/funclib/judge_scores.mas',
					judge    => $other_judge,
					timeslot => $round->timeslot,
					tag      => "speech"
				);

				# Count scores for each judge
				foreach my $other_score (@other_scores) {
					$other_entry_scores_count{$other_judge->id}{$other_score->entryid}++;
					# This will create the entry for the current judge if the current judge has no score
					$entry_scores{$other_score->entryid}{"count"} = 0 unless exists $entry_scores{$other_score->entryid}{"count"};
				}
			}

			# Compare number of other judge scores to this judge
			foreach my $entryid (keys %entry_scores) {
				foreach my $other_judge (@judges) {
					next if $other_judge == $judge;
					if ($entry_scores{$entryid}{"count"} != $other_entry_scores_count{$other_judge->id}{$entryid}) {

						# Get judge name, student code, adjust scores
						my $other_judge_name = $other_judge->first." ".$other_judge->last;
						my $other_score = $other_entry_scores_count{$other_judge->id}{$entryid};
						$other_score = 0 if $other_score == undef;
						my $student_code;
						foreach my $student (@panel_students) {
							if ($student->entry == $entryid) {
								$student_code = $student->code;
							}
						}

						# Create error message
						$errs .= "Warning! Judge ".$other_judge_name." has ".$other_score
						." scores for competitor ".$student_code." while you have ".$entry_scores{$entryid}{"count"}
						."!  Please make sure you agree on the number of speeches for each competitor!<br>";
					}
				}
			}
		}

		if ($event_settings{"po_points_required"}) {
			my @po = $m->comp(
				'/funclib/judge_scores.mas',
				judge    => $judge,
				timeslot => $round->timeslot,
				tag      => "po"
			);

			foreach my $po (@po) {
				$entry_scores{$po->entryid}{"po"}++;
				if ($entry_scores{$po->entryid}{"total"} > 0) {
					$po_points++;
				}
			}
		}
	} elsif ($event_type eq 'speech') {
		$min_points = 0 unless $min_points;
		$max_points = 100 unless $max_points;
	} else {
		$min_points = 0 unless $min_points;
		$max_points = 30 unless $max_points;
	}

	my $increments = $event_settings{"point_increments"};

	my $step = "1" if $increments eq "whole";
	$step = "0.5"  if $increments eq "half";
	$step = "0.25" if $increments eq "fourths";
	$step = "0.1"  if $increments eq "tenths";

	my $sidelocks;
	my $locked;

	if ($event->type eq "debate" || $event->type eq "wsdc") {

		if ($event_settings{"no_side_constraints"}
			|| (
				(
					$round->type eq "elim"
					|| $round->type eq "final"
					|| $round->type eq "runoff"
				) && (not defined $event_settings{sidelock_elims})
			)
		) {
			$locked =  $m->comp("/funclib/round_elim_dueaff.mas", panel => $panel);
		} else {
			$locked++;
		}
	}
	if ($event_type eq "mock_trial") {
		$locked++;
	}


	my $pronouns_sth = $dbh->prepare("
		select
			entry.id, entry.code,
			student.id student,
			student.first, student.middle, student.last,
			person.pronoun
		from (entry, entry_student es, student, ballot, person)
		where ballot.panel = ?
			and ballot.entry = entry.id
			and entry.id = es.entry
			and es.student = student.id
			and student.person = person.id
			and person.pronoun IS NOT NULL
			and person.pronoun != ''
			and person.pronoun != '0'
		group by person.id
		order by person.last
	");

	$pronouns_sth->execute($panel->id);
	my $pronouns = $pronouns_sth->fetchall_hash();
	my %pronoun_by_id;

	if ($pronouns) {
		%pronoun_by_id = map {$_->{student} => $_->{pronoun}} @{$pronouns};
	}

</%init>

	<& "/funclib/editor.mas", half => "1" &>

	<script>

%		if ($event_settings{"ballot_rubric"}) {
			const totalRubric = (ballotId) => {

				let totalPoints = 0;

				$(`.${ballotId}_rubric`).each( (index, item) => {
					let localPoints = parseInt($(item).val());

					const maxPoints = parseInt($(item).attr('max'));
					const minPoints = parseInt($(item).attr('min'));

					if (! isNaN(localPoints)) {

						if (localPoints > maxPoints) {
							localPoints = maxPoints;
							$(item).val(localPoints);
						}

						if (localPoints < minPoints) {
							localPoints = minPoints;
							$(item).val(localPoints);
						}

						totalPoints += localPoints;
					}
				});

				$(`#total_${ballotId}_points`).text(totalPoints);
				$(`#${ballotId}_points`).val(totalPoints);
			};
%		}


		function changeSides(sideChoice) {
			const side = $(sideChoice).val();
			const ballot = $(sideChoice).attr('ballot');
			$(`#${ballot}`).attr('side', side);

			$(`.sidepicker`).each( (index, item) => {
				const secondBallot = $(item).attr('ballot');
				if (secondBallot !== ballot) {
					const currentSide = $(item).val();

					let secondSide = 1;
					if (side == 1) {
						secondSide = 2;
					}

					if (currentSide !== secondSide) {
						if (secondBallot !== ballot) {
							$(item).val(secondSide);
							$(`#${secondBallot}`).attr('side', secondSide);
						}
					}
				}
			});
		}

%		if ($event_settings{"flip_online"}) {

			function checkFlipSides() {

				const url = `<% $Tab::indexcards_url %>/user/judge/<% $judge->id %>/section/<% $panel->id %>/getBallotSides`;

				$.ajax({
					type : 'GET',
					url,
					data        : {},
					crossDomain : true,
					xhrFields   : {
						withCredentials: true
					},
					success : function(data) {

						const affSide = $(`#${data.affBallot}_side`).attr("side");
						const negSide = $(`#${data.negBallot}_side`).attr("side");

						if (affSide === '1' && negSide === '2') {
							return;
						} else if (data.affBallot && data.negBallot) {
							window.location.reload();
							alertify.error('Your ballot had the incorrect sides for this debate, likely because it was opened before the flip was complete.  It has been refreshed to fix this issue');
						}
					}
				});
			}

			$(document).ready(function () {
				checkFlipSides();
				// Check access every two minutes
				setInterval(checkFlipSides, 120000);
			});
%		}

		function checkAccess() {
			const url = `<% $Tab::indexcards_url %>/user/judge/<% $judge->id %>/section/<% $panel->id %>/checkBallotAccess`;
			const chair = <% $chair || 'false' %>;
			const eventType = '<% $event_type %>';

			if (chair && eventType === 'congress') {
				return;
			}

			$.ajax({
				type : 'POST',
				url,
				data        : {},
				crossDomain : true,
				xhrFields   : {
					withCredentials: true
				},
				success : function(data) {
					if (data.refresh) {
						window.location.replace(`/user/home.mhtml?err=${data.message}`);
					}
				}
			});
		};

		function saveComments(auto) {

			let message      = "Save result: ";
			let errors       = "Errors: ";
			let onlineStatus = true;

			$(".comment_box").each(function() {

				var ballotID  = $(this).attr("ballot_id");
				var ballotTag = $(this).attr("id");

				var textValue = tinymce.get(ballotTag).getContent()
				var commentType = $(this).attr('type');

				$.ajax({
					type : 'POST',
					url  : 'comment_save.mhtml',
					crossDomain : true,
					xhrFields   : {
						withCredentials: true
					},
					data : {
						ballot_id : ballotID,
						text	  : textValue,
						type	  : commentType,
						auto	  : auto
					},
					success : function(data) {
						if (data) {
							if (data.message) {
								if (data.error) {
									errors = errors + data.message;
								} else {
									message = message + data.message;
									$(`.online_status`).addClass("hidden");
								}
							} else {
								console.log(data);
								alertify.warning("An error condition was tripped.");
							}
						}
						return;
					},
					error : function(err) {

						if (err.status !== 200 && onlineStatus === true) {
							onlineStatus = false;
							$(`.online_status`).removeClass("hidden");
							errors = 'Comment save failed.';
							displayResult(errors);
						}
					}
				});
			});

			alertify.notify(`All comments and feedback were saved`, "custom");

		}

		function displayResult(errors) {
			if (errors !== "Errors: ") {
				alertify.error("Errors were encountered saving; is your network connection active?");
			} else {
				alertify.dismissAll();
				alertify.notify(`All comments and feedback were saved`, "custom");
			}
			return;
		}

		function swapOrder(orderSelector) {

			var ballotID = $(orderSelector).attr("ballot_id");
			var selectedValue = $("#"+orderSelector.id+" option:selected").val();

			if (ballotID && selectedValue) {

				var otherValue = 2;

				if (selectedValue == otherValue) {
					otherValue--;
				}

				$(".speakerorder").each( function() {
					if (this.id != ballotID+"_speakerorder") {
						$("#"+this.id+" option").prop('selected', false);
						$("#"+this.id+" option[value="+otherValue+"]").prop('selected', true);
					}
					$(".orderpick").prop("disabled", true);
				});

				sortTable();
			}
			return;
		}

		function sortTable() {

			var rows = $(".ballotrows").get();

			rows.sort(function(a, b) {
				var A = $("#"+a.id+"_speakerorder option:selected").val();
				var B = $("#"+b.id+"_speakerorder option:selected").val();

				if (A < B) {
					return -1;
				}

				if (A > B) {
					return 1;
				}
				return 0;
			});

			$.each(rows, function(index, row) {
				$("#ballottable").append(row);
				$(row).toggleClass("even");
				$(row).toggleClass("odd");
			});

			return;
		}

		function doneSwitch(which) {
			$('.commentary').addClass("hidden");
			$('#box_'+which).removeClass("hidden");
			$("li.commentzing").removeClass("selected");
			$('#header_'+which).addClass("selected");
			saveComments(true);
		}

		function switchBox(selectTarget) {
			$('.commentary').addClass("hidden");
			$('#box_'+$(selectTarget).val()).removeClass("hidden");
			saveComments(true);
		}

		function speakerTotal(studentID, entryID) {

			var pointTotal = 0;

			$("."+studentID).each(function() {

                var Float = parseFloat(this.value);

                if (Float) {

                    if (Float > this.max) {

						alertify.error(
							Float+" is over the maximum points allowed.  The maximum is "+this.max
						);

						$(this).val("");
						this.focus();

                    } else if (Float < this.min) {

                        alertify.error(
							Float+" is below the minimum points allowed.  The minimum is "+this.min
						);

						$(this).val("");
						this.focus();

                    } else {

                        pointTotal += Float;

                    }
				}

			});

			$("#"+entryID+studentID+"_points")
				.val(pointTotal)
				.change(function() {
					checkTotal(studentID, entryID);
					teamTotal(entryID);
				})
				.trigger("change");
		}

		function checkTotal(studentID, entryID) {

			$("."+studentID+"_row").removeClass("lird");
			$("#"+studentID+"_warning").addClass("hidden");

			var boxTotal = $("#"+studentID+"_points").val();
			var pointTotal = 0;

			$("."+studentID).each(function() {

				var Float = parseFloat(this.value);

				if (Float) {
					pointTotal += Float;
				}

			});

			if (pointTotal != boxTotal) {
				$("."+studentID+"_row").addClass("lird");
				$("#"+studentID+"_warning").removeClass("hidden");
				$("#"+studentID+"_warning").html("Total: "+pointTotal+" vs "+boxTotal);
			}

			checkLPW();
		}

		function teamTotal(entryID) {

			var teamTotal = 0;

			$("."+entryID).each(function() {
				var Float = parseFloat(this.value);
				if (Float) {
					teamTotal += Float;
				}
			});

			$("#"+entryID+"_total").val(teamTotal);
		}

		function checkSide() {

			const winner = $('#winner').val();
			const winnerSide = $(`#${winner}`).attr('side');

			if (!winnerSide) {
				return;
			}

			const markedSide = $(`#winner_${winnerSide}`).prop('checked');

			if (markedSide === false) {
				$(`.winner_side`).prop('checked', false);
				$(`#winner`).val('');
				fixVisual();

				alertify.error(
					"Your chosen winner and sides were mismatched.  Please try again"
				);
			}
		}

		function checkLPW() {

			$(`.submit_row`).removeClass('hidden');
			$(`.winner_side`).prop('checked', false);
			var winner = $('#winner').val();

			if (winner) {

				var mostPoints = 0;
				var mostBallot = 0;
				const ballotPoints = {};
				const ballotCount = {};

				$(".totals").each( function() {

					const localPoints = parseFloat($(this).val());
					const ballotId = $(this).attr("ballotID");

					if (!ballotPoints[ballotId]) {
						ballotPoints[ballotId] = 0;
						ballotCount[ballotId] = 0;
					}

					ballotPoints[ballotId] += localPoints || 0;

					if (localPoints > 0) {
						ballotCount[ballotId]++;
					}
				});

				const best = {
					ballotId  : 0,
					altBallot : 0,
					tie       : false,
				};

				let hello = 0;
				let worstPoints = 999;

				Object.keys(ballotPoints).forEach( (ballotId) => {

					if (ballotCount[ballotId] > 0) {
						ballotPoints[ballotId] = (ballotPoints[ballotId] / ballotCount[ballotId]);
					}

					if (ballotPoints[ballotId] === best.current) {
						best.tie = true;
					}

					if (worstPoints > ballotPoints[ballotId]) {
						worstPoints = ballotPoints[ballotId];
					}

					if (
						ballotPoints[ballotId] > best.current
						|| (typeof best.current === 'undefined')
					) {
						best.current = ballotPoints[ballotId];
						best.ballotId = ballotId;
						return;
					}

%					# Woof this is ugly
%					if ($event_settings{"point_ties"}) {
						if (ballotPoints[ballotId] === best.current) {
							best.altBallot = ballotId;
						}
%					}
				});

				if (<% $min_points %> > 0 && worstPoints && worstPoints < <% $min_points %> ) {

%					if ($team_points) {
						alertify.error("You must give points above <% $min_points %> to each entry");
%					} else {
						alertify.error("You must give points above <% $min_points %> to each speaker");
%					}

					$(`#winner`).val(0);
					fixVisual();
				} else if (best.tie) {

				} else if (
					winner > 0 &&
					(
						best.ballotId !== winner
						&& best.altBallot !== winner
					)
				) {

%					if ($event_settings{"no_lpw"} && $tb_types{"point"}) {
						alertify.error(
							"You gave the winning team fewer points.  Please correct."
						);

						$("#winbox").addClass("lird");

						Object.keys(ballotPoints).forEach( (ballotId) => {
							$(`#${ballotId}_lpw`).text(`${ballotPoints[ballotId]} avg pts`);
						});

%					} elsif ($tb_types{'point'}) {

						$("#lpwbox").removeClass("hidden");

						Object.keys(ballotPoints).forEach( (ballotId) => {
							$(`#${ballotId}_lpw`).text(`${ballotPoints[ballotId]} avg pts`);
						});

						if ($(`#lpw`).prop('checked')) {
							$(`.submit_row`).removeClass('hidden');
						} else {
							$(`.submit_row`).addClass('hidden');
						}
%					}

				} else {
					$(`#lpw`).prop('checked', false);
					$("#lpwbox").addClass("hidden");
					$("#winbox").removeClass("lird");
					$(`.submit_row`).removeClass('hidden');
				}

			} else {
				$("#lpwbox").addClass("hidden");
				$("#winbox").removeClass("lird");
				$(`.submit_row`).removeClass('hidden');
			}
		}

		$(document).ready(function () {

			$("table").trigger("applyWidgets");
			sortTable();
			checkAccess();

			// Check access every two minutes
			setInterval(checkAccess, 120000);
			checkLPW();

%			if ($event_settings{"ballot_rubric"}) {
%				foreach my $ballot (@ballots) {
					totalRubric(<% $ballot->id %>)
%				}
%			}

			// I hate things like this so much
			setTimeout(function(){
				doneSwitch('rfd');
			}, 1000);

			fixVisual();
		});

	</script>

%	my $segment = "third";
%	$segment = "quarter" if $event_settings{'big_questions'};

	<div class="main ballotmain">

		<div class="ltborderbottom flexrow">
%			if ($event_settings{'big_questions'}) {
				<span class="<% $segment %> logo">
					<img
						src   = "<% $bq_stuff{bqd_logo} %>"
						alt   = "<% $bq_stuff{bqd_logo} %>"
						style = "max-width: 164px;"/
					>
				</span>
%			}

			<span class="<% $segment %>">
%				if ($event_settings{"online_mode"} && $event_settings{"online_mode"} ne "async") {
%					if ($event_settings{"online_mode"} ne "sync" || ($panel->room && $panel->room->url) ) {
						<& "/funclib/online_room.mas",
							panel  => $panel,
							person => $person
						&>
%					}
					<p class="bluetext biggish semibold">
%						if ($event_settings{"online_mode"} eq "sync") {
							<% $panel->room > 0 ? "Room ".$panel->room->name : "Room Link" %>
%						}
					</p>
%				} else {
					<p class="bluetext biggish semibold">
						<% $panel->room > 0
							? "Room: ". $panel->room->name
							: "NO ROOM ASSIGNED"
						%>
					</p>
%				}
			</span>

			<span class="<% $segment %> centeralign">
				<h4 class="graytext">
					<% $event_type ne "mock_trial" ? $event->abbr : "" %>
					<% $round->realname %>
					<% $round->flighted > 1 ? "Flt ".$panel->flight : "" %>
				</h4>
			</span>

			<span class="<% $segment %> rightalign top"
				title="Many will judge, but I like you the best!">
				<h5>
					<% $judge->code %>
					<% $judge->first %>
					<% $judge->middle %>
					<% $judge->last %>
				</h5>
			</span>
		</div>

%		if ($chair) {
			<div class="centeralign">
				<h6 class="semibold graytext centeralign semibold padtop">
					<% $event_settings{'chair_label'} ?
						uc($event_settings{'chair_label'})
						: $event_type eq "congress"
							? "PARLIAMENTARIAN"
							: "CHAIR JUDGE"
					%>
				</h6>
			</div>
%		}

%		if ($round_settings{"notes"}) {
			<p class="warning padleft bluebordertop padtop">
				Note: <% $round_settings{"notes"} %>
			</p>
%		}

%		if ($ballot_header) {
			<div class="centeralign ltborder">
				<span class="ninetenths biggish leftalign">
					<% $ballot_header %>
				</span>
			</div>
%		}

<%perl>

		if ($event_type eq "congress") {

			my $default = $ARGS{"default"};
			$default = "speeches" unless $default;
			my @tabs;

			if ($chair) {

				if ($event_settings{"sort_precedence"}) {
					if ($audit) {
						@tabs = ("feedback", "recency");
						$default = "recency";
					} else {
						@tabs = ("feedback", "recency", "rankings");
						$default = "recency";
					}
				} else {
					if ($audit) {
						@tabs = ("feedback");
						$default = "feedback";
					} else {
						@tabs = ("feedback", "rankings");
						$default = "feedback";
					}
				}

			} elsif ($audit) {
				@tabs = ("speeches");
			} elsif (not defined $audit) {
				@tabs = ("speeches", "rankings");
			}

			if (
				$chart
				&& (
					$event_settings{"congress_seating_entrycodes"}
					|| $event_settings{"congress_seating_entrynames"}
					|| $event_settings{"congress_seating_schoolnames"}
					|| $event_settings{"congress_seating_schoolcodes"}
				)
			) {
				push @tabs, "seating";
			}

</%perl>
			<& "/funclib/tabs.mas",
				tabs      => \@tabs,
				default   => $default
			&>

%			if ($event_type eq "congress" && $event_settings{"sort_precedence"}) {

				<div class="recency screens">
<%perl>
					if ($chair) {
						my $sth = $dbh->prepare("
							select
								ballot.entry
							from ballot, score
								where ballot.panel = ?
								and ballot.judge = ?
								and ballot.id = score.ballot
								and score.tag = 'po'
						");

						$sth->execute($panel->id, $judge->id);
						my $pos = $sth->fetch();
						my $po;
						$po = @{$pos}[0] if $pos;
</%perl>
						<div class="full odd">
							<span class="third rightalign semibold biggish">
								Presiding Officer
							</span>
							<span class="half">
								<select
									name       = "entry_id"
									panel_id   = "<% $panel %>"
									judge_id   = "<% $judge %>"
									on_success = 'refresh'
									onChange   = "postSwitch(this, 'po_choose.mhtml');
								">
									<option value=""></option>
%									foreach my $entry (sort {$entries{$a}{"code"} cmp $entries{$b}{"code"}} keys %entries) {
										<option
											value="<% $entry %>"
											<% $entry == $po ? "selected" : "" %>
										><% $entries{$entry}{"code"} %></option>
%									}
								</select>
							</span>
						</div>
%					}

					<& "ballot_recency.mas",
						person          => $person,
						person_settings => $person_settings,
						panel           => $panel,
						dbh             => $dbh
					&>
				</div>
%			}

%			if ($event_type eq "congress" && $chart) {
				<div class="seating screens">
					<& "/funclib/seating_chart.mas",
						person => $person,
						panel  => $panel,
						chair  => $chair,
						dbh    => $dbh
					&>
				</div>
%			}

			<div class="feedback screens">
				<&
					"congress_feedback.mas",
						person          => $person,
						person_settings => $person_settings,
						tourn           => $tourn,
						judge           => $judge,
						panel           => $panel,
						event           => $event,
						missing         => $ARGS{"missing"},
						event_settings  => \%event_settings,
						entry_id        => $ARGS{"entry_id"}
				&>
			</div>

			<div class="speeches screens">
				<&
					"congress_speeches.mas",
						dbh             => $dbh,
						person          => $person,
						person_settings => $person_settings,
						tourn           => $tourn,
						judge           => $judge,
						panel           => $panel,
						event           => $event,
						missing         => $ARGS{"missing"},
						event_settings  => \%event_settings,
						entry_id        => $ARGS{"entry_id"}
				&>
			</div>

			<div class="rankings screens">
%		}

%		if ($event_settings{big_questions}) {
			<div class="centeralign semibold bluetext padvertmore bigger padbottommore">
				Resolution: <% $bq_stuff{resolution} %>
			</div>

<%perl>

		} elsif ($event_settings{"topic"}) {

			my $topic = Tab::Topic->retrieve($event_settings{"topic"});
			my $text = $topic->topic_text;
			$text =~ s/\r\n/<br\ \/>/g;
			$text =~ s/\n/<br\ \/>/g;
			$text =~ s/\r/<br\ \/>/g;
</%perl>
			<div class="centeralign marvertno">
				<p class="semibold bluetext padvert biggish ninetenths leftalign">
					TOPIC: <% $text %>
				</p>
			</div>

%		} elsif ($round_settings{'motion_publish'}) {
			<div class="centeralign">
				<span class="centeralign semibold padvert biggish nineteen">
					Motion: <% $round_settings{'motion'} %>
				</span>
			</div>
%		} elsif ($event_settings{"resolution"}) {
			<div class="centeralign">
				<span class="centeralign semibold padvert biggish nineteen">
					Resolution: <% $event_settings{"resolution"} %>
				</span>
			</div>
%		}

		<div class="full nospace centeralign">
		<span class="nineteen leftalign nospace ballotshell">

%			if ($tourn_settings{"bias_statement"} && length($tourn_settings{"bias_statement"}) > 10) {
				<p class="padvertmuchless ltborderbottom padbottom"><% $tourn_settings{"bias_statement"} %></p>
%			}

%			if ($event_settings{big_questions}) {
				<div class="padvertmuchless">
					<% $bq_stuff{rules} %>
				</div>
%			}

%			if ($chair && $event_settings{"ballot_rules_chair"}) {
				<div class="padvertmuchless">
					<% $event_settings{"ballot_rules_chair"} %>
				</div>
%			}

%			if ($event_settings{"ballot_rules"} && ((not defined $chair) || (not defined $event_settings{"chair_ballot_only"}))) {
				<div class="padvertmuchless">
					<% $event_settings{"ballot_rules"} %>
				</div>
%			}
<%perl>
		if (
			$event_settings{"po_points_required"}
			&& (not defined $po_points)
			&& (not defined $chair)
		) {
</%perl>
			<h6 class="redtext centeralign padmore marbottom semibold">
				You must give points to a presiding officer
			</h6>

			<p class="bigger bluetext">
				This tournament requires you to mark the presiding officer of
				the session and award them points for presiding (under the
				Speeches tab) before you may submit rankings.
			</p>

%		} else {

%			if ($event_type eq 'speech' || $event_type eq "congress") {
				<& "/funclib/tablesorter.mas",
					table => "sortable",
					nobuttons => 1
				&>
%			}
			<div class='flexrow full'>
<%perl>
			if ($event_settings{"truncate_fill"}
				&& $tb_types{"rank"}
				&& ($event_type eq "congress" && (not defined $chair))
			) {
</%perl>

%				if ($event_settings{"scorer_max"}) {
					<h6 class="orangetext centeralign padmore marbottom semibold half grow">
						Give no rank higher than <% $event_settings{"truncate_fill"} %>
					</h6>
%				}

				<h6 class="bluetext centeralign padmore marbottom semibold half grow">
					Blanks will be auto-filled with a <% $event_settings{"truncate_fill"} %>
				</h6>
<%perl>
			} elsif ($event_type eq "congress"
				&& $chair
				&& $event_settings{"parli_noautofill"}
				&& (not defined $audit)
			) {
</%perl>
				<h6 class="orangetext centeralign padmore marbottom semibold half grow">
					Parliamentarian Ballot: Please rank ALL entries in order
				</h6>
%			}

			</div>

		</span>
		</div>

%		if ($errs) {

			<div class="borderred centeralign martopmore marbottommore">

				<h6 class="bluetext semibold">
					Oh, drat. Your ballot had errors.
				</h6>

				<span class="semibold redtext bigger">
					<% $errs %>
				</span>

				<p class="bigger semibold bluetext">
					Please correct these before continuing.
				</p>

			</div>
%		}


		<div class="padvert centeralign ltbordertop">
			<span class="ninetenths leftalign">
%				if ($tb_types{"point"} && (not defined $event_settings{"ballot_rubric"}) ) {
					<div class="full nospace italic semibold centeralign">
							<span class="semibold redtext inline biggish">
								Points Rules:
							</span>
							<span class="halfspacer"></span>

							<span class="inline nospace bluetext semibold">
								Range:
							</span>

							<% $min_points."-".$max_points %>.

							<span class="halfspacer"></span>
							<% $step eq "1" ? " Whole points only. " : "" %>
							<% $event_settings{"point_ties"} ? "Ties are OK. " : "No ties. " %>

							<span class="halfspacer"></span>
%							if ($event_type eq "speech" || $event_type eq "congress") {
								<% $event_settings{"allow_lowpoints"}
									? ""
									: "Ranks and points must agree. "
								%>
%							}

							<% ($event_type ne "speech" && $event_type ne "congress" )
								&& $no_lpw ? "Winner must have higher points. " : "" %>

							<% $step eq "0.5" ? "Steps of 0.5. " : "" %>
							<% $step eq "0.25" ? "Steps of 0.25. " : "" %>
							<% $step eq "0.1" ? "Steps of 0.1. " : "" %>
						</span>
					</div>
<%perl>
				}

				my $notfirst;

				foreach my $entry (sort {$entries{$a}{"code"} cmp $entries{$b}{"code"}} keys %entries) {

					next unless $entries{$entry}{"notes"};

					unless ($notfirst++) {
</%perl>
						<div class="nospace full">
							<span class="third redtext semibold biggish">
								Accomodations Note
							</span>
							<span class="twothirds">
%					}
					<p class="nospace marvertless">
						<span class="inline semibold">
							<% $entries{$entry}{"code"} %>:
						</span>
						<% $entries{$entry}{"notes"} %>
					</p>
%				}

%				if ($notfirst) {
							</span>
						</div>
%				}
			</span>
		</div>

<%perl>
		if ($audit) {

			if ($event_type eq "mock_trial") {
				my $scored;
				foreach my $ballot (@ballots) {
					if ($ballot->scores) {
						$scored = $ballot->scores->first;
					}
					last if $scored;
				}

				if ($scored) {
</%perl>
					<div class="ltbordertop ltborderbottom full centeralign redtext semibold padvertmuchmore bigger">
						<% $scored %>
						This ballot has been entered and confirmed already. <br /><br />
						Changes to confirmed results require contacting the tournament staff.
					</div>
%				} else {

					<div class="ltbordertop ltborderbottom full centeralign redtext semibold padvertmuchmore bigger">
						You are not required to score this round; you can just preside.<br /><br />
						Changes to confirmed results require contacting the tournament staff.
					</div>
%				}

%			} else {

				<div class="ltbordertop ltborderbottom full centeralign redtext semibold padvertmuchmore bigger">
					This ballot has been entered and confirmed already. <br /><br />
					Changes to confirmed results require contacting the tournament staff.
				</div>
%			}

%		} else {

			<form
				action="<% $wudc ? "wudc_save.mhtml" : "ballot_save.mhtml" %>"
				method="post">

			<input
				type  = "hidden"
				name  = "panel_id"
				value = "<% $panel->id %>"
			>

			<input
				type  = "hidden"
				name  = "judge_id"
				value = "<% $judge->id %>"
			>

<%perl>

			if (
				$event_type eq "mock_trial"
				&& $event_settings{"ballot_rubric"}
				&& $tb_types{"point"}
			) {
				if ($chair && $event_settings{"chair_scores"}) {

				} elsif ($chair && $event_settings{"chair_winloss"}) {
					undef $tb_types{'point'};
				} elsif ($chair) {
					undef $tb_types{'point'};
					undef $tb_types{'winloss'};
				}

				if ($event_settings{'chair_only_outstanding'}) {
					if ($chair) {
						$tb_types{'outstanding_yes'}++;
					} else {
						$tb_types{'outstanding_no'}++;
					}
				}
			}

			if (
				$event_type eq "mock_trial"
				&& $event_settings{"ballot_rubric"}
				&& $event_settings{"ballot_rubric_single"}
				&& $tb_types{"point"}
			) {
</%perl>
				<& "ballot_rubric_single.mas",
					event            => $event,
					event_settings   => \%event_settings,
					ballots          => \@ballots,
					pronouns         => \%pronoun_by_id,
					panel            => $panel,
					skip_outstanding => $tb_types{'outstanding_no'},
					judge            => $judge
				&>

<%perl>
			} elsif (
				$event_type eq "mock_trial"
				&& $event_settings{"ballot_rubric"}
				&& $tb_types{"point"}
				&& (
					(not defined $chair)
					|| $event_settings{'chair_scores'}
				)
			) {
</%perl>
				<& "ballot_rubric.mas",
					event          => $event,
					event_settings => \%event_settings,
					ballots        => \@ballots,
					pronouns       => \%pronoun_by_id,
					panel          => $panel,
					judge          => $judge
				&>


%				undef $tb_types{'winloss'};

%			} else {

				<table id="sortable">
					<thead>
						<tr class="yellowrow smallish centeralign">
<%perl>
							if ($event_settings{"online_mode"} eq "async"
								|| $event_settings{"show_async_links"}
								|| $show_async
							) {
</%perl>
								<th>
									Performance Video
								</th>
%							}
%							if ($event_type eq "wudc") {
								<th>
									Position
								</th>
%							} elsif ($event_type ne "speech" && $event_type ne "congress") {

%								if ($locked || $event_type eq "mock_trial") {
									<th>
										Sides Set
									</th>
%								} elsif ($event_settings{"flip_online"}) {
									<th>
										<% $flip_status eq "done" ? "FLIP COMPLETE" : "FLIP INCOMPLETE"  %>
									</th>
%								} else {
									<th>
										Select Side
									</th>
%								}
%							}

%							if ($event_type eq "mock_trial") {

%							} elsif ($event_type ne "wsdc" && $event_settings{"no_side_constraints"}) {
								<th>
									Speaking Position
								</th>
%							} elsif ($event_type eq "speech" && (not defined $tourn_settings{mock_trial_registration})) {
								<th>
									Speaker Order
								</th>
%							} elsif ($event_type eq "congress" && $event_settings{"sort_precedence"}) {
								<th>
									Recency
								</th>
%							}

							<th>
								Entry Code
							</th>

%							if ($ballot_school_code) {
								<th>
									Sch Code
								</th>
%							}

%							if ($category_settings{"ballot_region_codes"}) {
%								if ($tourn_settings{"nsda_nats"}) {
									<th>
										State
									</th>
%								} elsif ($tourn_settings{"ncfl"}) {
									<th>
										Diocese
									</th>
%								} else {
									<th>
										Region
									</th>
%								}
%							}

%							if ($ballot_school_name) {
								<th>
									School
								</th>
%							}

%							if ($ballot_entry_name) {
								<th>
									Name
								</th>
%							}

%							if ($ballot_entry_first_name) {
								<th>
									First Name
								</th>
%							}
%							if ($category_settings{'ballot_entry_titles'}) {
								<th>
									Title/Question
								</th>
%							}

%							if ($wudc && $tb_types{"winloss"} && $round->type eq "elim") {
								<th>
									Advance (2)
								</th>
%							} elsif ($wudc && $tb_types{"winloss"} && $round->type eq "final") {
								<th>
									Champion
								</th>
%							}

%							if ($event_type eq "congress" && (not defined $audit)) {

%								if ($event_settings{"po_points_required"}) {
									<th title="Presiding Officers">
										PO
									</th>
%								}

								<th>
									Speech Points
								</th>

								<th>
									Average
								</th>

								<th>
									Rank
								</th>

%								if ($tb_types{"point"}) {
									<th>
										Speaker Points
									</th>
%								}

%								if ($chair && $tb_types{"best_po"}) {
									<th>
										Best PO
									</th>
%								}

<%perl>
							} elsif ( ($audit < 1) || $person->site_admin) {

								my $num;
								$num++ if $tb_types{"rank"};
								$num++ if $tb_types{"point"};

								if ($num > 0) {
</%perl>
									<th colspan="<% $num %>">
<%perl>
									my $tick;

									if (
										($tb_types{"rank"} || $tb_types{"point"}
										&& (scalar @panel_students > scalar @ballots)
									)
										&& not defined $team_points
									) {

										$tick++;
</%perl>
										<span class="half marno padless leftalign">
											Speaker
										</span>
%									}

%									if ($tb_types{"rank"}) {
										<span class="<%
											$tb_types{"point"} && (not defined $team_points)
												? "quarter padless"
												: "half"
											%> marno centeralign borer">
											Rank
										</span>
%									}

%									if ($tb_types{"point"}) {

										<span class="<%
											$tb_types{"rank"} && (not defined $team_points)
												? "quarter padless"
												: "half"
										%> marno centeralign">

%										if ($event_settings{"wsdc_categories"}) {
%											foreach my $score (@scores) {
												<span class="marno quarter centeralign">
													<% ucfirst ($score) %><br />
													(<% $min_subpoints{$score} %> - <% $max_subpoints{$score} %>)
												</span>
%											}
											<span class="marno quarter centeralign semibold">
												Total <br />
												(<% $min_subpoints{"total"} %> - <% $max_subpoints{"total"} %>)
											</span>
%										} else {
											<% $team_points && $event_type eq "debate"
												? " Team "
												: ""
											%> Points
%										}
										</span>
%									}
									</th>

%									if ($category_settings{"ballot_times"} && $event_type eq "speech") {
										<th>
											Piece Time
										</th>
%									}

%									if ($tb_types{"tv"}) {
										<th>
											Violation
										</th>
%									}

%									if ($forfeit) {
										<th class="nowrap centeralign">
											No Show
										</th>
%									}
%								}
%							}
						</tr>
					</thead>

					<tbody id="ballottable">
<%perl>
						my $index = 1;
						my $switch;
						my %doubled;

						unless ($event_settings{"online_mode"} eq "async") {
							%doubled = $m->comp("/funclib/round_doubled.mas", round => $round);
						}

						foreach my $ballot (@ballots) {

							my $entry = $ballot->entry;
							next unless $entry;
							next if $entry->dropped && ($event_type eq "speech" || $event_type eq "congress");

							my $positions = $entries{$entry}{"positions"};
							my %sort;

							my @students = $entry->students;

							if ($event_type eq "debate" && (scalar @students > 2)) {
								foreach my $student (@students) {
									if ($positions->{$student->id} eq "1S") {
										$sort{$student->id} = 1;
									} elsif ($positions->{$student->id} eq "2S") {
										$sort{$student->id} = 2;
									} elsif ($positions->{$student->id} eq "2A") {
										if ($ballot->side == 1) {
											$sort{$student->id} = 2;
										} else {
											$sort{$student->id} = 1;
										}
									} elsif ($positions->{$student->id} eq "2N") {
										if ($ballot->side == 1) {
											$sort{$student->id} = 1;
										} else {
											$sort{$student->id} = 2;
										}
									}
								}
							}

							my $doubled = scalar (keys %{$doubled{$ballot->entry}});
							my $daggers;

							if ($doubled > 0) {
								foreach (1 .. $doubled) {
									$daggers .= "&dagger;";
								}
							}

							$i_can_haz_doubled++ if $doubled;
</%perl>
							<tr
								id    = "<% $ballot->id %>"
								side  = "<% $ballot->side %>"
								entry = "<% $ballot->entry->id %>"
								class = "<% ($switch % 2) ? "odd" : "even" %> ballotrows"
							>
<%perl>
								if ($event_settings{"online_mode"} eq "async"
									|| $event_settings{"show_async_links"}
									|| $show_async
								) {
</%perl>
									<td class="centeralign">
%										if ($entry && $entries{$entry}{"video_link"}) {
											<a
												target = "_blank"
												class  = "buttonwhite bluetext invert fa fa-video-camera"
												href   = "<% $entries{$entry}{"video_link"} %>"
											></a>
%										} else {
											<span class="full nospace semibold orangetext">
												NO VIDEO
											</span>
%										}
									</td>
%								}
<%perl>
								my $columns = scalar @students;
								$columns = 1 if $team_points;
								$columns = 1 unless ($tb_types{"point"} || $tb_types{"rank"});

								unless ($event_type eq "speech" || $event_type eq "congress") {

									$m->print('<td class="centeralign">');
										$m->print('<span class="half">');

										unless ($locked || $event_settings{"flip_online"}) {
</%perl>
											<select
												name             = "<% $ballot->id %>_side"
												id               = "<% $ballot->id %>_side"
												entry            = "<% $ballot->entry->id %>"
												ballot           = "<% $ballot->id %>"
												class            = "plain sidepicker"
												data-placeholder = "Choose a side"
												onChange         = "changeSides(this);"
											>

												<option value=""></option>

												<option
													value = "1"
													id    = "<% $ballot->id %>_sidepicker_2"
													<% $ballot->side == 1 ? "selected" : ""%>
												><% $event_settings{"aff_label"} || "Aff" %></option>

												<option
													value = "2"
													id    = "<% $ballot->id %>_sidepicker_2"
													<% $ballot->side == 2 ? "selected" : ""%>
												><% $event_settings{"neg_label"} || "Neg" %></option>

											</select>
<%perl>
										} elsif ($wudc && (
											$round->type eq "elim"
											|| $round->type eq "final"
											|| $round->type eq "runoff")
										) {
</%perl>
											<select name="<% $ballot->id %>_speakerorder" class="plain">
												<option value="">Pick</option>
												<option value="1">1st Gov</option>
												<option value="2">1st Opp</option>
												<option value="3">2nd Gov</option>
												<option value="4">2nd Opp</option>
											</select>

%										} elsif ($wudc) {

											<% ($ballot->speakerorder == 1) ? "1st Gov" : "" %>
											<% ($ballot->speakerorder == 2) ? "1st Opp" : "" %>
											<% ($ballot->speakerorder == 3) ? "2nd Gov" : "" %>
											<% ($ballot->speakerorder == 4) ? "2nd Opp" : "" %>

%										} else {

											<span
												id   = "<% $ballot->id %>_side"
												side = "<% $ballot->side %>"
											>
												<% ($ballot->side == 1)
													? $event_settings{"aff_label"} || "Aff"
													: $event_settings{"neg_label"} || "Neg"
												%>
											</span>
%										}
										</span>
									</td>
<%perl>
									if ($event_settings{"no_side_constraints"}
										&& (not defined $event_settings{"flip_online"})
										&& ($event_type ne "mock_trial")
									) {
</%perl>
										<td class='centeralign'>

											<select
												id               = "<% $ballot->id %>_speakerorder"
												name             = "<% $ballot->id %>_speakerorder"
												ballot_id        = "<% $ballot->id %>"
												class            = "fixedtiny speakerorder plain"
												onChange         = "swapOrder(this);"
												data-placeholder = "Select speaker order"
											>

												<option
													value = ""
													class = "orderpick"
												></option>

												<option
													value = "1"
													id    = "1"
													class = "orders"
													<% $ballot->speakerorder == 1 ? "selected" : ""%>
												>1st</option>

												<option
													value = "2"
													id    = "2"
													class = "orders"
													<% $ballot->speakerorder == 2 ? "selected" : ""%>
												>2nd</option>

											</select>
										</td>

%									} elsif ($event_settings{"no_side_constraints"} && $event_settings{"flip_online"}) {

										<td class='centeralign'>
											<% $ballot->speakerorder == 1 ? "1st Speakers" : ""%>
											<% $ballot->speakerorder == 2 ? "2nd Speakers" : ""%>
										</td>
%									}
%								}

%								if ($event_type eq "speech" && (not defined $tourn_settings{mock_trial_registration})) {
									<td class='centeralign'>
										<% Lingua::EN::Numbers::Ordinate::ordinate($ballot->speakerorder) %>
									</td>
%								}

%								if ($event_type eq "congress" && $event_settings{"sort_precedence"}) {
									<td class='centeralign'>
										<% $ballot->speakerorder %>
									</td>
%								}

								<td
									class = "leftalign padvertmore"
									title = "Doubled <% $doubled %> daggers <% $daggers %>"
								>
									<div class="full flexrow grow semibold">
%										if ($doubled) {
											<span class="padright redtext bigger">
												<% $doubled ? $daggers : "" %>
											</span>
%										}
										<span>
											<% $entries{$entry}{"code"} %>
										</span>
									</div>
								</td>

%								if ($ballot_school_code) {
									<td class = "centeralign">
										<% $entries{$entry}{"school_code"} %>
									</td>
%								}

%								if ($category_settings{"ballot_region_codes"}) {
									<td class = "centeralign">
										<% $entries{$entry}{"region_code"} %>
									</td>
%								}

%								if ($ballot_school_name) {
									<td class = "padleftmore">
										<% $entries{$entry}{"school_name"} %>
									</td>
%								}

%								if ($ballot_entry_name) {
									<td class = "padleftmore" >
										<% $entry->name %>
									</td>
%								}

%								if ($ballot_entry_first_name) {
									<td class = "centeralign" >
%										foreach my $student ($entry->students) {
											<div class="fixedflex">
												<% $student->first %>
											</div>
%										}
									</td>
%								}
<%perl>
								if ($category_settings{'ballot_entry_titles'}) {

									my $exists = $ballot->scores(
										tag => "title"
									)->first;

									my $title;

									if ($exists) {
										$title = $exists->text;
									} else {
										$title = $entries{$entry}{"title"};
									}
</%perl>
									<td class="centeralign">

										<input
											type          = "text"
											name          = "<% $ballot->id %>"
											ballot_id     = "<% $ballot->id %>"
											property_name = "title"
											tabindex      = -1
											value         = "<% $title %>"
											size          = "30"
											placeholder   = "Enter title or extemp question"
											onBlur        = "postSwitch(this, 'title_save.mhtml');"
										>
									</td>
%								}

%								if ($event_type eq "congress" && (not defined $audit)) {

%									if ($event_settings{"po_points_required"}) {
										<td class="centeralign semibold greentext">
											<%
												$entry_scores{$entry->id}{"po"} ? "PO" : ""
											%><%
												$event_settings{"po_rank_message"} ? "*" : ""
											%>
										</td>
%									}

									<td class="centeralign">
<%perl>
										my $notfirst;
										foreach my $speech (keys %{$entry_scores{$entry->id}}) {
											next if $speech eq "total";
											next if $speech eq "po";
											next if $speech eq "count";
											$m->print(", ") if $notfirst++;
											$m->print($entry_scores{$entry->id}{$speech}->value);
										}
</%perl>
									</td>

									<td class="centeralign">
%										if ($entry_scores{$entry->id}{"count"}) {
											<% Math::Round::nearest(
												.01,
												($entry_scores{$entry->id}{"total"} / $entry_scores{$entry->id}{"count"})
											) %>
%										}
									</td>
<%perl>
								}

								unless ($event_type eq "congress" && $chair && $audit) {


									if ($tb_types{"point"} || $tb_types{"rank"}) {
										my $notfirst;

										if ($team_points) {

											if ($tb_types{"rank"}) {
</%perl>
												<td class="centeralign">
													<input
														tabindex = <% $index++ %>
														type     = "number"
														step     = "1"
														size     = "5"
														name     = "<% $ballot %>_ranks"
														max      = "<% scalar @panel_students %>"
														value    = "<% $ARGS{$ballot."_ranks"} %>"
													>
												</td>
%											}

%											if ($tb_types{"point"}) {

												<td <% $tb_types{"rank"} ? "" : $event_type eq "speech" ? "" : 'colspan="2"' %>
													class="centeralign nospace"
												>

<%perl>
													if ($event_settings{"ballot_rubric"}) {

														foreach my $side (sort {$a <=> $b} keys %{$event_settings{ballot_rubric}}) {

															foreach my $order (sort {$a <=> $b} keys %{$event_settings{ballot_rubric}{$side}}) {

																my $row = $event_settings{ballot_rubric}{$side}{$order};
</%perl>
																<div
																	id    = "order_<% $order %>"
																	class = "full flexrow ltborderbottom nospace"
																>
																	<span class="leftalign threequarters padleft">
																		<div class="full nospace semibold padvertless">
																			<% $order %> <% $row->{label} %>
																		</div>

																		<div class="full explain nospace padtopless">
																			<% $row->{description} %>
																		</div>
																	</span>
																	<span class="eighth">
																		<% $row->{min} %> - <% $row->{max} %>
																	</span>
																	<span class="eighth centeralign">
																		<% $row->{max_points} %>
																		<input
																			type     = "number"
																			class    = "<% $ballot->id %>_rubric"
																			id       = "<% $row->{uuid} %>"
																			max      = "<% $row->{max} %>"
																			min      = "<% $row->{min} %>"
																			onChange = "totalRubric(<% $ballot->id %>);"
																		>
																	</span>
																</div>
%															}
%														}
														<div class="full flexrow">
															<span class="rightalign threequarters padleft">
															</span>
															<span class="eighth centeralign semibold">
																TOTAL
															</span>
															<span
																class = "padvertmore eighth semibold"
																id    = "total_<% $ballot->id %>_points"
															>
																0
															</span>
														</div>

														<input
															class    = "<% $entry->id %>"
															type     = "hidden"
															ballotID = "<% $ballot->id %>"
															step     = "<% $step %>"
															name     = "<% $ballot->id %>_points"
															id       = "<% $ballot->id %>_points"
															size     = "5"
															min      = "<% $min_points %>"
															max      = "<% $max_points %>"
															value    = "<% $ARGS{$ballot->id."_points"} %>"
															tabindex = <% $index++ %>
														>

%													} else {

%														my $class;
%														unless ($event_settings{"team_total_line"}) {
%															$class = "totals"
%														}

														<input
															class    = "<% $entry->id %> <% $class %>"
															type     = "number"
															ballotID = "<% $ballot->id %>"
															step     = "<% $step %>"
															name     = "<% $ballot->id %>_points"
															id       = "<% $ballot->id %>_points"
															onChange = "checkLPW();"
															size     = "5"
															min      = "<% $min_points %>"
															max      = "<% $max_points %>"
															value    = "<% $ARGS{$ballot->id."_points"} %>"
															tabindex = <% $index++ %>
														>
%													}

												</td>
%											}

%											if ($category_settings{"ballot_times"} && $event_type eq "speech") {
												<td class="centeralign">
													<input
														type        = "text"
														name        = "<% $ballot->id %>_time"
														placeholder = "0:00"
													>
												</td>
%											}

%											if ($tb_types{"tv"}) {
												<td class="centeralign nospace">
													<label for="<% $ballot->id %>_tv" class="hover">
														<input
															type  = "checkbox"
															name  = "<% $ballot->id %>_tv"
															value = "1"
														>
													</label>
												</td>
%											}

<%perl>
											if ($forfeit) {

												my $msg = "You are marking the student as having forfeited the round.";
												$msg .= "Be sure you accomodated their double entry and are following the ";
												$msg .= "tournament policy on forfeits before doing so.  This entry will ";
												$msg .= "receive no ranks or points.";

												if ($round->protocol->setting("forfeits_rank_last")) {
													 $msg = "You are marking the student as having forfeited the round.  ";
													 $msg .= "Be sure you accomodated their double entry and are following ";
													 $msg .= "the tournament policy on forfeits before doing so.  This entry ";
													 $msg .= "will receive last place ranks and zero points.";
												}
</%perl>
												<td class="centeralign nospace">
													<label for="<% $ballot->id %>_forfeit">
														<span class="full padvertless">
															<input
																type  = "checkbox"
																name  = "<% $ballot->id %>_forfeit"
																value = "1"
																<& "/funclib/warn.mas", warn => $msg &>
															>
														</span>
													</label>
												</td>
%											}

%										} else {

											<td colspan="4" class="nospace">
<%perl>
											my $length = "half";
											$length = "third" if $tb_types{"rank"} && $tb_types{"point"};

											my $notfirst;

											foreach my $student (
												sort {
													$sort{$a} <=> $sort{$b}
													|| $a->last cmp $b->last
												} @students
											) {
</%perl>

												<div class="padless marno <% $notfirst++ ? "ltbordertop" : "" %> centeralign">

													<span class='smallish <% $length %> marno padless leftalign <% $student->id."_row" %>' >
														<% substr($student->first." ".$student->last.":", 0, 30) %>
														<div
															id    = "<% $student->id %>_warning"
															class = "hidden redtext semibold nospace padtop"
														>Total incorrect!</div>
													</span>

%													if  ($tb_types{"rank"}) {
														<span class="<% $length eq "half" ? "half" : "third" %> marno padless centeralign">
															<input
																tabindex = <% $index++  %>
																type     = "number"
																step     = "1"
																size     = "5"
																name     = "<% $student %>_ranks"
																min      = "1"
																max      = "<% scalar @panel_students %>"
															>
														</span>
%													}

%													if ($tb_types{"point"}) {

														<span class="<% $length eq "half" ? "half" : "third" %> marno padless centeralign">

%														if ($event_settings{"wsdc_categories"}) {

%															foreach my $score (@scores) {

																<span class="quarter centeralign">
																	<input
																		class    = "<% $student->id %>"
																		type     = "number"
																		step     = "<% $step %>"
																		ballotID = "<% $ballot->id %>"
																		name     = "<% $student->id %>_<% $score %>"
																		size     = "5"
																		min      = "<% $min_subpoints{$score} %>"
																		max      = "<% $max_subpoints{$score} %>"
																		value    = "<% $ARGS{$student->id."_".$score} %>"
																		tabindex = <% $index++ %>
																		onBlur = "speakerTotal(
																			'<% $student->id %>',
																			'<% $entry->id %>'
																		);"
																	>
																</span>
%															}

															<span class="quarter centeralign">
																<input
																	class    = "<% $entry->id %>"
																	type     = "number"
																	step     = "<% $step %>"
																	name     = "<% $student %>_points"
																	id       = "<% $student %>_points"
																	size     = "5"
																	min      = "<% $min_subpoints{"total"} %>"
																	max      = "<% $max_subpoints{"total"} %>"
																	value    = "<% $ARGS{$student."_points"} %>"
																	tabindex = <% $index++ %>
																	onChange = "checkTotal(
																		'<% $student->id %>',
																		'<% $entry->id %>'
																	);"
																>
															</span>

%														} else {

%															my $class = "totals" unless $event_settings{"team_total_line"};

															<span class="third marno padless centeralign">
																<input
																	type     = "number"
																	class    = "<% $class %>"
																	ballotID = "<% $ballot->id %>"
																	step     = "<% $step %>"
																	name     = "<% $student %>_points"
																	size     = "5"
																	min      = "<% $min_points %>"
																	max      = "<% $max_points %>"
																	value    = "<% $ARGS{$student."_points"} %>"
																	tabindex = <% $index++ %>
																	onChange = "checkLPW();"
																>
															</span>
%														}
%													}
												</div>
%											}

											</td>

%											if ($tb_types{"tv"}) {
												<td>
													<input
														type  = "checkbox"
														name  = "<% $ballot->id %>_tv"
														value = "1"
													>
												</td>
%											}

%											if ($forfeit) {
												<td>
													<input
														type  = "checkbox"
														name  = "<% $ballot->id %>_forfeit"
														value = "1"
													>
												</td>
%											}
%										}
%									} elsif  ($wudc && $tb_types{"winloss"}) {
										<td>
											<input
												type     = "checkbox"
												name     = "<% $ballot->id %>_win"
												tabindex = <% $index++ %>
											>
										</td>
%									}

%									if ($chair && $tb_types{"best_po"}) {
										<td class="centeralign">
											<input
												type     = "radio"
												name     = "best_po"
												value    = "<% $ballot->id %>"
												tabindex = -1
											>
										</td>
%									}
%								}
							</tr>
<%perl>
							if ($event_settings{"team_total_line"}) {

								my $columns = 3;

								if ($event_settings{"wsdc_categories"}) {
									$columns += scalar @scores;
								} else {
									$columns++ if $tb_types{"point"};
								}

								$columns++ if $tb_types{"rank"};
</%perl>
								<tr class="<% ($switch % 2) ? "odd" : "even" %>">
									<td
										class="rightalign bluetext semibold"
										colspan="<% $columns %>"
									><% $entry->code %> TOTAL:</td>

									<td class="centeralign">
										<input
											ballotID = "<% $ballot->id %>"
											type    = "number"
											id      = "<% $entry->id %>_total"
											class   = "totals"
											readonly
										>
									</td>
								</tr>
%							}
%							$switch++;
%						}
					</tbody>
				</table>

%			if ($event_settings{"po_rank_message"}) {
				<div class="ltbordervert semibold centeralign bluetext">
					<% $event_settings{"po_rank_message"} %>
				</div>
%			}

%			if ($tb_types{"winloss"} && not defined $wudc) {

				<div class="odd">
					<span class="fifth semibold bluetext rightalign">
						Winner
					</span>

					<span
						class = "quarter leftalign"
						id    = "winbox"
					>

						<select
							id       = "winner"
							name     = "winner"
							tabindex  = "5"
							onChange = "checkLPW();"
						>
							<option value="0">Choose Winning Entry</option>

%							foreach my $ballot (@ballots) {
%								next unless $ballot->entry;
								<option
									value="<% $ballot->id %>"
									<% $ARGS{"winner"} == $ballot->id ? "selected" : "" %>
								><% $ballot->entry->code %></option>
%							}
						</select>
					</span>

					<span class="half rightalign">
						<div class="nowrap nospace">
							<span class="quarter rightalign semibold bluetext bluetext">
								On the
							</span>

							<span class="threequarters leftalign">
								<label for="winner_1">
									<span class="hover half">
										<input
											type     = "radio"
											name     = "winner_side"
											class    = "winner_side"
											value    = "1"
											id       = "winner_1"
											onChange = "checkSide();"
											<% $ARGS{"winner_side"} == 1 ? "checked" : "" %>
										>
										<% $event_settings{"aff_label"} || "Aff" %>
									</span>
								</label>

								<label for="winner_2">
									<span class="hover half">

										<input
											type     = "radio"
											name     = "winner_side"
											class    = "winner_side"
											value    = "2"
											id       = "winner_2"
											onChange = "checkSide();"
											<% $ARGS{"winner_side"} == 2 ? "checked" : "" %>
										>
										<% $event_settings{"neg_label"} || "Neg" %>
									</span>
								</label>
							</span>
						</div>
					</span>
				</div>

%				if ($tb_types{"winloss"} && $tb_types{"point"} && $no_lpw < 1) {

					<div id="lpwbox" class="hidden row even">
						<div class="flexrow">
							<span class="twothirds rightalign redtext semibold padright">
								Did you intend to give a Low-Point Win?
							</span>

							<span class="tenth centeralign yellowhover italic redtext semibold">
								<label for="lpw" class="nohover">
									<input
										type  = "checkbox"
										id    = "lpw"
										value = "1"
										name  = "lpw"
										onChange = "checkLPW()";
										<% $ARGS{"lpw"} ? "checked" : "" %>
									> Yes
								</label>
							</span>
						</div>
						<div class="flexrow flexgrow centeralign padbottommore smallish">
%							foreach my $ballot (@ballots) {
								<span
									class = "padleft padright"
								>
									<% $ballot->entry->code %>:
									<span
										class = "inline semibold italic"
										id    = "<% $ballot->id %>_lpw"
									></span>
								</span>
%							}
						</div>
					</div>
%				}
%			}

%			}

%			if ($tb_types{outstanding_yes}) {
				<& "ballot_rubric_single.mas",
					event          => $event,
					event_settings => \%event_settings,
					ballots        => \@ballots,
					pronouns       => \%pronoun_by_id,
					outstanding    => 1,
					panel          => $panel,
					judge          => $judge
				&>
%			}

%			if ($event_settings{"lower_rules"}) {
				<div class="padleft biggish bluetext centeralign padvert odd">
					<% $event_settings{"lower_rules"} %>
				</div>
%			}
<%perl>
			if ($event_settings{"po_contest"}) {

				Tab::Panel->set_sql(po_target => "
					select panel.*
						from panel, round, event

					where event.id = ?
						and event.type = 'congress'
						and event.id = round.event
						and round.name = ?
						and round.id = panel.round
						and round.published = 1
						and panel.letter = ?
				");

				my $po_panel = Tab::Panel->search_po_target(
					$event_settings{"po_contest"},
					$round->name,
					$panel->letter
				)->first;

				if ($po_panel) {

					my $po_round = $po_panel->round;
					my @po_entries = $m->comp("/funclib/panel_entries.mas", panel => $po_panel);

					my %po_tb_types = $m->comp(
						"/funclib/tiebreak_types.mas",
						round => $po_round
					);
</%perl>
					<h5 class="padtop">
						Please rate the presiding officers
					</h5>

%					foreach my $po_entry (@po_entries) {

						<div class="row flexrow">

							<span class="twofifths flexrow">
								<span class="third semibold padleft grow">
									<% $po_entry->code %>
								</span>

%								if ($ballot_entry_name) {
									<span class="twothirds">
										<% $po_entry->name %>
									</span>
%								}
							</span>

							<span class="fifth centeralign yellowhover">
								<label for="po_<% $po_entry->id %>">
%									if ($po_tb_types{"winloss"}) {
										Winner:
										<input
											type     = "radio"
											name     = "po_winloss"
											value    = "<% $po_entry->id %>"
											id       = "po_<% $po_entry->id %>"
											tabindex = -1
										>
%									}
								</label>
							</span>

							<span class="fifth centeralign">
%								if ($po_tb_types{"rank"}) {
									PO Rank (1 - <% scalar @po_entries %>)
									<input
										type     = "number"
										name     = "po_rank_<% $po_entry->id %>"
										min      = "1"
										max      = "<% scalar @po_entries %>"
										tabindex = -1
									>
%								}
							</span>

							<span class="fifth centeralign">
%								if ($po_tb_types{"point"}) {
									PO Points
									<input
										type     = "number"
										name     = "po_point_<% $po_entry->id %>"
										min      = "1"
										max      = "100"
										tabindex = -1
									>
%								}
							</span>
						</div>
%					}
%				}
%			}

%			if ($i_can_haz_doubled) {
				<div class="odd smallish redtext semibold centeralign padvertmore">
					<span class="inline"> &dagger; </span>
					These entries are doubled entered in another category
					this round.  Please accomodate their need to leave early, or
					wait for them to appear late.
				</div>
%			}

%			unless ($event_settings{"ballot_rubric"} && $tb_types{"point"} && $event_type ne "speech") {


				<div class="warning hidden online_status centeralign marvertmore padvert ltbordertop ltborderbottom">

					<span class="fourfifths padvert marvertmore borderred">
						<p class="semibold bigger underline orangetext">
							Warning: Your Browser Appears To Be Offline
						</p>

						<p>
							An attempt to auto-save your comments and feedback
							failed. Please check your network connection before
							saving in order to prevent lost results and
							feedback!
						</p>
					</span>

				</div>

				<div class="liblrow rightalign padvert flexrow submit_row">
%					if ($event_settings{"allow_lowpoints"}) {
						<span class="half centeralign hover nospace">
							<label for="lpw">
								<span class="threequarters">
									Low-Point Ranks?
								</span>

								<span class="quarter centeralign">
									<input
										type     = "checkbox"
										id       = "lpw"
										value    = "1"
										name     = "lpw"
										onChange = "checkLPW()";
										<% $ARGS{"lpw"} ? "checked" : "" %>
									>
								</span>
							</label>
						</span>
%					}

					<span
						class="half centeralign nospace"
					>
						<input
							type  = "submit"
							value = "<%
								$event_type eq "mock_trial"
								? "Save Scores"
								: "Submit Ballot"
							%>"
						>
					</span>
				</div>
%			}
%		}

%		if ($event_settings{dumb_signature_line}) {
			<div class="padleft padvert padbottommore">
				<% $event_settings{dumb_signature_line} %>
			</div>
%		}
<%perl>

		unless (
			$event_type eq "congress"
			|| ($event_type eq "mock_trial"
				&& (not defined $event_settings{mock_trial_feedback})
				)
		) {
</%perl>

			<div class="full padtopmore">

				<div class="flexrow">
					<span class="third">
						<h5 class="nospace">
							Feedback
						</h5>
					</span>

%					if (scalar @ballots > 3) {

						<span class="twothirds flexrow">
							<span class="half rightalign bigger semibold bluetext">
								Comments for
							</span>

							<span class="half">

								<select
									onChange = "switchBox(this);"
								>
									<option value="rfd">Everyone (Reason for Rankings)</option>
<%perl>
									foreach my $ballot (@ballots) {

										next if $event_type eq "congress";

										my $entry = $ballot->entry if $ballot->entry;
										next unless $entry;
										next if $entry->dropped;

</%perl>
										<option
											value="<% $ballot->id %>"
										><% $entry->code
											%>&nbsp;&nbsp;<%
											$ballot_entry_name && ($entry->code ne $entry->name)
											? $entry->name : ""
										%></option>
%									}

								</select>
							</span>
						</span>
%					}
				</div>
			</div>

			<p class="full semibold graytext">
				You can write &amp; edit feedback until
				<& "/funclib/showdt.mas",
					dt     => $tourn->end,
					format => "murica_short",
					at     => 1,
					tz     => $tourn->tz
				&>.

				Please submit your ranks, scores and/or decision before writing
				or giving extensive feedback.  After you fill out ranks, you
				can look under the Past tab of your judging home screen to see
				past results &amp; edit feedback.
			</p>

%			if ($event_settings{"comments_plz"}) {
				<p class="redtext semibold padvertless padleft">
					At least <% $event_settings{"comments_plz"} %> words of feedback
					are required for each speaker before you may submit your ballot.
				</p>
%			}

%			if ($event_type eq "mock_trial" && $event_settings{"rfd_plz"}) {
				<p class="redtext semibold padvertless padleft">
					A written reason for verdict of at least <% $event_settings{"rfd_plz"} %>
					words is required before you may submit your ballot.
				</p>
%			} elsif ($event_settings{"rfd_plz"}) {
				<p class="redtext semibold padvertless rfd_plz">
					A written RFD of at least <% $event_settings{"rfd_plz"} %>
					words is required before you may submit your ballot.
				</p>
%			}

			<ul id="tabnav">

%				if (scalar @ballots < 4) {

					<li id="header_rfd" class="selected commentzing">
						<a onclick="doneSwitch('rfd');">
							Reason for
							<%
								$event_type eq "mock_trial"
								? "Verdict"
								: ($event_type eq "speech" || $event_type eq "congress")
									? "Rankings"
									: "Decision"
							%>
						</a>
					</li>
<%perl>
					@ballots = sort {$a->entry->code cmp $b->entry->code} @ballots;

					foreach my $ballot (@ballots) {
						next unless $ballot->entry;
</%perl>
						<li id="header_<% $ballot->id %>" class="commentzing">
							<a
								onclick="doneSwitch(<% $ballot->id %>);"
							><% $ballot->entry->code %></a>
						</li>
%					}
%				}

				</ul>

				<div id="box_rfd" class="commentary">
					<span class="threequarters">
						<p class="semibold greentext full">
							These comments go to all participants in the round.
							<% $event_type eq "debate" && $event_settings{'rfd_plz'}
								? "Must be at least ".$event_settings{'rfd_plz'}." words long."
								: ""
							%>
						</p>
					</span>

					<span class="quarter rightalign semibold bluetext">
						Save Feedback
						<button
							type    = "button"
							onClick = "saveComments(false);"
							class   = "bluetext buttonwhite fa fa-lg fa-save"
						></button>
					</span>
<%perl>
					my $rfd = Tab::Score->search(
						tag    => "rfd",
						ballot => $ballots[0]->id
					)->first if @ballots;
</%perl>

					<div class="full centeralign marno padvertno">
						<textarea
							id        = "rfd_<% $ballots[0]->id %>"
							class     = "comment_box full"
							type      = "rfd"
							ballot_id = "<% $ballots[0]->id %>"
							name      = "rfd"
							rows      = "15"
							cols      = "60"
%							if ($event_settings{"rfd_plz"}) {
								placeholder = "Minimum <% $event_settings{"rfd_plz"} %> words of RFD required"
%							}
						><% $rfd ? $rfd->text : "" %></textarea>
					</div>

				</div>

%				BALLOT:
%				foreach my $ballot (@ballots) {

					<div
						id    = "box_<% $ballot->id %>"
						class = "commentary"
					>
<%perl>
						my $entry = $ballot->entry;

						unless ($entry) {
							$ballot->delete;
							next BALLOT;
						}

						my $code = $entry->code;

						$code .= " &ndash; ".$entry->school->code if $ballot_school_code;
						$code .= " &ndash; ".$entry->school->name if $ballot_school_name;
						$code .= " &ndash; ".$entry->name if $ballot_entry_name;

						if ($category_settings{'ballot_entry_titles'}) {
							$code .= " &ndash; ".$entries{$entry}{"title"};
						}

						if ($ballot_entry_first_name) {
							foreach my $student ($entry->students) {
								$code .= " &ndash; ".$student->first;
							}
						}

						my $comments = Tab::Score->search(
							tag    => "comments",
							ballot => $ballot->id
						)->first;
</%perl>
						<span class="threequarters">
							<p class="semibold bluetext full">
								These comments go only to <% $code %> &amp; coaches
							</p>
						</span>

						<span class="quarter rightalign semibold bluetext">
							Save Feedback
							<button
								type    = "button"
								onClick = "saveComments(false);"
								class   = "bluetext buttonwhite fa fa-lg fa-save"
							></button>
						</span>

						<div class="full centeralign marno padvertno">
							<textarea
								id        = "comments_<% $ballot->id %>"
								ballot_id = "<% $ballot->id %>"
								class     = "comment_box full"
								type      = "comments"
								name      = "comments_<% $ballot->id %>"
								rows      = "15"
								cols      = "60"
%								if ($event_settings{"comments_plz"}) {
									placeholder = "Minimum <% $event_settings{"comments_plz"} %> words of feedback required for each entry"
%								}
							><% $comments ? $comments->text : "" %></textarea>
						</div>
					</div>
%				}

%		} else {

%#			I acknowledge and own my weakness
%			if ($event_type eq "mock_trial") {
				<div>
%			}

			</div>
%		}

%		if ($event_settings{"big_questions"}) {

			<div class="full centeralign">
				<span class="third nospace">
					<a
						target = "_blank"
						href   = "https://www.speechanddebate.org"
					>
						<img
							src   = "<% $bq_stuff{nsda_logo} %>"
							alt   = "<% $bq_stuff{nsda_logo} %>"
							style = "max-width: 220px;" />
					</a>
				</span>

				<span class="third nospace">
					<a
						target = "_blank"
						href   = "https://www.templeton.org"
					>
						<img
							src   = "<% $bq_stuff{jtf_logo} %>"
							alt   = "<% $bq_stuff{jtf_logo} %>"
							style = "max-width: 220px;" />
					</a>
				</span>
			</div>
%		}

%		if ($event_type eq "congress" && $chair && $audit) {
			<p class="centeralign redtext semibold martopmuchmore">
				You are the parliamentarian for this round.
				You will not rank the speakers until the end of all sessions.<br />
				Please use this screen to provide feedback.
			</p>
%		}

		</form>

%		if ($round_settings{"ballot_topics"}) {
			<div class="nospace padvertmuchless padleft padright martopmore padtopmore bluebordertop">
				<h6>Topics for <% $round->realname %>:</h6>
				<% $round_settings{"ballot_topics"} %>
			</div>
%		}

	</div>

	<div class="menu sticky ballotmenu">

%		if ($tourn_logo) {
			<div class="sidenote logo">
				<div class=" centeralign">
					<img
						src   = "<% $Tab::s3_url %>/<% $tourn->id."/".$tourn_logo %>"
						alt   = "<% $tourn_logo %>"
						style = "max-width: 220px;"/
					>
				</div>
			</div>
%       }

		<div class="sidenote">

			<div class='flexrow'>
				<span class="half">
					<h4 class="semibold marbottom nowrap">
						This round
					</h4>
				</span>

				<span class="half rightalign biggish semibold orangetext padrightless">
					Start: <% Tab::nicetime($start) %>
				</span>
			</div>

			<div class="odd ltbordervert flexrow">
				<span class="quarter semibold padleft marno">
					Round
				</span>

				<span class="fiveeighths semibold bluetext nospace grow">
					<a
						href   = "/index/tourn/postings/round.mhtml?tourn_id=<% $tourn->id %>&round_id=<% $round->id %>"
						class  = "link-underline bluetext semibold hover full padleft biggish marno"
						alt    = "Full Schematic"
						target = "_blank;"
						title  = "Link to round's public schematic"
					><% $round->realname %></a>
				</span>

				<span class="eighth rightalign padvertless semibold padright grow">
					<a
						href   = "/index/tourn/postings/round.mhtml?tourn_id=<% $tourn->id %>&round_id=<% $round->id %>"
						class  = "fa fa-sm fa-table buttonwhite bluetext"
						title  = "Link to round's public schematic"
						alt    = "Link to round's public schematic"
						target = "_blank"
					></a>
				</span>
			</div>

%			if ($round->flighted > 1) {
				<div class="odd ltborderbottom flexrow">
					<span class="quarter semibold padleft">
						Flight
					</span>

					<span class="threequarters semibold bluetext padleft">
						<% $panel->flight %>
					</span>
				</div>
%			}

%			if ($share_room) {
				<div class="odd ltborderbottom flexrow">
					<span class="quarter semibold">
						Doc Share
					</span>

					<span class="threequarters semibold bluetext padleft">
						<a
							href   = "https://share.tabroom.com/<% $share_room %>"
							class  = "semibold bluetext link-underline biggish hover nospace padvert full"
							target = "_blank"
						><% $share_room %> <span class= "fa fa-smaller fa-external-link bluetext padleft thin"></span></a>
					</span>
				</div>
%			}

%			unless ($event_settings{"online_mode"}) {
				<div class="odd ltborderbottom flexrow">
					<span class="quarter semibold padleft padvertless">
						Room
					</span>
					<span class="threequarters semibold bluetext padleft">
						<% $panel->room ? $panel->room->name : "" %>
					</span>
				</div>
%			}
<%perl>
			my $panel_sth = $dbh->prepare("
				select
					judge.id, judge.first, judge.middle, judge.last,
					ballot.chair,
					person.pronoun
				from (judge, ballot)
					left join person on person.id = judge.person
				where ballot.panel = ?
					and ballot.judge = judge.id
					and judge.id != ?
				group by judge.id
				order by ballot.chair DESC, judge.last
			");

			$panel_sth->execute($panel->id, $judge->id);
			my $other_judges = $panel_sth->fetchall_hash();
</%perl>

%			if ($round_settings{"num_judges"} > 1) {
%				if ($event_type eq "mock_trial") {
					<div class="odd ltborderbottom flexrow padvertless">
						<span class="quarter semibold">
							Panel
						</span>

						<span class="threequarters">
%							foreach my $other_judge (@{$other_judges}) {
								<div class="nowrap padless marno flexrow">
									<span class="semibold bluetext quarter">
										<% $other_judge->{chair} ? "Judge" : "Scorer" %>
									</span>
									<span class="nospace threequarters wrap smaller">
										<% $other_judge->{code}." ".$other_judge->{first}." ".$other_judge->{middle}." ".$other_judge->{last} %>
										<% $other_judge->{pronoun}
											? "<span class='smallish nospace inline italic'>(".$other_judge->{pronoun}.")</span>"
											: ""
										%>
									</span>
								</div>
%							}
						</span>
					</div>

%				} else {
					<div class="odd ltborderbottom marno flexrow">
						<span class="quarter semibold padleft">
							Panel
						</span>

						<span class="threequarters padleft">
%							foreach my $other_judge (@{$other_judges}) {
								<div class="nospace padbottomless">
									<% $other_judge->{chair} ? "Chair:" : "" %>
									<% $other_judge->{code}." ".$other_judge->{first}." ".$other_judge->{middle}." ".$other_judge->{last} %>
									<% $other_judge->{pronoun}
										? "<span class='smallish padleft inline italic'>&ndash; ".$other_judge->{pronoun}."</span>"
										: ""
									%>
								</div>
%							}
						</span>
					</div>
%				}
%			}

%			if ($pronouns && scalar @{$pronouns}) {

				<div class="odd ltborderbottom flexrow padvertless">
					<span class="quarter semibold padleft">
						Entry
					</span>

					<span class="threequarters padleft">
%						foreach my $pronoun (@{$pronouns}) {
							<div class="padless marno">
								<% $pronoun->{code}." ".$pronoun->{first}." ".$pronoun->{middle}." ".$pronoun->{last} %>:
								<% $pronoun->{pronoun}
									? "<span class='smallish nospace inline'>".$pronoun->{pronoun}."</span>"
									: ""
								%>
							</div>
%						}
					</span>
				</div>
%			}

<%perl>
			if (
				$event_settings{"flip_online"} && (
					$round->type eq "elim"
					|| $round->type eq "final"
					|| $event_settings{"no_side_constraints"}
				)
			){
</%perl>
				<div class="odd ltbordertop ltborderbottom flexrow padvertless">
					<span class="quarter semibold padleft">
						Coin Flips
					</span>
					<span class="threequarters padleft semibold <% $flip_status eq "done" ? "greentext" : "orangetext" %>">
						<% $flip_status eq "done" ? "Complete" : "Incomplete" %>
					</span>
				</div>
%			}


%			if ($decision_deadline) {

				<div
					class="odd ltbordertop ltborderbottom flexrow"
					title = "This deadline is informative; your online ballot will not self-destruct when it expires.  But please vote by the deadline; the tournament cannot progress without your ballot."
				>
					<span class="quarter semibold padleft padvertless">
						Deadline
					</span>
					<span class="quarter semibold bluetext padleft biggish">
						<% Tab::nicetime($decision_time) %>
					</span>

					<span class="quarter semibold padleft">
						Time Left:
					</span>

					<span class="quarter semibold code bigger orangetext">
						<& "/funclib/stopwatch.mas",
							label     => "deadline",
							inline    => "true",
							autostart => "true",
							class     => "bigger padbottomless",
							duration  => $time_left,
							default   => 135
						&>
					</span>
				</div>
%			}


%			if ($event_settings{"online_prep"}) {
				<h6 class="orangetext semibold marbottom">
					Prep Breakout Rooms
				</h6>

%				foreach my $ballot (@ballots) {
%					my $entry = $ballot->entry;
					<div class="row nospace">

						<span class="threequarters nospace bluetext semibold">
							<% $entry->code %>
						</span>

						<span class="quarter leftalign">
							<& "/funclib/online_room.mas",
                                entry  => $entry->id,
                                person => $person,
								role   => "Judge",
                                show   => 1,
                                class  => "fa-sm padless"
                            &>
						</span>
					</div>
%				}
%			}


		</div>

%		unless ($event_settings{"no_timers"} || $event_type eq "mock_trial") {
			<div class="sidenote sticky">
<%perl>
				unless ($event_settings{"default_time"}) {
					$event_settings{"default_time"} = 5;
					$event_settings{"default_time"} = 10 if $event_type eq "speech";
					$event_settings{"default_time"} = 3 if $event_type eq "congress";
				}
</%perl>

				<div class="full nospace">
					<span class="quarter nospace">
						<h4>Timers</h4>
					</span>

					<span class="threequarters explain rightalign nospace explainsmol">
						If you refresh or leave the page, <br /> these timers will reset
					</span>
				</div>

				<& "/funclib/stopwatch.mas",
					label   => $panel->id."_timer",
					default => $event_settings{"default_time"}
				&>

<%perl>
				unless ($event_type eq "speech"
					|| $event_type eq "congress"
				) {

					unless ($event_settings{"prep_time"}) {
						$event_settings{"prep_time"} = 4;
					}

					foreach my $ballot (@ballots) {
</%perl>
						<& "/funclib/stopwatch.mas",
							label   => $ballot->id."_timer",
							title   => $ballot->entry->code." Prep",
							default => $event_settings{"prep_time"}
						&>

%					}
%				}
			</div>
%		}
<%perl>

		my $point_scale = $event_settings{"point_scale"};
		my $speech_times = $event_settings{"speech_times"};

		if ($point_scale) {

			$point_scale = $m->comp(
				"/funclib/save_editor.mas",
					text        => $point_scale,
					restrictive => 1
				);

			my @point_lines = split(/\R/, $point_scale);
</%perl>
			<div class="sidenote lowspace">

				<h6 class="bluetext semibold marbottom">
					Point Scale
				</h6>

<%perl>
			    my $strip = HTML::Strip->new();

				foreach my $line (@point_lines) {

					$line = $strip->parse($line);
					$line =~ s/[^[:ascii:]]//g;
					$line =~ s/^\s+//;
					$line =~ s/\s+$//;

					$m->print('<div class="odd full lightborder padless marno">');
					my ($points, $desc) = split (/\.\.\./, $line);

					if ($points && $desc) {

						$m->print('<span class="fifth semibold bluetext">');
						$m->print($points);
						$m->print('</span><span class="fourfifths">');
						$m->print($desc);
						$m->print('</span>');

					} else {
						$m->print($line);
					}

					$m->print('</div>');
				}
</%perl>
			</div>
%		}

<%perl>
		if ($speech_times) {

			$speech_times = $m->comp(
				"/funclib/save_editor.mas",
					text        => $speech_times,
					restrictive => 1
				);

			my @time_lines = split(/\R/, $speech_times);

</%perl>

			<div class="sidenote lowspace">

				<h6 class="bluetext semibold marbottom">
					Speech Times
				</h6>

<%perl>
			    my $strip = HTML::Strip->new();

				foreach my $line (@time_lines) {

					$line = $strip->parse($line);
					$line =~ s/[^[:ascii:]]//g;
					$line =~ s/^\s+//;
					$line =~ s/\s+$//;

					$m->print('<div class="odd full lightborder padless marno">');
					my ($points, $desc) = split (/\.\.\./, $line);

					if ($points && $desc) {

						$m->print('<span class="twothirds semibold">');
						$m->print($points);
						$m->print('</span><span class="rightalign third">');
						$m->print($desc);
						$m->print('</span>');

					} else {
						$m->print($line);
					}

					$m->print('</div>');
				}
</%perl>
			</div>
%		}

<%perl>
			my $others_sth = $dbh->prepare("
				select
					panel.id, panel.letter, panel.flight,
					event.id, event.abbr, event.name,
					ballot.judge,
					round.id, round.name, round.label, round.flighted,
					ballot.audit
				from panel, round, event, ballot, judge

				where event.tourn = ?
					and event.id = round.event
					and round.id = panel.round
					and panel.id = ballot.panel
					and ballot.judge = judge.id
					and judge.person = ?
					and round.published = 1
			");

			$others_sth->execute($tourn->id, $judge->person->id);

			my %others;

			while (
				my (
					$panel_id, $letter, $flight,
					$event_id, $abbr, $name,
					$judge_id,
					$round_id, $number, $label, $flighted,
					$audit
				) = $others_sth->fetchrow_array()
			) {

				my $tag;

				if ($audit) {
					$tag = "done";
				} else {
					$tag = "pending";
				}

				$others{$tag}{$panel_id}{"letter"} = $letter;
				$others{$tag}{$panel_id}{"flight"} = $flight;
				$others{$tag}{$panel_id}{"abbr"} = $abbr;
				$others{$tag}{$panel_id}{"name"} = $name;
				$others{$tag}{$panel_id}{"judge"} = $judge;

				if ($label) {
					$others{$tag}{$panel_id}{"round_name"} = $label;
				} else {
					$others{$tag}{$panel_id}{"round_name"} = "Round ".$number;
				}

				if ($flighted > 1) {
					$others{$tag}{$panel_id}{"round_flight"} = "Flt ".$flight;
				}
			}

			if (keys %others) {

</%perl>
				<div class="sidenote">
%					if ($others{"pending"}) {
						<h4>
							Your Pending Ballots
						</h4>
%						foreach my $panel_id (sort keys %{$others{"pending"}}) {
							<a
								class="row full ltbordertop ltborderbottom bluetext hover"
								href="ballot.mhtml?panel_id=<% $panel_id %>&judge_id=<% $others{"pending"}{$panel_id}{"judge"} %>"
							>
								<% $others{"pending"}{$panel_id}{"abbr"} %>
								<% $others{"pending"}{$panel_id}{"round_name"} %>
								<% $others{"pending"}{$panel_id}{"round_flight"} %>
							</a>
%						}
%					}

%					if ($others{"done"}) {
						<h4>
							Your Completed Ballots
						</h4>
%						foreach my $panel_id (sort keys %{$others{"done"}}) {
							<a
								class="half odd ltbordertop ltborderbottom bluetext yellowhover"
								href="rfd_only.mhtml?panel_id=<% $panel_id %>&judge_id=<% $others{"pending"}{$panel_id}{"judge"} %>"
							>
								<% $others{"done"}{$panel_id}{"abbr"} %>
								<% $others{"done"}{$panel_id}{"round_name"} %>
								<% $others{"done"}{$panel_id}{"round_flight"} %>
							</a>
%						}
%					}
%				}
%			}
		</div>
	</div>

