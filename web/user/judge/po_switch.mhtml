<%args>
	$dbh
	$person
	$perms
	$entry_id       => undef
	$judge_id       => undef
	$panel_id       => undef
	$property_value => 0
	$flag           => undef
</%args>
<%init>


	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($entry_id) {
		$m->print('{ "error": true, "message": "No entry ID sent"}');
		$m->abort();
	}

	my $entry = Tab::Entry->retrieve($entry_id);

	unless ($entry) {
		$m->print('{ "error": true, "message": "No entry found for ID '.$entry_id.'"}');
		$m->abort();
	}

	unless ($panel_id) {
		$m->print('{ "error": true, "message": "No chamber ID to change sent"}');
		$m->abort();
	}

	my $panel = Tab::Panel->retrieve($panel_id);

	unless ($panel) {
		$m->print('{ "error": true, "message": "No chamber found for ID '.$panel_id.'"}');
		$m->abort();
	}

	my $judge = Tab::Judge->retrieve($judge_id);

	unless ($judge) {
		$m->print('{ "error": true, "message": "No judge found for ID '.$judge_id.'"}');
		$m->abort();
	}

	unless ($judge->person == $person || $person->site_admin) {
		$m->print('{ "error": true, "message": "You are not on that panel and may not change that judge ballot"}');
		$m->abort();
	}

	my $message;

	if ($property_value == 1) {

		my $sth = $dbh->prepare("
			delete score.*
				from score, ballot
			where 1=1
				and ballot.judge = ?
				and ballot.panel = ?
				and ballot.id = score.ballot
				and score.tag = 'po'
		");

		$sth->execute($judge->id, $panel->id);
		$message = "PO designation unmarked for ".$entry->code;

	} else {

		my $sth = $dbh->prepare("
			delete score.*
				from score, ballot
			where 1=1
				and ballot.judge = ?
				and ballot.panel = ?
				and ballot.id = score.ballot
				and score.tag = 'po'
				and ballot.entry != ?
		");

		$sth->execute($judge->id, $panel->id, $entry->id);

		my $ballot = Tab::Ballot->search( entry => $entry->id, panel => $panel->id, judge => $judge->id)->first;

		if ($ballot) {

			my $score = $ballot->scores(tag => "po")->first;

			unless ($score > 0) {
				Tab::Score->create({
					ballot => $ballot->id,
					tag    => "po",
					value  => 1
				});
			}
		}

		$message = "PO designation marked for ".$entry->code;
	}

	my $response = ({
		error   => \0,
		message => $message,
	});

	$m->print(JSON::encode_json($response));
	$m->abort();

</%init>

