<%args>
	$person
	$person_settings
	$dbh
	$now
	$session
</%args>
<%init>

	if ($person_settings->{email_unconfirmed}) {
		$m->comp("/funclib/abort.mas",
			message => "You may not edit or submit a paradigm unless your Tabroom account email is confirmed. Click your profile above to complete confirmation."
		);
	}

	my $tz = $person->tz;
	$tz = "UTC" unless $tz;

	my $text = $m->comp(
		"/funclib/save_editor.mas",
		text => $ARGS{"paradigm"}
	);

	my $swears = $m->comp("/funclib/profanity.mas", text => $text);

	if ($swears) {
		$m->comp("/funclib/abort.mas", message => $swears);
	}

	my $find_paradigm = $dbh->prepare("
		select id, value_text text
		from person_setting
		where tag = 'paradigm'
		and person = ?
	");

	$find_paradigm->execute($person->id);
	my $existings = $find_paradigm->fetchall_hash();
	my $paradigm;
	my $paradigm_id;

	if ($existings && scalar @{$existings}) {
		my $ps = shift @{$existings};
		$paradigm = $ps->{text};
		$paradigm_id = $ps->{id};

		if ($ps->{id} && $text && (not defined $paradigm)) {
			$paradigm = '1';
		}
	}

	if ($paradigm && $text && $paradigm eq $text) {

		my $update_review_sth = $dbh->prepare("update person_setting set timestamp = NOW() where person = ? and tag = 'paradigm'");
		$update_review_sth->execute($person->id);

	} elsif ( (defined $paradigm) && $text) {

		my $update_review_sth = $dbh->prepare("update person_setting set value_text = ? where person = ? and tag = 'paradigm'");
		$update_review_sth->execute($text, $person->id);

	} elsif ($text) {

		my $paradigm_sth = $dbh->prepare('
			INSERT INTO person_setting
				(tag, person, value, value_text)
				VALUES ("paradigm", ?, "text", ?)
		');

		eval {
			$paradigm_sth->execute($person->id, $text);
		};

		if ($@) {
			my $update_id_sth = $dbh->prepare("update person_setting set value_text = ? where person = ? and tag = 'paradigm'");
			$update_id_sth->execute($text, $person->id);
		}

	} else {
		my $rm_paradigm_sth = $dbh->prepare("delete from person_setting where person = ? and tag = 'paradigm'");
		$rm_paradigm_sth->execute($person->id);
	}

	my $ip = $ENV{"HTTP_X_FORWARDED_FOR"} || $ENV{REMOTE_ADDR};
	my $description = "Saved new paradigm from session ".$session->id." logged in from $ip";

	if ($session->su) {
		$description .= " while SU'd from account ".$session->su->email;
	}

	Tab::ChangeLog->create({
		tag         => "paradigm",
		person      => $person->id,
		description => $description
	});

	my $msg = "Paradigm saved";
	$m->redirect("/user/judge/paradigm.mhtml?msg=$msg");

</%init>
