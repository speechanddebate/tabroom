<%args>
	$person
	$score_id => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($score_id) {
		$m->print('{ "error": true, "message": "No speech ID sent"}');
		$m->abort();
	}

	my $score = Tab::Score->retrieve($score_id);

	unless ($score) {
		$m->print('{ "error": true, "message": "No speech found for ID '.$score_id.'"}');
		$m->abort();
	}

	unless ($score && $score->ballot && $score->ballot->judge && $score->ballot->judge->person == $person) {
		$m->print('{ "error": true, "message": "You do not have access to delete that speech"}');
		$m->abort();
	}

	my $msg = "Score ".$score->speech." deleted with its points and feedback";

	# METHOD CHAINS OF DOOM

	$m->comp("/funclib/log.mas",
		type        => 'congress',
		tourn       => $score->ballot->panel->round->event->tourn->id,
		event       => $score->ballot->panel->round->event->id,
		person      => $person->id,
		description => $msg
	);

	eval {
		$score->delete();
	};

	my %response = (
		error   => "false",
		message => $msg,
		destroy => $score_id
	);

	$m->print(JSON::encode_json(\%response));
	$m->abort();

</%init>
