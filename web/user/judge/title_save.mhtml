<%args>
	$person
	$ballot_id      => undef
	$property_name  => undef
	$property_value => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($ballot_id) {
		$m->print('{ "error": true, "message": "No ballot ID sent"}');
		$m->abort();
	}

	unless ($property_name) {
		$m->print('{ "error": true, "message": "No property to change sent"}');
		$m->abort();
	}

	my $ballot = Tab::Ballot->retrieve($ballot_id);

	unless ($ballot) {
		$m->print('{ "error": true, "message": "No ballot found for ID '.$ballot_id.'"}');
		$m->abort();
	}

	unless ($person->site_admin) {
		unless ($ballot->judge && $ballot->judge->person && $ballot->judge->person == $person) {
			$m->print('{ "error": true, "message": "You do not have access to that ballot"}');
			$m->abort();
		}
	}

	my $title;

	if ($property_name eq "title") {

		my $title = Tab::Score->search(
			tag    => "title",
			ballot => $ballot->id
		)->first;

		if ($property_value) {

			my $text = $m->comp(
			   "/funclib/save_editor.mas",
				text => $property_value
			);

			unless ($title) {
				$title = eval {
					return Tab::Score->create({
						tag      => "title",
						ballot   => $ballot->id,
						student  => 0
					});
				};

				unless ($title) {
					$title = Tab::Score->search(
						tag    => "title",
						ballot => $ballot->id
					)->first;
				}
			}

			if ($title) {
				$title->text($text);
			}

		} elsif ($title) {
			$title->delete();
		}
	}

	$m->print('{ "error": false, "message": "'.$ballot->entry->code.' title saved to score '.$title.'"}');

	$m->abort();

</%init>

