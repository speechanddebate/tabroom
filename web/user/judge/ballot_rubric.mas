<%args>
	$panel
	$judge
	$ballots
	$event
	$event_settings
	$pronouns => undef
</%args>
<%perl>

	my %students;
	my %outstanding;
	my %role;

	my $rubric = $event_settings->{"ballot_rubric"};
	my $increments = $event_settings->{"point_increments"};

	my $step = "1" if $increments eq "whole";
	$step = "0.5"  if $increments eq "half";
	$step = "0.25" if $increments eq "fourths";
	$step = "0.1"  if $increments eq "tenths";

	my $autosave_url = "$Tab::indexcards_url/user/judge/".$judge->id."/ballot/rubric";
	my $firstscore;

	foreach my $ballot (sort {$a->side <=> $b->side} @{$ballots}) {

		my $rubric_score = $ballot->scores(tag => "rubric")->first;
		my $rubric_ref;

		if ($rubric_score) {
			$rubric_ref = eval {
				return JSON::decode_json($rubric_score->content);
			}
		}

		foreach my $score ($ballot->scores(tag => "speaker")) {
			if ($score->position) {
				$role{$score->position} = $score;
			} else {
				$outstanding{$score->value} = $score->student;
			}
		}

</%perl>
		<span class="true half nospace top">
			<h6 class="marleft martop">
				<span
					id    = "<% $ballot->id %>_side"
					class = "marright"
					side  = "<% $ballot->side %>"
				>
					<% $ballot->side == 1
						? uc($event_settings->{"aff_label"})
						: uc($event_settings->{"neg_label"})
					%>
				</span>
				<span id="<% $ballot->id %>_code">
					Team <% $ballot->entry->code %>
				</span>
			</h6>

			<span class="full centeralign">
<%perl>
				my $notfirst;
				my $side = $ballot->side;

				my $max_order;
				my %row_by_order;

				foreach my $row (sort {$a <=> $b} keys %{$rubric->{$side}}) {
					$rubric->{$side}{$row}{"id"} = $row;
					$row_by_order{$rubric->{$side}{$row}{"order"}} = $rubric->{$side}{$row};
					if ($max_order < $rubric->{$side}{$row}{"order"}) {
						$max_order = $rubric->{$side}{$row}{"order"};
					}
				}

				foreach my $order (1 .. $max_order) {

					my $row = $row_by_order{$order};
</%perl>
					<span
						class = "<% $notfirst++ ? "" : "bluebordertop" %> row nineteen nineteenth leftalign marno padtopless"
						style = "height: 64px;"
						id    = "<% $row ? $row->{id} : "" %>"
					>
						<span class="full leftalign marno padvertno">
<%perl>
							unless ($row && $row->{id}) {
								$m->print("</span>");
								$m->print("<span class='smallish graytext italic full nospace padtopless centeralign halfheight'>");
								$m->print("</span>");
								$m->print("<span class='smallish graytext italic full nospace padtopless centeralign halfheight'>");
								$m->print("</span>");
								$m->print("</span>");
								next;
							}

							unless ($students{$ballot->id}) {
								@{$students{$ballot->id}} = $ballot->entry->students;
							}
</%perl>
							<div class="full nospace flexrow">
%								if ($row->{"description"}) {
									<span class="semibold bluetext threefifths marno nowrap padleft">
										<% $row->{"label"} %>
									</span>

									<span class="explain rightalign twofifths nospace">
										<% $row->{"description"} %>
									</span>
%								} else {
									<span class="semibold bluetext full marno nowrap padleft padvertless">
										<% $row->{"label"} %>
									</span>
%								}
							</div>

							<div class="full nospace padbottomless flexrow">

%								if ($row->{"speaker"}) {
									<span class="twothirds padvertno padleft padright marno">
										<select
											name             = "<% $ballot %>_<% $row->{id} %>_speaker"
											tabindex         = "-1"
											id               = "<% $ballot %>_<% $row->{id} %>_speaker"
											row              = "<% $row->{id} %>"
											class            = "side_<% $side %>"
											onChange         = "addEmUp();"
											onBlur           = "addEmUp();"
											onTouchLeave     = "addEmUp();"
											data-placeholder = "Select the speaker"
										>
											<option value=""></option>
%											foreach my $student (sort {$a->last cmp $b->last} @{$students{$ballot->id}}) {
												<option
													value="<% $student->id %>"
													<% $rubric_ref && $rubric_ref->{$row->{id}}{"speaker"} == $student->id
														? "selected"
														: ""
													%>
												><%
													$student->first." ".$student->last
												%><%
													$pronouns->{$student->id}
													? " (".$pronouns->{$student->id}.")"
													: " "
												%></option>
%											}
										</select>
									</span>
%								}

								<span class="third rightalign grow padno flexrow">
									<span
										class = "fifth smallish fa fa-sm fa-times centeralign"
										id    = "<% $ballot %>_<% $row->{id} %>_confirm"
									>
%										if ($row->{'mult'} > 1 ) {
											<% $row->{'mult'} > 1 ? "x".$row->{"mult"} : "" %>
%										}
									</span>

									<span class="half nospace">
										<input
											id           = "<% $side %>_<% $row->{id} %>_points"
											name         = "<% $side %>_<% $row->{id} %>_points"
											type         = "number"
											tabindex     = "<% $row->{order} %><% $side %>"
											class        = "score sizeme <% $firstscore++ ? "" : "starthere" %>"
											step         = "<% $step %>"
											ballot       = "<% $ballot->id %>"
											row          = "<% $row->{id} %>"
											min          = "<% $row->{"min"} %>"
											max          = "<% $row->{"max"} %>"
											onChange     = "addEmUp();"
											onBlur       = "addEmUp();"
											onTouchLeave = "addEmUp();"
											value        = "<% $rubric_ref ? $rubric_ref->{$row->{id}}{"points"} : "" %>"
										>
									</span>

									<span class="threetenths marno smallish italic centeralign">
										<% $row->{"min"} %> - <% $row->{"max"} %>
									</span>

								</span>

							</div>
						</span>
					</span>
%				}

				<span
					class="nineteenth leftalign row bordertop marno padvertmore"
					id="<% $ballot %>_team_total"
				>
					<!-- HOW MANY CSS CLASSES CAN PALMER PUT INTO ONE ELEMENT?!
					THE LIMIT DOES NOT EXIST!!!-->

					<span class="semibold bigger redtext seventenths padleft rightalign padvert marvert">
						<% $ballot->side == 1
							? uc($event_settings->{"aff_label"})
							: uc($event_settings->{"neg_label"})
						%> TEAM TOTAL:
					</span>

					<span class="twenty"></span>

					<span
						class="bigger semibold sixth leftalign"
						id="<% $ballot->side %>_total"
					></span>
				</span>
			</span>
		</span>
%	}

	<!-- hush, purists, I'm tired -->
	<div
		class="full centeralign nospace martop padleft"
		style="width: 97%;"
	>
		<span class="odd pagefull padtopmore padbottommore bluebordertop martop leftalign">
			<span class="semibold bigger third centeralign padvert marvert padleft">
				YOUR SELECTED WINNER:
			</span>

			<span class="twothirds centeralign semibold">
				<h6 class="inline redtext" id="winner_code">
				</h6>
				<span class="spacer"></span>

				<h6 class="inline" id="winner_side">
				</h6>
			</span>
		</span>
	</div>

%	if ($event->type eq "mock_trial") {
		<div class="pagefull centeralign liblrow" style="width: 95%; margin-left: 1.2%;">
			<div class="rightalign full nospace">
				<span class="third centeralign">
					<input
						id       = "rubric_submit"
						type     = "submit"
						tabindex = "-1"
						value    = "Save Scores"
					>
				</span>
			</div>
		</div>
%	}

%	if ($event_settings->{"roles_rubric"}) {
		<h5 class="martopmuchmore padbottom ltborderbottom">
			Outstanding Individual Roles
		</h5>

		<p class="centeralign">
			These points &amp; awards are optional; use them to give points to extraordinary speakers.
		</p>

		<p class="centeralign">
			Highest scores are the best, lowest are worst.
		</p>

		<span class="full nospace centeralign marvertno padleft" style="width: 97%;">
<%perl>
			my $notfirst;
			my @students;

			my @pro_students;
			my @def_students;

			foreach my $ballot (@{$ballots}) {
				unless ($students{$ballot->id}) {
					@{$students{$ballot->id}} = $ballot->entry->students;
				}
				push @students, @{$students{$ballot->id}};

				if ($ballot->side == 1) {
					push @pro_students, @{$students{$ballot->id}};
				} else {
					push @def_students, @{$students{$ballot->id}};
				}
			}

			foreach my $order (sort {$a <=> $b} keys %{$event_settings->{"roles_rubric"}}) {

				my $row = $event_settings->{"roles_rubric"}{$order};
				my $already = $outstanding{$row->{"points"}};

				my @row_students;

				if ($row->{"side"} == 1) {
					@row_students = @pro_students;
				} elsif ($row->{"side"} == 2) {
					@row_students = @def_students;
				} else {
					@row_students = @students;
				}
</%perl>
				<span class="<% $notfirst++ ? "" : "bluebordertop martop" %> pagefull leftalign row marno">

					<span class="semibold blacktext third marno padleft">
						<% $row->{"label"} %>
					</span>

					<span class="third marno">
						<select
							tabindex = -1
							name     = "roles_<% $order %>"
							id       = "roles_<% $order %>"
							order    = "<% $order %>"
							class    = "outstanding plain fixedmost"
						>
							<option value=""></option>
%							foreach my $student (sort {$a->last cmp $b->last} @row_students) {
								<option
									id    = "<% $student->id %>_<% $order %>"
									class = "<% $student->id %> roles"
									value = "<% $student->id %>"
									<% $already == $student ? "selected" : "" %>
								><% $student->first." ".$student->last %></option>
%							}
						</select>
					</span>

					<span class="third">
%						foreach my $point (1 .. $row->{"max"}) {
							<label for="roles_<% $order %>_points_<% $point %>">
								<span class='third marno hover centeralign'>
									<input
										name  = "roles_<% $order %>_points"
										id    = "roles_<% $order %>_points_<% $point %>"
										type  = "radio"
										value = "<% $point %>"
									> <% $point %>
								</span>
							</label>
%						}
					</span>
				</span>
%			}
		</span>
%	}

%	if ($event_settings->{"speakers_rubric"}) {
		<h5 class="martopmuchmore padbottom ltborderbottom">
			Outstanding Individual Competitors
		</h5>

		<span class="full nospace centeralign marvertno padleft" style="width: 97%;">
<%perl>
			my $notfirst;
			my @students;

			foreach my $ballot (@{$ballots}) {
				push @students, @{$students{$ballot->id}};
			}

			foreach my $order (sort {$a <=> $b} keys %{$event_settings->{"speakers_rubric"}}) {

				my $row = $event_settings->{"speakers_rubric"}{$order};
				my $already = $outstanding{$row->{"points"}};
</%perl>
				<span class="<% $notfirst++ ? "" : "bluebordertop martop" %> pagefull leftalign row marno">

					<span class="semibold blacktext twofifths marno padleft">
						<% $row->{"label"}
							? $row->{"label"}
							: Lingua::EN::Numbers::Ordinate::ordinate($order)." place"
						%>
					</span>

					<span class="half marno">
						<select
							tabindex = -1
							name     = "speaker_<% $order %>"
							id       = "speakers_<% $order %>"
							order    = "<% $order %>"
							class    = "outstanding plain fixedmost"
							onChange = "noDupes();"
						>
							<option value=""></option>
%							foreach my $student (sort {$a->last cmp $b->last} @students) {
								<option
									id    = "<% $student->id %>_<% $order %>"
									class = "<% $student->id %> outstandings"
									value = "<% $student->id %>"
									<% $already == $student ? "selected" : "" %>
								><% $student->first." ".$student->last %></option>
%							}
						</select>
					</span>
				</span>
%			}
		</span>

		<div class="pagefull centeralign liblrow" style="width: 95%; margin-left: 1.2%;">
			<div class="rightalign full nospace">
				<span class="third centeralign">
					<input
						type     = "submit"
						tabindex = "-1"
						value    = "Save Scores"
					>
				</span>
			</div>
		</div>
%	}

	</form>

	<script>

		function checkAccess() {
			const url = `<% $Tab::indexcards_url %>/user/judge/<% $judge->id %>/section/<% $panel->id %>/checkBallotAccess`;
			$.ajax({
				type : 'POST',
				url,
				data        : {},
				crossDomain : true,
				xhrFields   : {
					withCredentials: true
				},
				success : function(data) {
					if (data.refresh) {
						window.location.replace(`/user/home.mhtml?err=${data.message}`);
					}
				}
			});
		};

		function addEmUp() {

			const rubric = <% JSON::encode_json($rubric) %>;
			const totals = {};
			let blanks;

			Object.keys(rubric).forEach( (side) => {

				const autoSave = {
					total : 0,
				};

				Object.keys(rubric[side]).forEach( (rowId) => {

					const row = rubric[side][rowId];
					const pointKey = `#${side}_${rowId}_points`;
					const rawPoints = $(pointKey).val();

					let points;
					if (rawPoints !== '') {
						points = parseInt(rawPoints);
					}

					if (!autoSave.ballot) {
						autoSave.ballot = $(pointKey).attr("ballot");
					}
					const speaker = $(`#${autoSave.ballot}_${rowId}_speaker`).val();

					if (points || speaker) {

						autoSave[rowId] = {};

						if (points < row.min) {
							alertify.warning("Points out of range", "Points must be at least "+row.min);
							$(pointKey).val("");
							$(pointKey).focus();
						} else if (points > row.max) {
							alertify.warning("Points out of range", "Points must not exceed "+row.max);
							$(pointKey).val("");
							$(pointKey).focus();
						} else if (row.mult > 1) {
							autoSave.total += points * row.mult;
							autoSave[rowId].ok = true;
						} else if (typeof points === 'number') {
							autoSave.total += points;
							autoSave[rowId].ok = true;
						}

						if (autoSave[rowId].ok) {
							autoSave[rowId].points = points;
							if (!autoSave.ballot) {
								autoSave.ballot = $(pointKey).attr("ballot");
							}
							autoSave[rowId].speaker = speaker;
						} else if (speaker) {
							autoSave[rowId].speaker = speaker;
						} else {
							delete autoSave[rowId];
						}


					} else {
						blanks++;
					}
				});

				$(`#${side}_total`).html(autoSave.total);

				if (autoSave.ballot) {

					totals[autoSave.ballot] = autoSave.total;

					try {
						$.ajax({
							type        : 'POST',
							url         : '<% $autosave_url %>',
							data        : autoSave,
							crossDomain : true,
							dataType    : "json",
							xhrFields: {
								withCredentials: true
							},
							success : function(data) {
								if (data.error) {
									alertify.warning(data.message);
								} else {
									Object.keys(rubric[side]).forEach( (rowId) => {
										if (autoSave[rowId]?.ok) {
											$(`#${autoSave.ballot}_${rowId}_confirm`)
												.removeClass('fa-times')
												.removeClass('redtext')
												.addClass('greentext')
												.addClass('fa-check');
										}
									});
								}
							}
						});
					} catch (err) {
						console.log(err);
					}
				}
			});

			if (blanks == undefined) {
				autoWinner(totals);
			}
		}

		function autoWinner(totals) {

			let last;
			let winner;

			Object.keys(totals).forEach( (ballot) => {
				if (last) {
					if (last < totals[ballot]) {
						winner = ballot;
						last = totals[ballot];
					} else if (last == totals[ballot]) {
						alertify.alert("Tied points forbidden", "The two teams must have different point totals!");
					}
				} else {
					winner = ballot;
					last = totals[ballot];
				}
			});

			var side = $("#"+winner+"_side").html();
			var code = $("#"+winner+"_code").html();

			$("#winner_code").html(code);
			$("#winner_side").html("Representing the "+side);

			$("#no_submit").addClass("hidden");
			$("#yes_submit").removeClass("hidden");
		}

		function noDupes() {

			$(".outstandings").prop("disabled", false);

			$(".outstanding").each( function() {
				var student = $(this).val();
				var order   = $(this).attr("order");
				if (student) {
					$("."+student).prop("disabled", "disabled");
					$(`#${student}_${order}`).prop("disabled", false);
				}
			});
		}

		$(document).ready(function() {
			addEmUp();
			noDupes();
			setInterval(checkAccess, 15000);
		});

	</script>


