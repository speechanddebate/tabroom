<%args>
	$person
	$person_settings
	$panel_id => undef
	$from     => undef
</%args>
<%init>

    unless ($panel_id) {
        my $err = "I didn't get a ballot record?";
        $m->redirect("/user/home.mhtml?err=$err");
    }

    my $panel = Tab::Panel->retrieve($panel_id);

	unless ($panel && $person) {
		$m->comp(
			"/funclib/abort.mas",
			message => "No section found for ID $panel_id"
		);
	}

	my $round = $panel->round;
	my $judge;

	if ($person->site_admin && $ARGS{"judge_id"}) {

		Tab::Judge->set_sql( panel_judge => "
			select judge.*
				from judge, ballot
			where ballot.panel = ?
				and ballot.judge = judge.id
				and judge.id = ?
		");

		$judge = Tab::Judge->search_panel_judge($panel->id, $ARGS{"judge_id"})->first;

	} else {

		Tab::Judge->set_sql( panel_person => "
			select judge.*
				from judge, ballot
			where ballot.panel = ?
				and ballot.judge = judge.id
				and judge.person = ?
		");

		$judge = Tab::Judge->search_panel_person($panel->id, $person->id)->first;
	}

    unless ($panel && $judge) {
        my $err = "No ballots found for that judge and that panel.";
        $m->redirect("/user/home.mhtml?err=$err");
    }

    unless ($person->site_admin || $judge->person->id == $person->id) {
        my $err = "You are not authorized to enter ballots for that judge.";
        $m->redirect("/user/home.mhtml?err=$err")
    }

    my @ballots = Tab::Ballot->search(
		panel => $panel->id,
		judge => $judge->id
	);

	my @clean;
	foreach my $ballot (@ballots) {
		next unless $ballot->entry > 0;
		push @clean, $ballot;
	}

	@ballots = @clean;
    unless (@ballots) {
        my $err = "That judge does not judge in that room.";
        $m->redirect("/user/home.mhtml?err=$err");
	}

	my $rfd;
	my $change;

	foreach my $ballot (@ballots) {

		unless ($ballot->audit > 0) {
			$ballot->audit(1);
			$ballot->entered_by($person->id);
			$ballot->update;
			$change++;
		}

		$rfd = Tab::Score->search(
			tag    => "rfd",
			ballot => $ballot->id
		)->first unless $rfd;
	}

	my @judges = $m->comp(
		"/funclib/panel_judges.mas",
		panel => $panel
	);

	my $event = $round->event;
	my $type = $event->type;

	my %event_settings = $event->all_settings();

	my $aff_string = $event->setting("aff_label");
	my $neg_string = $event->setting("neg_label");
	$aff_string = "Aff" unless $aff_string;
	$neg_string = "Neg" unless $neg_string;

	my $undone;

	if ($type eq "wudc") {

		foreach my $ballot ($panel->ballots) {
			unless ($ballot->audit) {
				$ballot->audit(1);
				$ballot->entered_by($person->id);
				$ballot->update;
				$change++;
			}
		}

	} elsif ($type eq "congress" || $type eq "speech") {

		if ($event_settings{"po_contest"}) {

			Tab::Panel->set_sql(po_target => "
				select panel.*
					from panel, round, event

				where event.id = ?
					and event.type = 'congress'
					and event.id = round.event
					and round.name = ?
					and round.id = panel.round
					and panel.letter = ?
			");

			my $po_panel = Tab::Panel->search_po_target(
				$event_settings{"po_contest"},
				$round->name,
				$panel->letter
			)->first;

			foreach my $ballot ($po_panel->ballots( judge => $judge)) {
				unless ($ballot->audit) {
					$ballot->audit(1);
					$ballot->entered_by($person->id);
					$ballot->update();
					$change++;
				}
			}
		}

		if ($change) {
			$m->comp("/funclib/round_done.mas", round => $round, person => $person);
		}
		my $msg = "Thank you for confirming your ballot!";
		$m->redirect("/user/judge/panels.mhtml?msg=$msg");

	} else {

		foreach my $other (@judges) {

			next if $judge->id == $other->id;

			my ($win, $winside) = $m->comp(
				'/funclib/panel_winner.mas',
					panel => $panel,
					judge => $other
			);

			$undone++ unless $win;
			undef $win;
		}
	}

	Tab::Judge->set_sql( all => "
		select count(distinct judge.id)
		from judge, ballot, panel
		where panel.round = ?
			and panel.flight = ?
			and panel.id = ballot.panel
			and ballot.judge = judge.id
	");

	Tab::Judge->set_sql( undone => "
		select count(distinct judge.id)
		from judge, ballot, panel, ballot myballot, panel mypanel
		where panel.round = ?
			and panel.flight = ?
			and panel.id = ballot.panel
			and ballot.audit = 1
			and ballot.judge = judge.id
			and ballot.timestamp <= myballot.timestamp
			and myballot.judge = ?
			and myballot.panel = mypanel.id
			and mypanel.flight = panel.flight
			and mypanel.round = panel.round
	");

	my $judge_rank = Tab::Judge->sql_undone->select_val($round->id, $panel->flight, $judge->id);
	my $judge_count = Tab::Judge->sql_all->select_val($round->id, $panel->flight);
	my $last_judge;

	if ($judge_rank == $judge_count) {
		$last_judge++;
	}

	if ($change) {
		$m->comp("/funclib/round_done.mas", round => $round, person => $person);
	}

	if ($round->setting("use_normal_rooms")) {
		$event_settings{"online_mode"} = "sync";
	}

	$panel->setting("comments_reviewed", 0);

</%init>

	<div class="main">

		<div class="full padvert marbottom nospace">

			<span class="true twofifths nospace">
				<h4 class="nospace">Results Confirmed</h4>
			</span>

			<span class="fifth nospace rightalign bluetext semibold" title="the Nathan Fleming Experience">
%				if ($event_settings{"online_mode"} && $event_settings{"online_mode"} ne "async") {
% 					if ($event_settings{"online_mode"} eq "sync") {
						Room <% $panel->room > 0 ? $panel->room->name : "" %>
% 					}
% 				}
				<span class="halfspacer"></span>
			</span>

			<span class="fifth nospace leftalign bluetext semibold" title="the Nathan Fleming Experience">
%				if ($event_settings{"online_mode"} && $event_settings{"online_mode"} ne "async") {
					<& "/funclib/online_room.mas",
						panel  => $panel,
						person => $person,
						class  => "marno top invert"
					&>
%        	   }
			</span>
			<span class="fifth rightalign nospace padbottom">
					<a
						class = "buttonwhite bluetext fa fa-lg fa-home"
						href  = "/user/home.mhtml"
						title = "Return home"
					></a>
				</span>
			</span>

		</div>

<%perl>

		unless ($event->type eq "mock_trial") {

			my $judge_you = "Yes, Tabroom.com is judging you.";
			$judge_you = "Dead last?  Did you go to Michigan State or something?" if $judge_rank == $judge_count;
			$judge_you = "You're clearly our favorite. Keep on being awesome!" if $judge_rank == 1;
</%perl>

			<p
				title = "<% $judge_you %>"
				class = "bigger bluetext centeralign padvertmore odd"
			>
				You were the
					<span class="redtext inline">
						<% Lingua::EN::Numbers::Ordinate::ordinate($judge_rank) %>
					</span>
				judge out of
					<span class="redtext inline"><% $judge_count %></span>
				to submit your ballot for <% $round->realname %> <% $round->flighted > 1 ? " Flight ".$panel->flight : "" %>
			</p>

%		}

		<span class="padvertmore"></span>

%		if ($event->type eq "mock_trial") {

			<p>
				Thank you for your service! You can see your results until the
				end of the tournament by clicking on the Past tab of your
				Tabroom home screen. If you spot a data mistake, please contact
				the tournament officials.
			</p>

<%perl>
		} elsif (
			($event->setting("hide_panel_decision") && $undone)
			|| ($event->setting("hide_final_decision") && $round->type eq "final" && $undone)
		) {
</%perl>

			<h2>
				Panel Decision Incomplete
			</h2>

			<p>
				Other judges have yet to vote, but your ballot is all set and
				confirmed. You can see your ballot ranks and edit feedback
				&amp; commentary until the end of the tournament by clicking on
				the Past tab of your ballot screen. If you spot an entry
				mistake, please contact the tournament officials.
			</p>

%		} elsif ($undone) {

			<h2>
				Panel Decision Incomplete
			</h2>

			<p>
				Other judges have yet to vote.  When all ballots are confirmed
				you can refresh this page to see the decision.  The last judge
				to vote will also automatically see the decision.
			</p>
<%perl>
		} elsif ($event->setting("hide_panel_decision")
			|| ($event->setting("hide_final_decision") && $round->type eq "final")
		) {
</%perl>
			<h2>
				Panel Decision Complete
			</h2>

			<p class="bigger bluetext semibold">
				All judges have voted; the round is over.  Thank you!
			</p>

%		} elsif ($type ne "wudc") {

			<div class="martopmuchmore flexrow">

				<span class="third nospace">
					<h5 class="nospace">
						Decision Complete
					</h5>
				</span>
<%perl>
				my $proceed++;
				my $aff_count = 0;
				my $neg_count = 0;
				my $switch;

				my %results;

				my ($winner, $side, $order) = $m->comp(
					'/funclib/panel_winner.mas',
					panel => $panel,
					judge => $judge
				);

				foreach my $ojudge (@judges) {

					my ($thiswin, $winside, $winorder) = $m->comp(
						'/funclib/panel_winner.mas',
						panel => $panel,
						judge => $ojudge,
						noob  => 1
					);

					$aff_count++ if $winside == 1;
					$neg_count++ if $winside == 2;
					$side = $aff_string if $winside == 1;
					$side = $neg_string if $winside == 2;

					$results{$ojudge->id}{"votes"} = $thiswin->code if $thiswin;
					$results{$ojudge->id}{"side"} = $side;

					if ($winorder > 0) {
						if ($event_settings{"no_side_constraints"}) {
							$results{$ojudge->id}{"side"} = "the ".Lingua::EN::Numbers::Ordinate::ordinate($winorder);
							$results{$ojudge->id}{"side"} = " speakers on the ".$results{$ojudge->id}{"side"};
						}
					}
				}
</%perl>
				<span class="twothirds rightalign bigger semibold bluetext nospace">
%					if (scalar @judges > 1) {
%						if ($aff_count == $neg_count) {
							<% $aff_count."-".$neg_count %> SPLIT DECISION
%						} elsif ($aff_count > $neg_count) {
							<% $aff_count."-".$neg_count %> decision for the <% $aff_string %>
%						} else {
							<% $neg_count."-".$aff_count %> decision for the <% $neg_string %>
%						}
%					} else {
						<% $winner? $winner->code : "" %> wins on the <% $side %>
%					}
				</span>

			</div>

%			foreach my $ojudge (@judges) {

				<div class="odd ltbordertop martopmore">

					<span class="padvertmore sixth">
					</span>

					<span class="padvertmore threetenths biggish">
						<span class="halfspacer"></span>
						<% $ojudge->first." ".$ojudge->last %>  votes for
					</span>

					<span class="sixth biggish redtext marno">
						<span class='quarterspacer'></span>
						<% $results{$ojudge->id}{"side"} %>
					</span>

					<span class="threetenths biggish">
						<% $results{$ojudge->id}{"votes"} %>
					</span>

				</div>
%			}

%			if ($event->setting("judge_publish_results")) {

				<h5 class="martopmuchmore">
					Communications
				</h5>

				<div class="odd padvertmore">

					<span class="twenty">
					</span>

					<span class="seventenths nospace leftalign ">
						<div class="redtext semibold bigger">
							Come Back!
						</div>

						<p class="graytext semibold biggish padleftmore">
							Notify competitors &amp; other judges) to return to
							the room to hear disclosure and feedback.
							This blast does not reveal results.
						</p>
					</span>

					<span class="quarter rightalign nospace">
						<div
							id    = "summoned"
							class = "hidden greentext semibold"
						>
							<span class="inline fa fa-lg fa-check">
							</span>
							Notices Sent
						</div>

						<div id="summonme">
							<a
								class     = "centeralign buttonwhite bluetext invert bigger small"
								panel_id = "<% $panel->id %>"
								onClick   = "postSwitch(this, 'panel_summon.mhtml');"
							>Summon Them</a>
						</div>
					</span>
				</div>

				<div class="odd padvertmore">

					<span class="twenty">
					</span>

					<span class="seventenths nospace leftalign ">
						<div class="redtext semibold bigger">
							Publish the Result Online
						</div>

						<p class="graytext semibold padleftmore biggish">
							After the result is announced in the room, you may
							publish the result online &amp; notify coaches.
						</p>
					</span>

%					my $warning = "This will post the result online. Please be sure it has announced before doing so.";

					<span class="quarter rightalign nospace">
						<div
							id="published"
							class="<% $panel->publish ? "" : "hidden" %> greentext semibold">
							<span class="inline fa fa-lg fa-check">
							</span>
							Section Result is Published
						</div>

						<div id="publishme" class="<% $panel->publish ? "hidden" : "" %>">
							<a
								class     = "centeralign buttonwhite bluetext invert bigger"
								panel_id = "<% $panel->id %>"
								onClick   = "postSwitch(this, 'publish_panel.mhtml');"

								<& "/funclib/confirm.mas",
									warn => $warning
								&>
							>Publish Result</a>
						</div>
					</span>

				</div>
%			}

%			if ($rfd) {

				<h5 class="martopmuchmore">
					Your RFD
				</h5>

				<div style="padleftmuchmore">
					<% $rfd->text %>
				</div>
%			}

%			my $now = DateTime->now;

	</div>

		<& "/user/menu.mas", person => $person &>

<%perl>

	} else {
		my $msg = "Thank you for entering your ballot. ";
		$msg .= "If you made a mistake, please contact the tournament staff.";

		$m->redirect("/user/home.mhtml?msg=$msg");
	}

</%perl>


