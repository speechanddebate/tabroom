<%args>
	$person
	$person_settings
	$default => "current_ballots"
	$dbh
	$now
</%args>
<%init>

	my $sth;

	# Live Docs

	$sth = $dbh->prepare("
		select judge.id,
			category.abbr,
			tourn.name tourn_name,
			CONVERT_TZ(tourn.end, '+00:00', tourn.tz) tourn_end,
			livedoc_url.value_text url,
			livedoc_caption.value caption

		from (judge, category, tourn, category_setting livedoc_url)

			left join category_setting livedoc_caption
				on livedoc_caption.category = category.id
				and livedoc_caption.tag = 'livedoc_caption'

		where judge.person = ?
			and judge.category = category.id
			and category.tourn = tourn.id
			and tourn.end > NOW()
			and tourn.start > DATE_SUB(NOW(), INTERVAL 7 DAY)
			and tourn.hidden != 1
			and category.id = livedoc_url.category
			and livedoc_url.tag = 'livedoc_url'
	");

	$sth->execute($person->id);
	my $livedocs = $sth->fetchall_hash();

	# Training Rounds
	$sth = $dbh->prepare("
		select judge.id, judge.code, judge.first, judge.last,
			category.id, category.abbr, category.name,
			tourn.id, tourn.name,
			CONVERT_TZ(tourn.end, '+00:00', tourn.tz) tourn_end,
			tourn.tz tourn_tz,
			training_label.value,
			training_room.value,
			training_time.value,
			event.id, event.abbr, event.type,
			aff_label.value aff,
			neg_label.value neg,
			start_button_text.value start_text,
			start_button.value start

		from (judge, category, tourn, category_setting cs)

		left join category_setting training_label
			on training_label.category = category.id
			and training_label.tag = 'training_label'

		left join category_setting training_room
			on training_room.category = category.id
			and training_room.tag = 'training_room'

		left join category_setting training_time
			on training_time.category = category.id
			and training_time.tag = 'training_time'

		left join event on event.category = category.id

		left join event_setting start_button
			on start_button.event = event.id
			and start_button.tag = 'start_button'

		left join event_setting start_button_text
			on start_button_text.event = event.id
			and start_button_text.tag = 'start_button_text'

		left join event_setting aff_label
			on aff_label.event = event.id
			and aff_label.tag = 'aff_label'

		left join event_setting neg_label
			on neg_label.event = event.id
			and neg_label.tag = 'neg_label'

		where judge.person = ?
			and judge.category = category.id
			and category.id = cs.category
			and cs.tag = 'show_training'

			and category.tourn = tourn.id
			and tourn.end > now()
			and tourn.hidden != 1

			and (
				exists (
					select weekend.id
						from weekend, category_setting cws
					where weekend.tourn = tourn.id
						and cws.tag = 'weekend'
						and cws.value = weekend.id
						and weekend.start < now()
						and cws.category = judge.category
						and weekend.end > now()
				) or not exists (
					select weekend.id
					from weekend
					where weekend.tourn = tourn.id
				)
			)

			and tourn.id > 20000

		and not exists (
				select js.id
			from judge_setting js
				where js.judge = judge.id
			and js.tag = 'ballot_trained'
		)

		group by judge.id
		order by tourn.start
	");

	my %trainings = ();

	$sth->execute($person->id);

	my $current_tourn;
	my $mock_trial;

	while (
		my (
			$judge_id, $judge_code, $judge_first, $judge_last,
				$category_id, $category_abbr, $category_name,
				$tourn_id, $tourn_name, $tourn_end, $tourn_tz,
				$training_label, $training_room, $training_time,
				$event_id, $event_abbr, $event_type,
				$aff_label, $neg_label,
				$start_text, $start
		) = $sth->fetchrow_array()
	) {
		$trainings{$judge_id}{"code"}           = $judge_code;
		$trainings{$judge_id}{"first"}          = $judge_first;
		$trainings{$judge_id}{"last"}           = $judge_last;
		$trainings{$judge_id}{"category_id"}    = $category_id;
		$trainings{$judge_id}{"category_abbr"}  = $category_abbr;
		$trainings{$judge_id}{"category_name"}  = $category_name;
		$trainings{$judge_id}{"tourn_name"}     = $tourn_name;
		$trainings{$judge_id}{"tourn_end"}      = $tourn_end;
		$trainings{$judge_id}{"tourn_tz"}       = $tourn_tz;
		$trainings{$judge_id}{"training_label"} = $training_label;
		$trainings{$judge_id}{"training_room"}  = $training_room;
		$trainings{$judge_id}{"training_time"}  = $training_time;

		$trainings{$judge_id}{"start_text"} = $start_text;
		$trainings{$judge_id}{"start"}      = $start || "START ROUND";
		$trainings{$judge_id}{"aff_label"}  = $aff_label || "Aff";
		$trainings{$judge_id}{"neg_label"}  = $neg_label || "Neg";

		$trainings{$judge_id}{"event_id"} = $event_id;
		$trainings{$judge_id}{"event_abbr"} = $event_abbr;
		$trainings{$judge_id}{"event_type"} = $event_type;
	}

	# Actual Ballots

	$sth = $dbh->prepare("
		select
			judge.id, judge.code, judge.first, judge.last,
			judge.obligation, judge.hired,
			category.id, category.name, category.abbr,
			event.id, event.name, event.abbr, event.type,
			round.id, round.name, round.label, round.published, round.flighted, round.type,
			CONVERT_TZ(round.start_time, '+00:00', tourn.tz),
			CONVERT_TZ(round.start_time, '+00:00', person.tz),
			CONVERT_TZ(timeslot.start, '+00:00', tourn.tz),
			CONVERT_TZ(timeslot.start, '+00:00', person.tz),
			CONVERT_TZ(timeslot.end, '+00:00', tourn.tz),
			CONVERT_TZ(timeslot.end, '+00:00', person.tz),
			timeslot.end,
			panel.id, panel.letter, panel.flight,
			ballot.id, ballot.side, ballot.speakerorder, ballot.audit, ballot.judge_started, ballot.chair,
			entry.id, entry.code,
			room.id, room.name, room.url, room.notes,
			online_mode.value,
			use_normal_rooms.value,
			online_ballots.value,
			judges_ballots_visible.value,
			aff_label.value,
			neg_label.value,
			legion.value,
			service_project.value_text,
			mock_trial.value,
			include_room_notes.value,
			flight_offset.value,
			start_button.value,
			start_button_text.value,
			sidelock_elims.value,
			no_side_constraints.value,
			async.value,
			person.tz,
			tourn.name, tourn.tz, tourn.hidden,
			CONVERT_TZ(tourn.end, '+00:00', tourn.tz) tourn_end,
			score.id, permission.chapter, school.id, school.name,
			rounds_per.value,
			flip_status.value

		from (judge, category, event, round, panel, ballot, entry, tourn, timeslot, person)

			left join school on judge.school = school.id

			left join permission on permission.person = judge.person
				and permission.tag = 'chapter'
				and permission.chapter = school.chapter

			left join category_setting rounds_per
				on rounds_per.category = category.id
				and rounds_per.tag = 'rounds_per'

			left join room on panel.room = room.id

			left join score on score.ballot = ballot.id
				and score.tag in ('winloss', 'rank', 'point', 'refute')

			left join event_setting start_button
				on start_button.event = event.id
				and start_button.tag = 'start_button'

			left join event_setting start_button_text
				on start_button_text.event = event.id
				and start_button_text.tag = 'start_button_text'

			left join event_setting flight_offset
				on flight_offset.event = event.id
				and flight_offset.tag = 'flight_offset'

			left join event_setting sidelock_elims
				on sidelock_elims.event = event.id
				and sidelock_elims.tag = 'sidelock_elims'

			left join event_setting no_side_constraints
				on no_side_constraints.event = event.id
				and no_side_constraints.tag = 'no_side_constraints'

			left join round_setting use_normal_rooms
				on use_normal_rooms.round = round.id
				and use_normal_rooms.tag = 'use_normal_rooms'

			left join event_setting online_mode
				on online_mode.event = event.id
				and online_mode.tag = 'online_mode'

			left join event_setting online_ballots
				on online_ballots.event = event.id
				and online_ballots.tag = 'online_ballots'

			left join event_setting aff_label
				on aff_label.event = event.id
				and aff_label.tag = 'aff_label'

			left join event_setting neg_label
				on neg_label.event = event.id
				and neg_label.tag = 'neg_label'

			left join tourn_setting legion
				on legion.tourn = tourn.id
				and legion.tag = 'legion'

			left join tourn_setting service_project
				on service_project.tourn = tourn.id
				and service_project.tag = 'service_project'

			left join tourn_setting mock_trial
				on mock_trial.tourn = tourn.id
				and mock_trial.tag = 'mock_trial_registration'

			left join round_setting judges_ballots_visible
				on judges_ballots_visible.round = round.id
				and judges_ballots_visible.tag = 'judges_ballots_visible'

			left join round_setting include_room_notes
				on include_room_notes.round = round.id
				and include_room_notes.tag = 'include_room_notes'

			left join panel_setting flip_status
				on flip_status.panel = panel.id
				and flip_status.tag = 'flip_status'

			left join panel_setting async
				on async.panel = panel.id
				and async.tag = 'show_async'

		where judge.person = ?
			and judge.person = person.id
			and judge.category = category.id
			and category.tourn = tourn.id
			and tourn.end > now()
			and tourn.id > 10000

			and judge.id       = ballot.judge
			and ballot.entry   = entry.id
			and entry.active   = 1
			and ballot.panel   = panel.id
			and panel.round    = round.id
			and round.event    = event.id
			and round.timeslot = timeslot.id

		group by panel.id, judge.id, ballot.entry
		order by timeslot.start, event.abbr, round.name, panel.flight, ballot.audit
	");

	my %open_panels;
	my %dashboards;
	my %schools;

	my $sp;

	$sth->execute($person->id);

	while (
		my (
			$judge_id, $judge_code, $judge_first, $judge_last,
			$judge_obligation, $judge_hired,
			$category_id, $category_name, $category_abbr,
			$event_id, $event_name, $event_abbr, $event_type,
			$round_id, $round_name, $round_label, $round_published, $round_flighted, $round_type,
			$round_start, $my_round_start,
			$timeslot_start, $my_timeslot_start,
			$timeslot_end, $my_timeslot_end, $raw_end,
			$panel_id, $panel_letter, $panel_flight,
			$ballot_id, $ballot_side, $ballot_speakerorder, $ballot_audit, $ballot_judge_started, $chair,
			$entry_id, $entry_code,
			$room_id, $room_name, $room_url, $room_notes,
			$online_mode,
			$use_normal_rooms,
			$online_ballots,
			$judges_ballots_visible,
			$aff_label, $neg_label, $legion,
			$service_project,
			$mt, $include_room_notes,
			$flight_offset,
			$start_button,
			$start_button_text,
			$sidelock_elims,
			$no_side_constraints,
			$async,
			$person_tz,
			$tourn_name, $tourn_tz, $tourn_hidden,
			$tourn_end,
			$score, $chapter, $school, $school_name,
			$rounds_per,
			$flip_status
		) = $sth->fetchrow_array()
	) {

		if ($chapter) {
			$dashboards{$school} = $tourn_name;
			$schools{$school}{'name'} = $m->comp(
				"/funclib/short_name.mas",
					name   => $school_name,
					return => 1
				);
			$schools{$school}{"tourn"} = $tourn_name;
		}

		if ($mt) {
			$mock_trial++;
		}
		unless ( $round_published == 1 || $judges_ballots_visible == 1) {
			next;
		}

		my $end_ref = $m->comp('/funclib/dtme.mas',
			string => $raw_end,
			return => 1
		);

		if (($event_type eq "congress" || $event_type eq "mock_trial")
			&& $ballot_audit > 0
			&& $chair
			&& $now < $end_ref->{dt}
		) {
			$open_panels{$panel_id}{"no_ballot"}++;
		} elsif ($ballot_audit > 0) {
			next;
		}

		if ($online_mode eq "async") {
			my $end = DateTime::Format::MySQL->parse_datetime($raw_end);
			if ($end < $now) {
				next;
			}
		} elsif ($online_mode && $use_normal_rooms) {
			$online_mode = "sync";
		}

		if ($tourn_hidden) {
			$open_panels{$panel_id}{"hidden"}++;
		}

		if ($score) {

			$open_panels{$panel_id}{"status"} = "CONFIRM RESULT";
			$open_panels{$panel_id}{"ballotcolor"} = "redtext";
			$open_panels{$panel_id}{"start_text"} = $start_button_text;

		} elsif ($chair && $event_type eq "mock_trial") {
			if ($start_button) {
				$open_panels{$panel_id}{"status"} = $start_button;
				$open_panels{$panel_id}{"start_text"} = $start_button_text;
			} else {
				$open_panels{$panel_id}{"status"} = "START ROUND";
				$open_panels{$panel_id}{"start_text"} = $start_button_text;
			}
			$open_panels{$panel_id}{"ballotcolor"} = "greentext";

		} elsif ($chair && $event_type eq "congress" && $ballot_audit) {

			$open_panels{$panel_id}{"status"} = "SESSION INFO";
			$open_panels{$panel_id}{"ballotcolor"} = "bluetext";
			$open_panels{$panel_id}{"start_text"} = $start_button_text;

		} elsif ($ballot_judge_started) {
			$open_panels{$panel_id}{"status"} = "ENTER BALLOT";
			$open_panels{$panel_id}{"ballotcolor"} = "bluetext";
			$open_panels{$panel_id}{"start_text"} = $start_button_text;
		} else {
			if ($start_button) {
				$open_panels{$panel_id}{"status"} = $start_button;
				$open_panels{$panel_id}{"start_text"} = $start_button_text;
			} else {
				$open_panels{$panel_id}{"status"} = "START ROUND";
				$open_panels{$panel_id}{"start_text"} = $start_button_text;
			}
			$open_panels{$panel_id}{"ballotcolor"} = "greentext";
		}

		unless ($open_panels{$panel_id}{"judge_id"}) {
			$open_panels{$panel_id}{"judge_id"}         = $judge_id;
			$open_panels{$panel_id}{"judge_code"}       = $judge_code;
			$open_panels{$panel_id}{"judge_last"}       = $judge_last;
			$open_panels{$panel_id}{"judge_first"}      = $judge_first;

			if ($rounds_per) {
				$open_panels{$panel_id}{"judge_obligation"} = ($judge_obligation + $judge_hired);
			}

			$open_panels{$panel_id}{"category_id"}    = $category_id;
			$open_panels{$panel_id}{"category_name"}  = $category_name;
			$open_panels{$panel_id}{"category_abbr"}  = $category_abbr;
			$open_panels{$panel_id}{"event_id"}       = $event_id;
			$open_panels{$panel_id}{"event_name"}     = $event_name;
			$open_panels{$panel_id}{"event_type"}     = $event_type;
			$open_panels{$panel_id}{"event_abbr"}     = $event_abbr;
			$open_panels{$panel_id}{"flight_offset"}  = $flight_offset;
			$open_panels{$panel_id}{"round_id"}       = $round_id;
			$open_panels{$panel_id}{"round_flighted"} = $round_flighted;
			$open_panels{$panel_id}{"round_type"}     = $round_type;
			$open_panels{$panel_id}{"round_label"}    = $round_label;
			$open_panels{$panel_id}{"panel_letter"}   = $panel_letter;
			$open_panels{$panel_id}{"panel_flight"}   = $panel_flight;

			if ($async) {
				$open_panels{$panel_id}{"panel_async"}++;
			}

			$open_panels{$panel_id}{"room_id"}         = $room_id;
			$open_panels{$panel_id}{"room_name"}       = $room_name;
			$open_panels{$panel_id}{"room_url"}        = $room_url;
			$open_panels{$panel_id}{"online_ballots"}  = $online_ballots;
			$open_panels{$panel_id}{"online_mode"}     = $online_mode;
			$open_panels{$panel_id}{"legion"}          = $legion;

			if ($service_project) {
				$sp = $service_project;
			}

			$open_panels{$panel_id}{"chair"}           = $chair;

			if ($round_label) {
				$open_panels{$panel_id}{"round_name"} = $round_label;
			} elsif ($event_type eq "congress") {
				$open_panels{$panel_id}{"round_name"} = "Session ".$round_name;
			} else {
				$open_panels{$panel_id}{"round_name"} = "Round ".$round_name;
			}

			$open_panels{$panel_id}{"round_number"} = $round_name;

			if ($include_room_notes && $room_notes) {
				$open_panels{$panel_id}{"room_notes"} = $room_notes;
			}

			$open_panels{$panel_id}{"tourn_name"}   = $tourn_name;
			$open_panels{$panel_id}{"tourn_end"}    = $tourn_end;
			$open_panels{$panel_id}{"round_tz"}     = $tourn_tz;
			$open_panels{$panel_id}{"round_end"}    = $timeslot_end;
			$open_panels{$panel_id}{"my_round_end"} = $my_timeslot_end;

			if ($online_mode && defined $person_tz && ($person_tz ne $tourn_tz)) {

				if ($round_start) {
					$open_panels{$panel_id}{"round_start"} = $round_start;
					$open_panels{$panel_id}{"my_round_start"} = $my_round_start;
				} else {
					$open_panels{$panel_id}{"round_start"} = $timeslot_start;
					$open_panels{$panel_id}{"my_round_start"} = $my_timeslot_start;
				}

				$open_panels{$panel_id}{"person_tz"} = $person_tz;

			} else {
				if ($round_start) {
					$open_panels{$panel_id}{"round_start"} = $round_start;
				} else {
					$open_panels{$panel_id}{"round_start"} = $timeslot_start;
				}
			}
		}

		$open_panels{$panel_id}{"entries"}{$entry_id}{"code"} = $entry_code;

		if ($event_type eq "speech" | $event_type eq "congress") {

			$open_panels{$panel_id}{"entries"}{$entry_id}{"side_sort"} = $ballot_speakerorder;
			$open_panels{$panel_id}{"entries"}{$entry_id}{"side"} = $ballot_speakerorder;

		} elsif ($event_type eq "wudc") {

			$open_panels{$panel_id}{"entries"}{$entry_id}{"side_sort"} = $ballot_speakerorder;

			if ($ballot_speakerorder == 1) {
				$open_panels{$panel_id}{"entries"}{$entry_id}{"side"} = "1G";
			} elsif ($ballot_speakerorder == 2) {
				$open_panels{$panel_id}{"entries"}{$entry_id}{"side"} = "1O";
			} elsif ($ballot_speakerorder == 3) {
				$open_panels{$panel_id}{"entries"}{$entry_id}{"side"} = "2G";
			} elsif ($ballot_speakerorder == 4) {
				$open_panels{$panel_id}{"entries"}{$entry_id}{"side"} = "2O";
			}

		} else {

			$open_panels{$panel_id}{"entries"}{$entry_id}{"side_sort"} = $ballot_side;
			$open_panels{$panel_id}{"flip_status"} = $flip_status;
			$open_panels{$panel_id}{"no_side_constraints"} = $no_side_constraints;
			$open_panels{$panel_id}{"entries"}{$entry_id}{"order"} = $ballot_speakerorder;

			if ($open_panels{$panel_id}{"max_orders"} < $ballot_speakerorder) {
				$open_panels{$panel_id}{"max_orders"} = $ballot_speakerorder;
			}

			if (
				(($round_type eq "elim" || $round_type eq "final")
					&& (not defined $sidelock_elims)
					&& ($flip_status ne "done")
				) || $no_side_constraints
			) {

				$open_panels{$panel_id}{"entries"}{$entry_id}{"side"} = "";

			} else {

				if ($ballot_side == 1) {
					$open_panels{$panel_id}{"entries"}{$entry_id}{"side"} = $aff_label || "Aff";
				} elsif ($ballot_side == 2) {
					$open_panels{$panel_id}{"entries"}{$entry_id}{"side"} = $neg_label || "Neg";
				}
			}
		}
	}

	$sth->finish();

	# Judge pools
	$sth = $dbh->prepare("

		select
			jpool.id, jpool.name,
			site.name site,
			message.value_text message,
			category.abbr category, tourn.name tourn,
			CONVERT_TZ(tourn.end, '+00:00', tourn.tz) tourn_end,
			judge_sheet_notice.value_text notice,
			standby.value standby,
			timeslot.name timeslot_name,
			timeslot.start timeslot_start,
			timeslot.end timeslot_end,
			CONVERT_TZ(tourn.end, '+00:00', tourn.tz) tourn_end,
			tourn.tz tz

		from (judge, jpool, jpool_judge, jpool_setting show_judges, category, tourn)

			left join jpool_setting message
				on message.tag = 'message'
				and message.jpool = jpool.id

			left join category_setting judge_sheet_notice
				on judge_sheet_notice.category = category.id
				and judge_sheet_notice.tag = 'judge_sheet_notice'

			left join site on jpool.site = site.id

			left join jpool_setting standby
				on standby.jpool = jpool.id
				and standby.tag = 'standby'

			left join jpool_setting standby_timeslot
				on standby_timeslot.jpool = jpool.id
				and standby_timeslot.tag = 'standby_timeslot'

			left join timeslot on timeslot.id = standby_timeslot.value

		where judge.person = ?
			and jpool_judge.judge = judge.id
			and jpool_judge.jpool = jpool.id
			and jpool.id = show_judges.jpool
			and show_judges.tag = 'show_judges'
			and jpool.category = category.id
			and category.tourn = tourn.id

			and tourn.end > now()
			and timeslot.end < now()

		order by jpool.name
	");

	$sth->execute($person->id);

	my $results = $sth->fetchall_hash();
	my %jpools = map {$_->{id} => $_} @{$results};

	my %standbys;

	foreach my $id (keys %jpools) {
		if ($jpools{$id}{"standby"}) {
			$standbys{$id} = $jpools{$id};
			delete $jpools{$id};
		}
	}

	$sth->finish();
	$sth = $dbh->prepare("
		select
			tourn.id, tourn.name,
			judge.id, judge.code, judge.first, judge.last,
			judge.obligation, judge.hired,
			category.id, category.abbr,
			school.name, school.id,
			online_rooms.value_text,
			nc_purchased.value

		from (tourn, judge, category)

			left join tourn_setting online_rooms
				on online_rooms.tourn = tourn.id
				and online_rooms.tag = 'online_rooms'

			left join school on school.id = judge.school

			left join tourn_setting nc_purchased
				on nc_purchased.tourn = tourn.id
				and nc_purchased.tag = 'nc_purchased'

		where judge.person = ?
			and judge.category = category.id
			and category.tourn = tourn.id

		and tourn.end > now()
		and tourn.start < now()
		and tourn.hidden != 1
	");

	$sth->execute($person->id);

	my %rooms;
	my %squad_rooms;

	while (
		my (
			$tourn_id, $tourn_name,
			$judge_id, $judge_code, $judge_first, $judge_last,
			$obligation, $hired,
			$category_id, $category_abbr, $school_name, $school_id,
			$online_rooms, $campus
		) = $sth->fetchrow_array()
	) {


		if ($school_id && $campus) {
			$schools{$school_id}{'name'} = $m->comp("/funclib/short_name.mas", name => $school_name, return => 1);
			$schools{$school_id}{'tourn'} = $tourn_name;
			$squad_rooms{$school_id} = $tourn_name;
		}

		my @local_rooms = eval{
			return @{JSON::decode_json($online_rooms)};
		};

		if (@local_rooms) {
			foreach my $room (@local_rooms) {
				if (
					$room->{access} eq "judge"
					&& (
						(not defined $room->{category_id})
						|| $room->{category_id} == ""
						|| $room->{category_id} == $category_id
					)
				) {
					$rooms{$tourn_id}{"judge"}{$room->{id}}{name} = $room->{"name"};
					$rooms{$tourn_id}{"judge"}{$room->{id}}{thing} = $room;
					$rooms{$tourn_id}{"tourn_name"} = $tourn_name;
				}
			}
		}
	}

	$sth->finish();

	my @tabs = ("current_ballots");

	my $fine_sth = $dbh->prepare("
		select
			fine.id, fine.reason, fine.amount,
			currency.value currency,
			school.name school,
			CONVERT_TZ(fine.levied_at, '+00:00', tourn.tz) levied,
			judge.id judge, judge.code jcode,
			category.abbr, tourn.name tourn

		from (fine, judge, category, tourn)

			left join school
				on fine.school = school.id

			left join tourn_setting currency
				on currency.tourn = tourn.id
				and currency.tag = 'currency'


		where judge.person = ?
			and judge.id = fine.judge
			and judge.category = category.id
			and category.tourn = tourn.id
			and tourn.end > now()
			and fine.deleted = 0
			and fine.tourn = tourn.id
	");

	$fine_sth->execute($person);

	my $fines = $fine_sth->fetchall_hash();

	unless ($mock_trial > 0) {
		push @tabs, "past_scores_and_feedback";
	}

	if ($fines && scalar @{$fines} > 0) {
		push @tabs, "fines";
	}


</%init>

	<&
		"/user/menu.mas",
		person => $person
	&>

	<div class="main">

		<h4><% $person->first %> <% $person->last %>'s Judging</h4>

		<& "/funclib/tabs.mas",
			tabs    => \@tabs,
			default => $default,
			darkon  => 1,
			nospace => 1
		&>

		<div class="screens darkscreen current_ballots padleft padright marno">

%		if (keys %trainings) {

			<span class="pagehalf padright">

				<h5>
					Training Ballots
				</h5>
<%perl>
				foreach my $id (
					sort {
						$trainings{$a}{"training_label"} cmp $trainings{$b}{"training_label"}
					} keys %trainings
				) {

					unless ($trainings{$id}{"training_label"}) {
						$trainings{$id}{"training_label"} = "Judge Training";
					}

					unless ($trainings{$id}{"training_room"}) {
						$trainings{$id}{"training_room"}  = "Room TBA";
					}
</%perl>
					<div class = "bluebordertop odd marbottom" title = "Training Ballot">

						<div class='full flexrow'>
							<span class='quarter semibold padleft'>
								Round
							</span>
							<span class="threequarters flexrow">
								<span class='fourfifths padvertless'>
									<% $trainings{$id}{"training_label"} %>
								</span>
								<span class='fifth rightalign'>
									<a
										class  = "buttonwhite bluetext fa fa-table fa-sm"
										target = "_blank"
										title  = "Public Round Schematic"
									></a>
								</span>
							</span>
						</div>

						<div class='full flexrow ltbordertop padvert'>
							<span class='quarter semibold padleft'>
								Room
							</span>
							<span class='threequarters'>
								<% $trainings{$id}{"training_room"} %>
							</span>
						</div>

						<div class='full flexrow ltbordertop'>
							<span class='quarter semibold padvert padleft'>
								Start
							</span>
							<span class='threequarters nospace'>
								<% $trainings{$id}{"training_time"} ? $trainings{$id}{"training_time"} : "TBA" %>
							</span>
						</div>

						<div class='full flexrow ltborderbottom ltbordertop'>
							<span class='quarter semibold padleft'>
								Entries
							</span>

							<span class='threequarters padvertless smallish'>

%							if ($trainings{$id}{"event_type"} eq "debate") {

								<div class="leftalign full padvertless flexrow">
									<span class="fifth semibold nospace">
										<% $trainings{$id}{"aff_label"} %>
									</span>
									<span class="fourfifths nospace">
										South High School A
									</span>
								</div>

								<div class="leftalign full padvertless flexrow">
									<span class="fifth nospace semibold">
										<% $trainings{$id}{"neg_label"} %>
									</span>
									<span class="fourfifths nospace">
										North High School Z
									</span>
								</div>
%							} else {
%								foreach my $order (1 .. 6) {
									<span class="threetenths padvertless smallish flexrow wrap">
										<span class="fifth semibold">
											<% $trainings{$id}{"event_type"} eq "speech" ? $order : "" %>
										</span>
										<span class="fourfifths">
											<% $order.$order.$order.$order %>
										</span>
									</span>
%								}
%							}
							</span>
						</div>

						<div class='full ltbordertop flexrow wrap'>
%							if ($trainings{$id}{"start_text"}) {
								<div class="full padvert padleftmore nospace explain semibold leftalign graytext padbottom">
									<% $trainings{$id}{"start_text"} %>
								</div>
%							}

							<div class="full flexrow padbottom">

								<span class="half centeralign">
								</span>

								<span class="half centeralign padright">
									<a
										class="greentext buttonwhite invert marno padmore"
										href="training.mhtml?sample=1&event_id=<% $trainings{$id}{"event_id"} %>&judge_id=<% $id %>"
									>
										<% $trainings{$id}{"start"} %>
									</a>
								</span>
							</div>
						</div>
					</div>
%				}
			</span>
%		}

%		if (keys %open_panels || keys %standbys) {

%			my $notfirst;

			<span class="pagehalf">
				<h5>
					Current Assignments
				</h5>
<%perl>
				foreach my $jpool_id (
					sort {
						$standbys{$a}{"timeslot_start"} <=> $standbys{$b}{"timeslot_start"}
						|| $standbys{$a}{"timeslot_end"} <=> $standbys{$b}{"timeslot_end"}
					} keys %standbys
				) {
</%perl>

					<div class = "bluebordertop odd marbottom <% $notfirst++ ? "martopless" : "" %>"
						id     = "<% $jpool_id %>"
					>
						<div class='full padvert flexrow'>
							<span class='quarter semibold padleft'>
								Standby
							</span>
							<span class="threequarters nospace">
								<span class='fourfifths true nospace padvertless'>
									<% $standbys{$jpool_id}{"name"} %>
								</span>
								<span class='fifth rightalign padvertless'>
								</span>
							</span>
						</div>

						<div class='full ltbordertop flexrow'>
							<span class='quarter semibold padvert padleft'>
								Round
							</span>

							<span class='threequarters nospace'>
								<% $standbys{$jpool_id}{"timeslot_name"} %>
							</span>
						</div>

						<div class='full ltbordertop flexrow'>
							<span class='quarter semibold padvert padleft'>
								Time
							</span>
							<span class='threequarters nospace'>
								<& "/funclib/showtime.mas",
									string => $standbys{$jpool_id}{"timeslot_start"},
									tz     => $standbys{$jpool_id}{"tz"},
									format => "day"
								&>
							</span>
						</div>

% 						if ($standbys{$jpool_id}{"site"}) {
							<div class='full ltbordertop flexrow'>
								<span class='quarter semibold padvert padleft'>
									Location
								</span>
								<span class='threequarters nospace'>
									<% $standbys{$jpool_id}{"site"} %>
								</span>
							</div>
%						}
% 						if ($standbys{$jpool_id}{"message"}) {
							<div class='full ltbordertop flexrow'>
								<span class='quarter semibold padvert'>
									Instructions
								</span>
								<span class='threequarters nospace'>
									<p class="smallish">
										<% $standbys{$jpool_id}{"message"} %>
									</p>
								</span>
							</div>
%						}
					</div>
<%perl>
				}

				foreach my $panel_id (
					sort {
						$open_panels{$a}{"round_number"} <=> $open_panels{$b}{"round_number"}
						|| $open_panels{$a}{"panel_flight"} <=> $open_panels{$b}{"panel_flight"}
					} keys %open_panels
				) {

					my $add = ($open_panels{$panel_id}{"panel_flight"} - 1) * $open_panels{$panel_id}{"flight_offset"};
					my $tourn_id = $open_panels{$panel_id}{"tourn_id"};
					my $round_id = $open_panels{$panel_id}{"round_id"};

					my $title = "Round at ".$open_panels{$panel_id}{"tourn_name"};
					$title .= " in ".$open_panels{$panel_id}{"category_name"};
					$title .= " for ".$open_panels{$panel_id}{"judge_last"};
</%perl>

					<div class = "bluebordertop odd marbottom <% $notfirst++ ? "martopless" : "" %> flexkids"
						id     = "<% $panel_id %>"
						title  = "<% $title %>"
					>
						<div class='full flexrow'>
							<span class='quarter semibold padvert padleft'>
								Round
							</span>
							<span class="threequarters">
								<span class='fourfifths true nospace padvertless'>
%									unless ($open_panels{$panel_id}{"event_type"} eq "mock_trial") {
										<% $open_panels{$panel_id}{"event_abbr"} %>
%									}
									<% $open_panels{$panel_id}{"round_name"} %>
									<% $open_panels{$panel_id}{"round_flighted"} > 1
										? "Flt ".$open_panels{$panel_id}{"panel_flight"}
										: ""
									%>
								</span>
								<span class='fifth rightalign padright padvertless'>
									<a
										class  = "buttonwhite bluetext fa fa-table fa-sm"
										target = "_blank"
										title  = "Public Round Schematic"
										href   = "/index/tourn/postings/round.mhtml?tourn_id=<% $tourn_id %>&round_id=<% $round_id %>"
									></a>
								</span>
							</span>
						</div>

						<div class='full ltbordertop flexrow'>
							<span class='quarter semibold padvert padleft'>
%								if ($open_panels{$panel_id}{"event_type"} eq "mock_trial") {
									Courtroom
%								} else {
									Room
%								}
							</span>

							<span class='threequarters flexrow leftalign'>
<%perl>
								if (
									$open_panels{$panel_id}{"online_mode"} eq "async"
									|| $open_panels{$panel_id}{"panel_async"}
								) {
</%perl>
									Asynchronous: Video Links are on Ballot

%								} elsif ($open_panels{$panel_id}{"hidden"}) {

									Test Tournament - No Room

%								} elsif ($open_panels{$panel_id}{"online_mode"}) {

									<& "/funclib/online_room.mas",
										panel    => $panel_id,
										person   => $person,
										show     => 1,
										class    => "fa-sm",
									&>
%								} else {

%									if ($open_panels{$panel_id}{"room_url"}) {
										<span class="threequarters">
											<% $open_panels{$panel_id}{"room_name"} %>
										</span>
										<span class="quarter centeralign">
											<a
												class = "fa fa-map fa-sm buttonwhite bluetext"
												title = "Link to map"
												href  = "<% $open_panels{$panel_id}{"room_url"} %>"
											></a>
										</span>
%									} else {
										<% $open_panels{$panel_id}{"room_name"} %>
%									}

%									if ($open_panels{$panel_id}{"room_notes"}) {
										<span class="full nospace martopless smaller">
											<% $open_panels{$panel_id}{"room_notes"} %>
										</span>
%									}
%								}
							</span>
						</div>

%						if ($open_panels{$panel_id}{"event_type"} eq "mock_trial") {
							<div class="full ltbordertop flexrow">
								<span class='quarter semibold padvert padleft'>
									Role
								</span>
								<span class='threequarters'>
									<% $open_panels{$panel_id}{"chair"} ? "Presiding Judge" : "Scorer" %>
								</span>
							</div>
%						}

%						if ($open_panels{$panel_id}{"online_mode"} eq "async") {

							<div class="full ltbordertop flexrow">
								<span class='quarter semibold padleft'>
									Judging Deadline
								</span>

								<span class='threequarters'>
%									if ($open_panels{$panel_id}{"person_tz"}) {
										<& "/funclib/showtime.mas",
											string      => $open_panels{$panel_id}{"my_round_end"},
											add_minutes => $add,
											length      => "day"
										&>

										<% Tab::tzname($open_panels{$panel_id}{"person_tz"}) %>
%									}

									<& "/funclib/showtime.mas",
										string      => $open_panels{$panel_id}{"round_end"},
										add_minutes => $add,
										length      => "day"
									&>

									<% Tab::tzname($open_panels{$panel_id}{"round_tz"}) %>
								</span>
							</div>

%						} else {

							<div class="full ltbordertop flexrow">
								<span class='quarter semibold padleft'>
									Start
								</span>

								<span class='threequarters flexrow'>
<%perl>
									if ($open_panels{$panel_id}{"round_tz"}
										&& $open_panels{$panel_id}{"person_tz"}
										&& ($open_panels{$panel_id}{"person_tz"} ne $open_panels{$panel_id}{"round_tz"})
									) {
</%perl>
										<span class="half">
											<& "/funclib/showtime.mas",
												string      => $open_panels{$panel_id}{"my_round_start"},
												add_minutes => $add,
												length      => "day",
											&>
											<% Tab::tzname($open_panels{$panel_id}{"person_tz"}) %>
										</span>

										<span class="half">
											<& "/funclib/showtime.mas",
												string      => $open_panels{$panel_id}{"round_start"},
												add_minutes => $add,
												length      => "day"
											&>

											<% Tab::tzname($open_panels{$panel_id}{"round_tz"}) %>
										</span>

%									} else {
										<& "/funclib/showtime.mas",
											string      => $open_panels{$panel_id}{"round_start"},
											add_minutes => $add,
											length      => "day"
										&>

										<% Tab::tzname($open_panels{$panel_id}{"round_tz"}) %>
%									}
								</span>
							</div>
%						}

%						unless ($open_panels{$panel_id}{"event_type"} eq "congress" || $open_panels{$panel_id}{"legion"}) {

							<div class='full ltborderbottom ltbordertop flexrow'>
								<span class='quarter semibold padleft'>
									Entries
								</span>

								<span class='threequarters flexrow padvertless wrap'>
%									if ($open_panels{$panel_id}{"flip_status"} eq "done") {
										<div class="explain padvertless semibold full flexrow">
											Flip for Sides Complete
										</div>
%									}
<%perl>
									my $length = "full flexrow wrap";

									if ($open_panels{$panel_id}{"event_type"} eq "speech") {
										$length = "threetenths marno padno padvertless";
									} elsif ($open_panels{$panel_id}{"event_type"} eq "wudc") {
										$length = "half marno padno padvertless";
									}

									foreach my $entry_id (
										sort {
											$open_panels{$panel_id}{"entries"}{$a}{"side_sort"}
												<=>
											$open_panels{$panel_id}{"entries"}{$b}{"side_sort"}
										} keys %{$open_panels{$panel_id}{"entries"}}
									) {

										my $entry = $open_panels{$panel_id}{"entries"}{$entry_id};
</%perl>
										<span class="<% $length %> padvertless smallish">
%											if ($open_panels{$panel_id}{"event_type"} eq "mock_trial") {
												<span class="third semibold nospace">
													<% $entry->{"side"} %>
												</span>
												<span class="threefifths nospace">
%											} elsif ($open_panels{$panel_id}{"flip_status"} eq "done"
%												&& $open_panels{$panel_id}{"max_orders"}) {
												<span class="fifth semibold nospace">
													<% $entry->{side} %>
												</span>
												<span class="fifth semibold nospace">
													<% Lingua::EN::Numbers::Ordinate::ordinate($entry->{speakerorder}) %>
												</span>
%											} elsif ($entry->{side}) {
												<span class="fifth semibold nospace">
													<% $entry->{side} %>
												</span>
												<span class="fourfifths nospace">
%											} else {
												<span class="full">
%											}
												<% $entry->{code} %>
%											if ($entry->{side}) {
												</span>
%											}
										</span>
%									}
								</span>
							</div>
%						}

						<div class='full ltbordertop flexrow wrap'>

%							if ($open_panels{$panel_id}{"start_text"}) {
								<div class="full padvert padleftmore nospace explain semibold leftalign graytext padbottom">
									<% $open_panels{$panel_id}{"start_text"} %>
								</div>
%							}

							<div class="full flexrow padbottom">

								<span class="half centeralign">
								</span>

								<span class="half centeralign padright">
<%perl>
									if ($open_panels{$panel_id}{"online_ballots"}) {

										my $flags = "panel_id=".$panel_id."&judge_id=".$open_panels{$panel_id}{"judge_id"};
										my $legion++ if $open_panels{$panel_id}{"legion"};

										if (
											$open_panels{$panel_id}{"event_type"} eq "wudc"
											&& (not defined $open_panels{$panel_id}{"chair"})
										) {
</%perl>
											Panelist Judge <br /> (only Chairs enter ballots)

%										} else {
%											if ($open_panels{$panel_id}{"status"} eq "CONFIRM") {
												<a
													class="<% $open_panels{$panel_id}{"ballotcolor"} %> invert buttonwhite madno padmore"
													href="<% $legion ? "legion" : "re"%>_confirm.mhtml?<% $flags %>"
												><% $open_panels{$panel_id}{"status"} %></a>
%											} else {
												<a
													class="<% $open_panels{$panel_id}{"ballotcolor"} %> invert buttonwhite marno padmore"
													href="<% $legion ? "legion_" : ""%>ballot.mhtml?<% $flags %>"
												><% $open_panels{$panel_id}{"status"} %></a>
%											}
%										}
%										if ($legion) {
											<a
												class  = "bluetext buttonwhite invert marleftmore"
												target = "_blank"
												href   = "legion_comments.mhtml?<% $flags %>"
											>Feedback</a>
%										}
%									}

								</span>
							</div>
						</div>
					</div>
%				}
			</span>
%		}


<%perl>

		if (
			(scalar (keys %jpools) > 0)
			|| (scalar (keys %squad_rooms) > 0)
			|| (scalar (keys %rooms > 0) )
			|| (scalar (keys %dashboards) > 0)
			|| (scalar @{$livedocs} > 0)
		) {
			$m->print('<span class="padleft pagehalf">');
		}

		if (@{$livedocs}) {

</%perl>
			<h6 class='semibold blueborderbottom padbottom martopmore'>
				Tournament Live Docs
			</h6>

%			foreach my $doc (@{$livedocs}) {

				<div class="padvertless wrap odd">
					<div class="flexrow padvertless italic padleft">
						<% $doc->{tourn_name} %>
					</div>
					<div class="flexrow full">
						<span class="eighth semibold padvertless padleft">
							<% $doc->{"abbr"} %>
						</span>

						<a
							href   = "<% $doc->{url} %>"
							target = "_blank"
							class  = "plain white bluetext link-underline seveneighths flexrow"
						>
							<span class="fivesixths">
								<% $doc->{caption} || "Live Doc" %>
							</span>

							<span class="sixth centeralign">
								<span class="fa fa-sm fa-file buttonwhite bluetext">
								</span>
							</span>
						</a>
					</div>
				</div>
%			}
%		}

<%perl>

		if (keys %jpools) {

			$m->print("<h6 class='semibold blueborderbottom padbottom martopmore'>Your Judge Pools</h6>");

			my $notfirst;

			foreach my $id (
				sort {$jpools{$a}{"name"} cmp $jpools{$b}{"name"}} keys %jpools
			) {

</%perl>
				<div class="flexrow padvertless wrap odd" title="<% $jpools{$id}{"tourn"} %>">
					<span class="half semibold padvertless padleft">
						<% $jpools{$id}{"name"} %>
					</span>

					<span class="half">
						<span class="halfspace"></span>
						<% $jpools{$id}{"category"} %>
					</span>

					<span class="full padvertless marno explain padleft">
						<% $jpools{$id}{"site"} ? "Site: ".$jpools{$id}{"site"} : "" %>
					</span>

%					if ($jpools{$id}{"message"}) {
						<div class="full nospace centeralign padvertless padbottommore padleft">
							<% $jpools{$id}{"message"} %>
						</div>
%					}
				</div>
%			}
%		}

%		if (keys %rooms || keys %squad_rooms) {
			<h6 class='semibold blueborderbottom padbottom martopmore'>Your Online Spaces</h6>
%		}

%		foreach my $school_id (sort {$a cmp $b} keys %schools) {

			<div class="full nospace blueborderbottom martopmore ltbordertop">
				<span class="threefifths nospace">
					<h6 class="semibold">
						<% $schools{$school_id}{'name'} %>
					</h6>
				</span>
				<span class="twofifths nospace semibold smallish graytext italic nospace nowrap rightalign">
					@ <% $schools{$school_id}{'tourn'} %>
				</span>
			</div>

%			if ($dashboards{$school_id}) {
				<div class="odd bluebordertop">
					<span class="threequarters semibold padleft">
						Dashboard
					</span>
					<span class="quarter centeralign padvert nospace">
						<a
							class  = "buttonwhite greentext invert fa fa-dashboard"
							target = "_blank"
							href   = "/user/enter/dashboard.mhtml?school_id=<% $school_id %>"
						></a>
					</span>
				</div>
%			}

%			if ($squad_rooms{$school_id}) {
				<div class="odd bluebordertop">
					<span class="threequarters semibold padleft">
						Squad Room
					</span>
					<span class="quarter centeralign padvert nospace">
						<& "/funclib/online_room.mas",
							school => $school_id,
							person => $person,
							show   => 1,
							class  => "fa"
						&>
					</span>
				</div>
%			}

%			if ($sp) {


				<h6 class="semibold martopmore">Service Project</h6>

				<div class="odd padleft padright padbottom bluebordertop">
					<% $sp %>
				</div>
%			}
%		}

<%perl>
		undef $current_tourn;
		my $notfirst;


		foreach my $tourn_id (
			sort {
				$rooms{$a}{"judge"} <=> $rooms{$b}{"judge"}
			} keys %rooms
		) {

			foreach my $room_id (
				sort {
					$rooms{$tourn_id}{"judge"}{$a}{"name"} cmp $rooms{$tourn_id}{"judge"}{$b}{"name"}
				} keys %{$rooms{$tourn_id}{"judge"}}
			) {
</%perl>
				<div
					class="odd <% $notfirst++ ? "" : "bluebordertop" %>"
					title="<% $rooms{$tourn_id}{"tourn_name"} %>"
				>
					<span class="threequarters semibold">
						<span class="halfspace"></span>
						<% $rooms{$tourn_id}{"judge"}{$room_id}{"name"} %>
					</span>
					<span class="quarter centeralign padvert nospace">
						<& "/funclib/online_room.mas",
							util     => $rooms{$tourn_id}{"judge"}{$room_id}{"thing"},
							person   => $person,
							tourn    => $tourn_id,
							show     => 1,
							class    => "fa"
						&>
					</span>
				</div>
%			}
%		}

		</span>

<%perl>

		$sth = $dbh->prepare("

			select
				judge.id, judge.code, judge.first, judge.last,
				judge.obligation, judge.hired,
				event.id, event.abbr, event.name, event.type,
				round.id, round.name, round.label, round.flighted,

				panel.id, panel.letter, panel.flight,

				ballot.id, ballot.audit, ballot.side, ballot.speakerorder,
				entry.id, entry.name, entry.code,

				score.id, score.tag, score.value,
				student.id, student.first, student.last,
				tourn.id, tourn.name,
				CONVERT_TZ(tourn.end, '+00:00', tourn.tz) tourn_end,
				tourn.tz tourn_tz,
				aff_label.value, neg_label.value,
				legion.value,
				mock_trial.value

			from (judge, ballot, panel, round, event, entry, score, tourn)

				left join student on score.student = student.id

				left join event_setting aff_label
					on aff_label.event = event.id
					and aff_label.tag = 'aff_label'

				left join event_setting neg_label
					on neg_label.event = event.id
					and neg_label.tag = 'neg_label'

				left join tourn_setting legion
					on legion.tourn = tourn.id
					and legion.tag = 'legion'

				left join tourn_setting mock_trial
					on mock_trial.tourn = tourn.id
					and mock_trial.tag = 'mock_trial_registration'

			where judge.person = ?
				and judge.id = ballot.judge
				and ballot.audit = 1
				and ballot.panel = panel.id
				and panel.round = round.id
				and round.event = event.id
				and event.tourn = tourn.id

				and ballot.entry = entry.id
				and ballot.id = score.ballot

				and score.tag in ('winloss', 'rank', 'point', 'title', 'speech', 'refute')
				and tourn.end > now()

				and (
					exists (
						select weekend.id
							from weekend, category_setting cs
						where cs.tag = 'weekend'
							and cs.value = weekend.id
							and cs.category = judge.category
							and weekend.start < now()
							and weekend.end > now()
					) or not exists (
						select weekend.id
						from weekend
						where weekend.tourn = tourn.id
					)
				)

			group by score.id
			order by event.abbr, round.name, ballot.side, ballot.speakerorder, score.speech
		");

		$sth->execute($person->id);

		my %results;

		while (
			my (
				$judge_id, $judge_code, $judge_first, $judge_last,
				$judge_obligation, $judge_hired,
				$event_id, $event_abbr, $event_name, $event_type,
				$round_id, $round_name, $round_label, $round_flighted,

				$panel_id, $panel_letter, $panel_flight,

				$ballot_id, $ballot_audit, $ballot_side, $ballot_speakerorder,
				$entry_id, $entry_name, $entry_code,

				$score_id, $score_tag, $score_value,
				$student_id, $student_first, $student_last,
				$tourn_id, $tourn_name,
				$tourn_end, $tourn_tz,
				$aff_label, $neg_label, $legion, $mt
			) = $sth->fetchrow_array()
		) {

			if ($mt) {
				$mock_trial++;
			}

			unless ($results{$judge_id}{$panel_id}{"round_name"}) {

				$results{$judge_id}{$panel_id}{"legion"}     = $legion;
				$results{$judge_id}{$panel_id}{"round_name"} = $round_name;
				$results{$judge_id}{$panel_id}{"tourn_name"} = $tourn_name;
				$results{$judge_id}{$panel_id}{"tourn_end"}  = $tourn_end;
				$results{$judge_id}{$panel_id}{"tourn_tz"}  = $tourn_tz;
				$results{$judge_id}{$panel_id}{"flight"}     = $panel_flight;
				$results{$judge_id}{$panel_id}{"flighted"}   = $round_flighted;
				$results{$judge_id}{$panel_id}{"letter"}     = $panel_letter;

				if ($round_label) {
					$results{$judge_id}{$panel_id}{"round_label"} = $round_label;
				} elsif ($event_type eq "congress") {
					$results{$judge_id}{$panel_id}{"round_label"} = "Session ".$round_name;
				} else {
					$results{$judge_id}{$panel_id}{"round_label"} = "Round ".$round_name;
				}

				$results{$judge_id}{$panel_id}{"event_id"}   = $event_id;
				$results{$judge_id}{$panel_id}{"event_name"} = $event_name;
				$results{$judge_id}{$panel_id}{"event_abbr"} = $event_abbr;
				$results{$judge_id}{$panel_id}{"event_type"} = $event_type;
			}

			unless ($results{$judge_id}{$panel_id}{"entries"}{$entry_id}) {

				$results{$judge_id}{$panel_id}{"entries"}{$entry_id}{"code"} = $entry_code;
				$results{$judge_id}{$panel_id}{"entries"}{$entry_id}{"name"} = $entry_name;

				if ($ballot_speakerorder) {
					$results{$judge_id}{$panel_id}{"entries"}{$entry_id}{"order"} = $ballot_speakerorder;
				}

				if ($ballot_side) {
					$aff_label = "Aff" unless $aff_label;
					$neg_label = "Neg" unless $neg_label;

					$results{$judge_id}{$panel_id}{"entries"}{$entry_id}{"raw_side"} = $ballot_side;

					if ($ballot_side == 1) {
						$results{$judge_id}{$panel_id}{"entries"}{$entry_id}{"side"} = $aff_label;
					} elsif ($ballot_side == 2) {
						$results{$judge_id}{$panel_id}{"entries"}{$entry_id}{"side"} = $neg_label;
					}
				}
			}

			if ($score_tag eq "winloss") {
				if ($score_value == 1) {
					$results{$judge_id}{$panel_id}{"entries"}{$entry_id}{$score_tag} = "W";
				} else {
					$results{$judge_id}{$panel_id}{"entries"}{$entry_id}{$score_tag} = "L";
				}
			} elsif ($score_tag eq "speech") {

				if ($results{$judge_id}{$panel_id}{"entries"}{$entry_id}{$score_tag}) {
					$results{$judge_id}{$panel_id}{"entries"}{$entry_id}{$score_tag} .= ",";
				}

				$results{$judge_id}{$panel_id}{"entries"}{$entry_id}{$score_tag} .= $score_value;

			} else {

				# The Institute for Excessively Long Hash Names

				if ($student_id) {
					$results{$judge_id}{$panel_id}{"entries"}{$entry_id}{can_haz_students}{$score_tag}++;
					$results{$judge_id}{$panel_id}{"entries"}{$entry_id}{$score_tag}{students}{$student_id}{name}
						= $student_first." ".$student_last;

					$results{$judge_id}{$panel_id}{"entries"}{$entry_id}{$score_tag}{students}{$student_id}{value}
						= $score_value;
				} else {
					$results{$judge_id}{$panel_id}{"entries"}{$entry_id}{$score_tag} = $score_value;
				}
			}
		}

		$sth->finish();

		my $nats_sth = $dbh->prepare("
			select
				judge.id, judge.first, judge.last, category.abbr,
				logo.value logo,
				tourn.id tourn

			from (judge, category, tourn, tourn_setting nsda_nats)

			left join tourn_setting logo on logo.tourn = tourn.id and logo.tag = 'logo'

			where judge.person = ?
				and judge.category = category.id
				and category.tourn = tourn.id
				and tourn.reg_end > NOW()
				and tourn.id = nsda_nats.tourn
				and nsda_nats.tag = 'nsda_nats'

				and not exists (
					select nom.id
					from judge_setting nom
					where nom.judge = judge.id
					and nom.tag = 'nomination'
					and nom.value != '{\"type\":{}}'
				)
		");

		$nats_sth->execute($person->id);

		my $woo = $nats_sth->fetchall_hash();

		my @judges = @{$woo};

		if (@judges) {

			my $ref = shift @judges;
</%perl>

			<div class="full martopgonzo bluebordertop">

				<span class="sixth centeralign top padtopmore martop">
					<img
						src="<% $Tab::s3_url %>/<% $ref->{"tourn"} %>/<% $ref->{"logo"} %>"
						alt="National Tournament Logo"
						style="max-width: 128px;"
					>
				</span>

				<span class="fivesixths">

					<p class="italic ltborderbottom greytext" style="font-size: 14pt;">
						Have you considered self-nominating to judge late elims at Nationals?
					</p>

					<p>
						The NSDA is seeking judges to self-nominate to judge
						semifinals and final rounds at the National Speech and
						Debate Tournament.  You do NOT need to have earned a
						Diamond or to have coached a past national champion to
						be considered!  We are seeking a diverse pool of judges
						with a variety of experience levels, viewpoints and
						backgrounds.  You simply must commit to be available to
						judge on the Thursday and Friday at Nationals.
					</p>

					<p class="centeralign">
						<a
							class = "bluetext buttonwhite invert"
							href  = "/user/judge/nats.mhtml"
						>Self-Nominate Today!</a>
					</p>
				</span>
			</div>
%		}

		</div>

%		unless ($mock_trial) {

			<div class="screens darkscreen past_scores_and_feedback padtop">

%			if (keys %results) {
				<div class="full martop">
					<span class="quarter nospace">
						<h5 class="nospace">
							Past Ballots
						</h5>
					</span>
					<span class="threequarters true rightalign semibold italic graytext nospace">

						You may edit comments until the tournament ends. <br />
						You cannot change scores once confirmed; contact
						tournament officials to fix errors

					</span>
				</div>
<%perl>
			}

			foreach my $judge_id (sort keys %results) {

				foreach my $panel_id (
					sort {
						$results{$judge_id}{$b}{"round_name"} <=> $results{$judge_id}{$a}{"round_name"}
						|| $results{$judge_id}{$a}{"flight"} <=> $results{$judge_id}{$b}{"flight"}
						|| $results{$judge_id}{$a}{"event_abbr"} cmp $results{$judge_id}{$b}{"event_abbr"}
					} keys %{$results{$judge_id}}
				) {
</%perl>
					<div class="full nospace martopmore odd bluebordertop thinborder flexrow">
						<span class="fifth nospace bigger semibold italic padleft">
%							unless ($open_panels{$panel_id}{"event_type"} eq "mock_trial") {
								<% $results{$judge_id}{$panel_id}{"event_abbr"} %>
%							}
							<% $results{$judge_id}{$panel_id}{"round_label"} %>
							<% $results{$judge_id}{$panel_id}{"flighted"} > 1
								? "Flt ".$results{$judge_id}{$panel_id}{"flight"}
								: ""
							%>
						</span>

						<span class="threetenths biggish semibold bluetext rightalign italic padrightless">
							<% $results{$judge_id}{$panel_id}{"tourn_name"} %>
						</span>
						<span class="threetenths padleftless italic">
							Edit deadline <& "/funclib/showdt.mas",
								string  => $results{$judge_id}{$panel_id}{"tourn_end"},
								format  => "murica_short",
							&>
							<& "/funclib/tzname.mas",
								tz => $results{$judge_id}{$panel_id}{"tourn_tz"}
							&>
						</span>

						<span class="fifth rightalign">
%							if ($results{$judge_id}{$panel_id}{"legion"}) {
								<a
									class = "bluetext buttonwhite hover padvertless padleft padright invert"
									href  = "legion_comments.mhtml?panel_id=<% $panel_id %>&judge_id=<% $judge_id %>"
								>
									Edit Feedback
								</a>
%							} else {
								<a
									class = "bluetext buttonwhite smallish hover padvertless padleft padright invert"
									href  = "rfd_only.mhtml?panel_id=<% $panel_id %>&judge_id=<% $judge_id %>"
								>
									Edit Feedback
								</a>
%							}
						</span>
					</div>

%					if ($results{$judge_id}{$panel_id}{"event_type"} eq "mock_trial") {
						<div class="ltbordertop odd">
							<% $open_panels{$panel_id}{"chair"} ? "Presiding Judge" : "Scorer" %>
						</div>
%					}

					<div class="ltbordertop odd">
<%perl>
						foreach my $entry_id (
							sort {
								$results{$judge_id}{$panel_id}{"entries"}{$a}{"raw_side"} <=> $results{$judge_id}{$panel_id}{"entries"}{$b}{"raw_side"}
								|| $results{$judge_id}{$panel_id}{"entries"}{$a}{"order"} <=> $results{$judge_id}{$panel_id}{"entries"}{$b}{"order"}
							} keys %{$results{$judge_id}{$panel_id}{"entries"}}
						) {

							my $entry = $results{$judge_id}{$panel_id}{"entries"}{$entry_id};
</%perl>
							<div class="nospace ltborderbottom flexrow full">

%								if ($results{$judge_id}{$panel_id}{"event_type"} eq "congress") {

									<span class="tenth padvert smaller">
										<%
											Lingua::EN::Numbers::Ordinate::ordinate($entry->{order})
										%> spkr
									</span>

									<span class="fifth grow">
										<% $entry->{code} %>
									</span>

% 									if ($entry->{speech}) {
										<span class="half">
											<% $entry->{speech}
												? $entry->{speech}
												: ""
											%>
										</span>
% 									}

									<span class="tenth semibold">
										<% $entry->{rank}
											? $entry->{rank}
											: ""
										%>
									</span>

									<span class="tenth">
									</span>

%								} elsif ($results{$judge_id}{$panel_id}{"event_type"} eq "wudc") {

									<span class="tenth padvert">
										<% $entry->{order} == 1 ? "1G" : "" %>
										<% $entry->{order} == 2 ? "1O" : "" %>
										<% $entry->{order} == 3 ? "2G" : "" %>
										<% $entry->{order} == 4 ? "2O" : "" %>
									</span>

									<span class="fifth">
										<% $entry->{code} %>
									</span>

									<span class="tenth semibold">
										<% $entry->{rank}
											? $entry->{rank}
											: ""
										%>
									</span>

									<span class="half nospace">
%										foreach my $student_id (sort keys %{$entry->{"point"}{"students"}}) {
											<span class="threequarters padless marno">
												<% $entry->{point}{students}{$student_id}{"name"} %>
											</span>
											<span class="quarter padless marno">
												<% $entry->{point}{students}{$student_id}{"value"} %>
											</span>
%										}
									</span>

%								} elsif ($results{$judge_id}{$panel_id}{"event_type"} eq "speech") {

									<span class="tenth padvert smaller">
										<% Lingua::EN::Numbers::Ordinate::ordinate($entry->{order}) %> spkr
									</span>

									<span class="fifth grow">
										<% $entry->{code} %>
									</span>

%									if ($entry->{title}) {
										<span class="half">
											<% $entry->{title}
												? $entry->{title}
												: ""
											%>
										</span>
%									}

									<span class="tenth semibold">
										<% $entry->{rank}
											? $entry->{rank}
											: ""
										%>
									</span>

									<span class="tenth">
										<% $entry->{point}
											? $entry->{point}
											: ""
										%>
									</span>

%								} else {

									<span class="twenty padvert smaller centeralign">
										<% $entry->{"side"} %>
									</span>

									<span class="twenty padvert smaller">
										<% $entry->{"order"}
											? ($entry->{"order"})
											: ""
										%>
									</span>

									<span class="fifth">
										<% $entry->{code} %>
									</span>

									<span class="tenth centeralign semibold">
										<% $entry->{winloss} %>
									</span>

%									if ($entry->{"point"} && (not defined $entry->{"can_haz_students"}{"point"})) {
										<span class="eighth rightalign">
											Pts <% $entry->{point} %>
										</span>
%									}

%									if ($entry->{"rank"} && (not defined $entry->{"can_haz_students"}{"rank"})) {
										<span class="eighth rightalign">
											Rank <% $entry->{rank} %>
										</span>
%									}

%									if ($entry->{"can_haz_students"}{"point"} || $entry->{"can_haz_students"}{"rank"}) {
										<span class="quarter nospace smallish">
%											foreach my $student_id (sort keys %{$entry->{"point"}{"students"}}) {
												<span class="full padless marno">
													<% $entry->{point}{students}{$student_id}{"name"} %>:
												</span>
%											}
										</span>
%									}

%									if ($entry->{"can_haz_students"}{"point"}) {
										<span class="tenth nospace smallish rightalign">
%											foreach my $student_id (sort keys %{$entry->{"point"}{"students"}}) {
												<span class="full padless marno">
													<% $entry->{point}{students}{$student_id}{"value"} %>
												</span>
%											}
										</span>
%									}
%									if ($entry->{"refute"}{"students"}) {
										<span class="tenth nospace smallish rightalign">
%											foreach my $student_id (sort keys %{$entry->{"refute"}{"students"}}) {
												<span class="full padless marno">
													R <% $entry->{refute}{students}{$student_id}{"value"} %>
												</span>
%											}
										</span>
%									}

%									if ($entry->{"can_haz_students"}{"rank"}) {
										<span class="tenth nospace smallish rightalign">
%											foreach my $student_id (sort keys %{$entry->{"rank"}{"students"}}) {
												<span class="full padless marno">
													<% $entry->{rank}{students}{$student_id}{"value"} %>
												</span>
%											}
										</span>
%									}
%								}
							</div>
%						}
					</div>
%				}
%			}
			</div>
%		}

%		if ($fines && @{$fines}) {
			<div class="screens darkscreen fines padtop">

				<h5>Your Judging Fines</h5>

%				foreach my $fine (@{$fines}) {
%					$fine->{"reason"} =~ s/JUDGE FINE://g;

					<div class="full bluebordertop oddrow ltborderbottom marbottommore thinborder padno">
						<div class="full nospace evenrow padvert">
							<span class="halfspacer"></span>
							<span class="tenth semibold">
								Amount:
							</span>
							<span class="tenth">
								<% $fine->{"currency"} ? $fine->{'currency'} : '$' %><% $fine->{"amount"} %>
							</span>

							<span class="eighth semibold">
								Assessed At:
							</span>
							<span class="quarter">
								<& "/funclib/showdt.mas",
									string => $fine->{"levied"},
									format => "murica"
								&>
							</span>

							<span class="tenth semibold">
								Billed To:
							</span>

							<span class="threetenths">
								<% $fine->{"school"} %>
							</span>
						</div>

						<div class="full nospace padvert">
							<span class="halfspacer"></span>
							<span class="tenth semibold">
								Reason:
							</span>
							<span class="ninetenths">
								<% $fine->{"reason"} %> did not judge.
							</span>
						</div>

					</div>
%				}
			</div>
%		}

	</div>

%	;

