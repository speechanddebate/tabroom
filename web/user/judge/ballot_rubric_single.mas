<%args>
	$panel
	$judge
	$ballots
	$event
	$event_settings
	$pronouns => undef
</%args>
<%perl>

	my %students;
	my %outstanding;
	my %role;

	my $rubric = $event_settings->{"ballot_rubric"};
	my $increments = $event_settings->{"point_increments"};

	my $step = "1" if $increments eq "whole";
	$step = "0.5"  if $increments eq "half";
	$step = "0.25" if $increments eq "fourths";
	$step = "0.1"  if $increments eq "tenths";

	my $autosave_url = "$Tab::indexcards_url/user/judge/".$judge->id."/ballot/rubric";
	my $firstscore;
	my %ballots;

	foreach my $ballot (sort {$a->side <=> $b->side} @{$ballots}) {

		my $rubric_score = $ballot->scores(tag => "rubric")->first;
		my $rubric_ref;

		if ($rubric_score) {
			$rubric_ref = eval {
				return JSON::decode_json($rubric_score->content);
			}
		}

		foreach my $score ($ballot->scores(tag => "speaker")) {
			if ($score->position) {
				$role{$score->position} = $score;
			} else {
				$outstanding{$score->value} = $score->student;
			}
		}

		$ballots{$ballot->side}{'ballot'}         = $ballot;
		$ballots{$ballot->side}{'rubric_scores'}  = $rubric_ref;
		$ballots{$ballot->side}{'speaker_scores'} = $rubric_score;
		@{$students{$ballot->id}}                 = $ballot->entry->students;
	}

	my %all_rows;

	foreach my $side (sort {$a <=> $b} keys %ballots) {
		foreach my $row_id (sort {$a <=> $b} keys %{$rubric->{$side}}) {
			my $row = $rubric->{$side}{$row_id};
			$row->{"id"} = $row_id;
			$row->{"side"} = $side;
			my $rowkey = $row->{"order"}.$side;
			$row->{"key"} = $rowkey;
			$all_rows{$rowkey} = $row;
		}
	}

</%perl>

	<div class="odd full flexrow wrap centeralign bluebordertop">
		<p class="full threequarters">
			Please confirm these codes are on the correct side.  If they
			are not, contact the tournament staff:
		</p>

%		foreach my $ballot (sort {$a->side <=> $b->side} @{$ballots}) {
			<span class="third centeralign padbottommore">

				<p class="smallish semibold centeralign bluetext nospace">
					<% $ballot->side == 1 ? uc($event_settings->{"aff_label"}) || "Prosecution" : "" %>
					<% $ballot->side == 2 ? uc($event_settings->{"neg_label"}) || "Defense" : "" %>
				</p>
				<% $ballot->entry->code %>
			</span>
%		}
	</div>

%	unless ($ARGS{'outstanding'}) {
		<span class="full nospace">
			<span class="full centeralign">
<%perl>
				my $notfirst;

				my %row_by_order;

				foreach my $order (sort {$a <=> $b} keys (%all_rows)) {

					my $row        = $all_rows{$order};
					my $ballot_ref = $ballots{$row->{side}};
					my $ballot     = $ballot_ref->{ballot};
					my $side = $ballot->side;
					my $rubric_ref = $ballots{$side}{'rubric_scores'};
					my $students = $ballots{$ballot->side}{'students'};
</%perl>
					<span
						class = "<% $notfirst++ ? "" : "bluebordertop" %> row leftalign marno padtopless"
						id    = "<% $row ? $row->{id} : "" %>"
					>
<%perl>
							unless ($row && $row->{id}) {
								$m->print("</span>");
								$m->print("<span class='smallish graytext italic full nospace padtopless centeralign halfheight'>");
								$m->print("</span>");
								$m->print("<span class='smallish graytext italic full nospace padtopless centeralign halfheight'>");
								$m->print("</span>");
								$m->print("</span>");
								next;
							}
</%perl>
							<span class="full flexrow wrap padtop">
								<span class="semibold bluetext seventh padleft">
									<% $ballot->entry->code %>
								</span>

								<span class="threesevenths smallsixsevenths flexrow wrap">
%									if ($row->{"description"}) {
										<span class="semibold twofifths smallfull nospace marno nowrap">
											<% $row->{"label"} %>
										</span>

										<span class="explain rightalign smallfull nospace leftalignsmall threefifths padright">
											<% $row->{"description"} %>
										</span>
%									} else {
										<span class="semibold ninetenths italic">
											<% $row->{"label"} %>
										</span>
%									}
								</span>

								<span class="seventh smallshow">
								</span>

								<span class="threesevenths nospace padtopless smallsixsevenths flexrow">
%									if ($row->{"speaker"}) {
										<span class="twothirds marno">
											<select
												name             = "<% $ballot %>_<% $row->{id} %>_speaker"
												tabindex         = "-1"
												id               = "<% $ballot %>_<% $row->{id} %>_speaker"
												row              = "<% $row->{id} %>"
												class            = "side_<% $side %>"
												onChange         = "addEmUp();"
												onBlur           = "addEmUp();"
												onTouchLeave     = "addEmUp();"
												data-placeholder = "Optional: Select the speaker"
											>
												<option value=""></option>
%												foreach my $student (sort {$a->last cmp $b->last} @{$students{$ballot->id}}) {
													<option
														value="<% $student->id %>"
														<% $rubric_ref && $rubric_ref->{$row->{id}}{"speaker"} == $student->id
															? "selected"
															: ""
														%>
													><%
														$student->first." ".$student->last
													%><%
														$pronouns->{$student->id}
														? " (".$pronouns->{$student->id}.")"
														: " "
													%></option>
%												}
											</select>
										</span>
%									}

									<span class="third flexrow">
										<span class="twofifths marno smallish italic rightalign padright">
											<% $row->{"min"} %> - <% $row->{"max"} %>
										</span>

										<span class="twofifths">
											<input
												id           = "<% $side %>_<% $row->{id} %>_points"
												name         = "<% $side %>_<% $row->{id} %>_points"
												type         = "number"
												tabindex     = "<% $row->{order} %><% $side %>"
												class        = "score sizeme <% $firstscore++ ? "" : "starthere" %>"
												step         = "<% $step %>"
												ballot       = "<% $ballot->id %>"
												row          = "<% $row->{id} %>"
												min          = "<% $row->{"min"} %>"
												max          = "<% $row->{"max"} %>"
												onChange     = "addEmUp();"
												onBlur       = "addEmUp();"
												onTouchLeave = "addEmUp();"
												value        = "<% $rubric_ref ? $rubric_ref->{$row->{id}}{"points"} : "" %>"
											>
										</span>

										<span
											class = "fifth smallish fa fa-sm fa-times padleft"
											id    = "<% $ballot %>_<% $row->{id} %>_confirm"
										>
%											if ($row->{'mult'} > 1 ) {
												<% $row->{'mult'} > 1 ? "x".$row->{"mult"} : "" %>
%											}
										</span>
									</span>
								</span>
						</span>
					</span>
%				}


			<div class="full flexrow bluebordertop flexrow padtopmore">

%			foreach my $ballot (sort {$a->side <=> $b->side} @{$ballots}) {
				<span
					class = "half leftalign flexrow wrap"
					id    = "<% $ballot %>_team_total"
				>
					<!-- HOW MANY CSS CLASSES CAN PALMER PUT INTO ONE ELEMENT?!
					THE LIMIT DOES NOT EXIST!!!-->

					<span class="semibold bigger twothirds smallfull smallcenter padleft padvert bluetext rightalign ">
						<% $ballot->side == 1
							? uc($event_settings->{"aff_label"} || "Prosecution" )
							: uc($event_settings->{"neg_label"} || "Defense" )
						%> TOTAL:
					</span>

					<span
						class="huge semibold third leftalign smallfull smallcenter orangetext padleft"
						id="<% $ballot->side %>_total"
					></span>
				</span>
%			}
			</div>
		</span>

	<!-- hush, purists, I'm tired -->
	<div
		class="full bluebordertop martop padvertmore flexrow hidden"
		id = "winner_indicator"
	>
		<span class="semibold bigger half rightalign padright">
			YOUR SELECTED WINNER:
		</span>

		<span class="semibold bigger half leftalign padleft">
			<p class="inline bigger redtext" id="winner_code">
			</p>

			<p class="inline bigger padleft" id="winner_side">
			</p>
		</span>
	</div>

%	}

%	if ($event_settings->{"roles_rubric"}) {
%		unless ($ARGS{"skip_outstanding"}) {
		<h5 class="martopmore padbottom ltborderbottom">
			Outstanding Individual Roles
		</h5>

		<p class="centeralign">
			These points &amp; awards are optional; use them to give points to extraordinary speakers.
		</p>

		<p class="centeralign">
			Highest scores are the best, lowest are worst.
		</p>

%		if ($ARGS{'outstanding'}) {
			<div class="full centeralign nospace">
%		} else {
			<div class="full nospace centeralign marvertno padleft">
%		}
<%perl>
			my $notfirst;
			my @students;

			my @pro_students;
			my @def_students;

			my %student_side;

			foreach my $ballot (@{$ballots}) {

				unless ($students{$ballot->id}) {
					@{$students{$ballot->id}} = $ballot->entry->students;
				}
				push @students, @{$students{$ballot->id}};

				if ($ballot->side == 1) {
					push @pro_students, @{$students{$ballot->id}};
				} else {
					push @def_students, @{$students{$ballot->id}};
				}

				foreach my $student (@{$students{$ballot->id}}) {
					if ($ballot->side == 1) {
						$student_side{$student->id} = $event_settings->{"aff_label"} || "Prosecution";
					} elsif ($ballot->side == 2) {
						$student_side{$student->id} = $event_settings->{"neg_label"} || "Defense";
					}
				}
			}

			foreach my $order (sort {$a <=> $b} keys %{$event_settings->{"roles_rubric"}}) {

				my $row = $event_settings->{"roles_rubric"}{$order};
				my $already = $outstanding{$row->{"points"}};

				my @row_students;

				if ($row->{"side"} == 1) {
					@row_students = @pro_students;
				} elsif ($row->{"side"} == 2) {
					@row_students = @def_students;
				} else {
					@row_students = @students;
				}
</%perl>
				<div class="<% $notfirst++ ? "" : "bluebordertop martop" %> leftalign row marno flexrow nowrap">

					<span class="italic blacktext third marno padleft">
						<% $row->{"label"} %>
					</span>

					<span class="third marno">
						<select
							tabindex = -1
							name     = "roles_<% $order %>"
							id       = "roles_<% $order %>"
							order    = "<% $order %>"
							class    = "outstanding plain fixedmost"
						>
							<option value=""></option>
%							foreach my $student (sort {$a->last cmp $b->last} @row_students) {
								<option
									id    = "<% $student->id %>_<% $order %>"
									class = "<% $student->id %> roles"
									value = "<% $student->id %>"
									<% $already == $student ? "selected" : "" %>
								><% $student->first." ".$student->last %> (<% $student_side{$student->id} %>) </option>
%							}
						</select>
					</span>

					<span class="third nowrap flexrow">
%						if ($row->{max} == 1) {
							<input
								name  = "roles_<% $order %>_points"
								id    = "roles_<% $order %>_points_1"
								type  = "hidden"
								value = "1"
							>
%						} else {
%							foreach my $point (1 .. $row->{"max"}) {
								<span class='third marno hover centeralign'>
									<label for="roles_<% $order %>_points_<% $point %>">
										<input
											name  = "roles_<% $order %>_points"
											id    = "roles_<% $order %>_points_<% $point %>"
											type  = "radio"
											value = "<% $point %>"
										> <% $point %>
									</label>
								</span>
%							}
%						}
					</span>
				</div>
%			}
		</div>

%		}
%		unless ($ARGS{'outstanding'}) {

			<div class = "full centeralign" id = "no_submit">
				<div class="centeralign full nospace">
					<h5 class="redtext">
						Your scoresheet is not complete.
					</h5>

					<p class="bigger ninetenths centeralign">
						Each score area on the top section must be filled in
						with a number before you can submit your ballot. You
						may mark a trial element that did not occur with a 0.
					</p>
				</div>
			</div>

			<div
				class="full centeralign liblrow hidden"
				id = "yes_submit"
			>
				<div class="rightalign full nospace">
					<span class="third centeralign">
						<input
							id       = "rubric_submit"
							type     = "submit"
							tabindex = "-1"
							value    = "Save Scores"
						>
					</span>
				</div>
			</div>
%		}

%	} elsif ($event_settings->{"speakers_rubric"}) {

		<h5 class="martopmore padbottom ltborderbottom">
			Outstanding Individual Competitors
		</h5>

		<div class="full nospace centeralign marvertno padleft">
<%perl>
			my $notfirst;
			my @students;
			my %student_side;

			foreach my $ballot (@{$ballots}) {
				push @students, @{$students{$ballot->id}};

				foreach my $student (@{$students{$ballot->id}}) {
					if ($ballot->side == 1) {
						$student_side{$student->id} = $event_settings->{"aff_label"} || "Prosecution";
					} elsif ($ballot->side == 2) {
						$student_side{$student->id} = $event_settings->{"neg_label"} || "Defense";
					}
				}
			}

			my $last_tag;

			foreach my $order (sort {$a <=> $b} keys %{$event_settings->{"speakers_rubric"}}) {

				my $row = $event_settings->{"speakers_rubric"}{$order};
				my $already = $outstanding{$row->{"points"}};
				my $border;

				if ($last_tag && $last_tag ne $row->{tag}) {
					$border = "ltbluebordertop martop";
				}
				$last_tag = $row->{tag};
</%perl>
				<span class="<% $notfirst++ ? "" : "bluebordertop martop" %> <% $border %> leftalign row marno flexrow">

					<span class="semibold blacktext half padleftmore">
						<% $row->{"label"}
							? $row->{"label"}
							: Lingua::EN::Numbers::Ordinate::ordinate($order)." place"
						%>
					</span>

					<span class="half">
						<select
							tabindex = -1
							name     = "speaker_<% $order %>"
							id       = "speakers_<% $order %>"
							order    = "<% $order %>"
							class    = "outstanding plain"
							onChange = "noDupes();"
						>
							<option value=""></option>
%							foreach my $student (sort {$a->last cmp $b->last} @students) {
								<option
									id    = "<% $student->id %>_<% $order %>"
									class = "<% $student->id %> outstandings"
									value = "<% $student->id %>"
									<% $already == $student ? "selected" : "" %>
								><% $student->first." ".$student->last %> (<% $student_side{$student->id} %>) </option>
%							}
						</select>
					</span>
				</span>
%			}
		</div>

%		unless ($ARGS{'outstanding'}) {
			<div class = "full centeralign" id = "no_submit">
				<div class="centeralign full nospace">
					<h5 class="redtext">
						Your scoresheet is not complete.
					</h5>

					<p class="bigger ninetenths centeralign">
						Each score area on the top section must be filled in
						with a number before you can submit your ballot. You
						may mark a trial element that did not occur with a 0.
					</p>
				</div>
			</div>

			<div
				class="full rightalign liblrow hidden"
				id = "yes_submit"
			>
				<span class="third centeralign">
					<input
						type     = "submit"
						tabindex = "-1"
						value    = "Save Scores"
					>
				</span>
			</div>
%		}

%	} elsif ($event->type eq "mock_trial") {

		<div class = "full centeralign" id = "no_submit">
			<div class="centeralign full nospace">
				<h5 class="redtext">
					Your scoresheet is not complete.
				</h5>

				<p class="bigger ninetenths centeralign">
					Each score area on the top section must be filled in
					with a number before you can submit your ballot. You
					may mark a trial element that did not occur with a 0.
				</p>
			</div>
		</div>

		<div class="full centeralign liblrow"
			id="yes_submit">
			<div class="rightalign full nospace">
				<span class="third centeralign">
					<input
						id       = "rubric_submit"
						type     = "submit"
						tabindex = "-1"
						value    = "Save Scores"
					>
				</span>
			</div>
		</div>
%	}

%	unless ($ARGS{'outstanding'}) {
		</form>
%	}

	<script>

		function checkAccess() {
			const url = `<% $Tab::indexcards_url %>/user/judge/<% $judge->id %>/section/<% $panel->id %>/checkBallotAccess`;
			$.ajax({
				type : 'POST',
				url,
				data        : {},
				crossDomain : true,
				xhrFields   : {
					withCredentials: true
				},
				success : function(data) {
					if (data.refresh) {
						window.location.replace(`/user/home.mhtml?err=${data.message}`);
					}
				}
			});
		};

		function addEmUp() {

			const rubric = <% JSON::encode_json($rubric) %>;
			const totals = {};
			let blanks = 0;

			Object.keys(rubric).forEach( (side) => {

				const autoSave = {
					total : 0,
				};

				Object.keys(rubric[side]).forEach( (rowId) => {

					const row = rubric[side][rowId];
					const pointKey = `#${side}_${rowId}_points`;
					const rawPoints = $(pointKey).val();

					let points;
					if (rawPoints !== '' || rawPoints !== undefined) {
						points = parseInt(rawPoints);
					}

					if (!autoSave.ballot) {
						autoSave.ballot = $(pointKey).attr("ballot");
					}

					const speaker = $(`#${autoSave.ballot}_${rowId}_speaker`).val();

					if ( Number.isInteger(points) || speaker) {

						autoSave[rowId] = {};

						if (points < row.min) {
							alertify.warning("Points out of range", "Points must be at least "+row.min);
							$(pointKey).val("");
							$(pointKey).focus();
						} else if (points > row.max) {
							alertify.warning("Points out of range", "Points must not exceed "+row.max);
							$(pointKey).val("");
							$(pointKey).focus();
						} else if (row.mult > 1) {
							autoSave.total += points * row.mult;
							autoSave[rowId].ok = true;
						} else if (typeof points === 'number') {
							autoSave.total += points;
							autoSave[rowId].ok = true;
						}

						if (autoSave[rowId].ok) {
							autoSave[rowId].points = points;
							if (!autoSave.ballot) {
								autoSave.ballot = $(pointKey).attr("ballot");
							}
							autoSave[rowId].speaker = speaker;
						} else if (speaker) {
							autoSave[rowId].speaker = speaker;
						} else {
							delete autoSave[rowId];
						}

					} else {
						blanks++;
					}
				});

				$(`#${side}_total`).html(autoSave.total);

				if (autoSave.ballot) {

					totals[autoSave.ballot] = autoSave.total;

					if (totals[autoSave.ballot] > 0) {

						try {
							$.ajax({
								type        : 'POST',
								url         : '<% $autosave_url %>',
								data        : autoSave,
								crossDomain : true,
								dataType    : "json",
								xhrFields: {
									withCredentials: true
								},
								success : function(data) {
									if (data.error) {
										alertify.warning(data.message);
									} else {
										Object.keys(rubric[side]).forEach( (rowId) => {
											if (autoSave[rowId]?.ok) {
												$(`#${autoSave.ballot}_${rowId}_confirm`)
													.removeClass('fa-times')
													.removeClass('redtext')
													.addClass('greentext')
													.addClass('fa-check');
											}
										});
									}
								}
							});
						} catch (err) {
							console.log(err);
						}
					}
				}
			});

			if (blanks == 0) {
				autoWinner(totals);
			} else {
				$("#winner_code").html('');
				$("#winner_code").text('');
				$("#winner_side").html('');
				$("#winner_side").text('');
				$("#winner_indicator").addClass('hidden');
				$("#yes_submit").addClass('hidden');
				$("#no_submit").removeClass('hidden');
			}
		}

		function autoWinner(totals) {

			const ballots = {};

%			foreach my $ballot (sort {$a->side <=> $b->side} @{$ballots}) {
				ballots[<% $ballot->id %>] = {
					side: <% $ballot->side %>,
					code: '<% $ballot->entry->code %>',
				};
%			}

			let last;
			let winner;

			Object.keys(totals).forEach( (ballot) => {
				if (last) {
					if (last < totals[ballot]) {
						winner = ballot;
						last = totals[ballot];
					} else if (last == totals[ballot]) {
						alertify.alert("Tied points forbidden", "The two teams must have different point totals!");
					}
				} else {
					winner = ballot;
					last = totals[ballot];
				}
			});

			$("#winner_indicator").removeClass('hidden');
			$("#winner_code").html(ballots[winner].code);

			if (ballots[winner].side == 1) {
				$("#winner_side").html(`Representing the <% $event_settings->{aff_label} || "Prosecution" %>`);
			} else if (ballots[winner].side == 2) {
				$("#winner_side").html(`Representing the <% $event_settings->{neg_label} || "Defense" %>`);
			}

			$("#yes_submit").removeClass('hidden');
			$("#no_submit").addClass('hidden');
		}

		function noDupes() {

			$(".outstandings").prop("disabled", false);

			$(".outstanding").each( function() {
				var student = $(this).val();
				var order   = $(this).attr("order");
				if (student) {
					$("."+student).prop("disabled", "disabled");
					$(`#${student}_${order}`).prop("disabled", false);
				}
			});
		}

		$(document).ready(function() {
			addEmUp();
			noDupes();
			setInterval(checkAccess, 15000);

			$(window).keydown(function(event){
				if(event.keyCode == 13) {
					event.preventDefault();
					return false;
				}
			});
		});

	</script>


