<%args>
	$startdate
	$enddate
	$circuit_id
	$internal => undef
</%args>
<%flags>
	inherit => undef
</%flags>
<%init>

	my $start;
	my $end;

	my $now = DateTime->now;

	eval{
		$start = Tab::dateme($startdate);
		$end = Tab::dateme($enddate);
	};

	unless ($start) {
		$start = $now;
	}

	unless ($end) {
		$end = $start->clone;
		$end->subtract(days => 7);
	}

	# Find the tournaments who have competed in that time frame with NAUDL entrants

	Tab::School->columns(TEMP => qw/region_code/);
	Tab::School->columns(TEMP => qw/region_name/);

	Tab::School->set_sql( naudl_competed => "
		select school.*, region.code as region_code, region.name as region_name
			from (chapter, school, tourn, region, chapter_circuit)
		where 1=1
			and chapter.naudl = 1
			and chapter.id = school.chapter
			and school.tourn = tourn.id
			and chapter.id = chapter_circuit.chapter
			and chapter_circuit.circuit = $circuit_id
			and chapter_circuit.region = region.id
			and tourn.end > ?
			and tourn.end < ?
		order by tourn.start
	");

	my @schools = Tab::School->search_naudl_competed(
		DateTime::Format::MySQL->format_datetime($start),
		DateTime::Format::MySQL->format_datetime($end)
	);

    my $filename = "NAUDL-StudentAttendance-$start-$end.csv";

	$r->content_type('application/csv');
	$r->headers_out->{'Content-Disposition'} = "attachment; filename=$filename";

	$m->print("circuitname,teamid,teamlevel,teamname,globalcompid,compname,firstname,lastname,studentschoolid,birthdate,graduationyear,gender,ethnicity,udl name,udl code,tournament\r\n");

	my %tourn_circuit;

	foreach my $school (@schools) {

		my @students = $m->comp("/funclib/school_students.mas", school => $school, by_result => 1);

		my $tourn = $school->tourn;

		my $circuit_name = $tourn_circuit{$tourn->id};

		unless ($circuit_name) {

			foreach my $circuit ($tourn->circuits) {
				$circuit_name .= " ".$circuit->name;
			}

			$tourn_circuit{$tourn->id} = $circuit_name;
		}

		foreach my $student (@students) {

			my $birthday_dt = $student->setting("birthdate");
			my $birthstring = $birthday_dt.".00Z" if $birthday_dt;

			my $race;
			my $race_string = $student->setting("race");

			# Hello lack of a native case/switch function in Perl!

			$race = "White, non-Hispanic/Latino" if $$race_string eq "white";
			$race = "Black, non-Hispanic/Latino" if $$race_string eq "black";
			$race = "Hispanic/Latino" if $$race_string eq "latino";
			$race = "American Indian/Native Alaskan" if $$race_string eq "amerindian";
			$race = "Asian" if $$race_string eq "asian";
			$race = "Native Hawaiian or other Pacific Islander" if $$race_string eq "pacific";
			$race = "Two or more races" if $$race_string eq "dual";
			$race = "Other" if $$race_string eq "other";

			undef $race unless $internal;
			my $bps_id = $student->setting("school_sid") if $internal;
			$bps_id = $student->region unless $bps_id;

			$m->print('"'.$circuit_name.'","TR'.$student->code.'","'.$student->event.'","'.$student->school);
			$m->print('","TR'.$student->id.'","'.$student->first.' '.$student->last.'","'.$student->first.'","'.$student->last.'","')
			$m->print($bps_id.'","'.$birthstring.'","'.$student->grad_year.'","","'.$race.'","');
			$m->print($school->region_name.'","'.$school->region_code.'","'.$tourn->name.'"'."\r\n");

		}
	}

</%init>
