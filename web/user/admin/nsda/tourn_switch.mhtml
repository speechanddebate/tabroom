<%args>
	$person
	$perms
	$tourn_id      => undef
	$property_name  => undef
	$setting_name   => undef
	$property_value => 0
	$flag           => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($tourn_id) {
		$m->print('{ "error": true, "message": "No tourn ID sent"}');
		$m->abort();
	}

	unless ($property_name || $setting_name) {
		$m->print('{ "error": true, "message": "No property to change sent"}');
		$m->abort();
	}

	my $tourn = Tab::Tourn->retrieve($tourn_id);

	unless ($tourn) {
		$m->print('{ "error": true, "message": "No tourn found for ID '.$tourn_id.'"}');
		$m->abort();
	}

	my $message;

	if ($setting_name) {

		$message = "not " unless $property_value > 0;
		$message = "using strikes" if $setting_name eq "nsda_strikes";
		$message = "using judge ratings" if $setting_name eq "nsda_ratings";

		if ($setting_name eq "nsda_tabbing_software") {

			my $answers = $tourn->setting("nsda_district_questions");
			$answers{"nsda_tabbing_software"} = $property_value;
			$tourn->setting("nsda_district_questions", "json", $answers);

			if ($property_value eq "speechwire") {
				$message = "using SpeechWire"
			}

		} else {

			if ($setting_name eq "nc_purchased") {
				$message = " having purchased ".$property_value." room/days";
			}

			if ($setting_name eq "nc_requested") {
				$message = " having requested ".$property_value." room/days";
			}

			$tourn->setting($setting_name, $property_value);
		}

	} else {

		$tourn->$property_name($property_value);
		$tourn->update;

	}

	$m->print('{ "error": false, "message": "'.$tourn->name.' marked as '.$message.'"}');

	$m->abort();

</%init>

