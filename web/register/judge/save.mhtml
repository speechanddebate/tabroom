<%args>
	$dbh
	$tourn
	$tourn_settings
	$person
	$perms
	$judge_id => undef
</%args>
<%init>

	my $judge = Tab::Judge->retrieve($judge_id) if $judge_id;

	my %categories = $m->comp("/funclib/perms/categories.mas",
		tourn => $tourn,
		perms => $perms,
		limited => 1,
	);

	my $sth = $dbh->prepare("update person set nsda = NULL where id = ?");

	unless ($judge) {
		$m->comp("/funclib/abort.mas",
			message => "No judge record found for ID $judge_id"
		);
	}

	unless ($judge->category) {
		$m->comp("/funclib/abort.mas",
			message => "Judge has no valid judging category"
		);
	}

	unless ($judge->category->tourn) {
		$m->comp("/funclib/abort.mas",
			message => "Judge category is not attached to a tournament"
		);
	}

	unless ($judge->category->tourn == $tourn) {
		$tourn = $judge->category->tourn;
		%{$tourn_settings} = $tourn->all_settings();
	}

	my $now = DateTime->now();
	my $err;

	my $cj = $judge->chapter_judge;
	my $jp = $judge->person;

	my %judge_settings = $judge->all_settings();

	if ($jp && $cj && $jp->id != $cj->person) {
		$cj->person($jp->id);
		$cj->update();
	}

	if ($jp->phone && $jp->email)  {
		undef $ARGS{'email'};
		undef $ARGS{'phone'};
	}

	foreach my $prop ("first", "middle", "last", "code") {
		$judge->$prop($ARGS{$prop});
	}

	foreach my $prop ("alt_category", "covers", "obligation", "hired", "school") {
		$ARGS{$prop} = int($ARGS{$prop});
		$judge->$prop($ARGS{$prop});
	}

	if ($ARGS{"category_id"}
		&& $ARGS{"category_id"} != $judge->category
		&& $categories{$ARGS{'category_id'}}
	) {
		$judge->category($ARGS{"category_id"});
	}

	$judge->update();

	if ($cj) {
		foreach my $prop ("first", "middle", "last") {
			$cj->$prop($ARGS{$prop});
		}
		$cj->update();
	}

	my $category = $judge->category;
	my $max      = $category->setting("max_rounds");

	my $obligation = $ARGS{"obligation"};
	$obligation = 0 unless $obligation;

	my $hired = $ARGS{"hired"};
	if ($ARGS{'hire_offer'} > $hired) {
		$hired  = $ARGS{'hire_offer'};
	}
	$hired = 0 unless $hired;

	if ($tourn_settings->{"nsda_nats"}) {
		if ( ($obligation + $hired) > $max && $max > 0) {
			$err = "Warning: you have this judge covering more than the $max allowed days of obligation";
		}
	} else {
		if ( ($obligation + $hired) > $max && $max > 0) {
			$err = "Warning: you have this judge covering more than the $max allowed rounds of obligation";
		}
	}

	# Diamonds are a girl's best friend
	if ($jp > 0) {
		$m->comp("/funclib/nsda/membership.mas", person => $jp);
	}

	foreach my $tag (
		"special_job", "cfl_tab_first", "cfl_tab_second", "cfl_tab_third",
		"site_preference", "school_name_override", "state_override"
	) {
		unless ($judge_settings{$tag} eq $ARGS{$tag}) {
			$judge->setting($tag, $ARGS{$tag} || 0);
		}
	}

	foreach my $tag ("notes", "qual_history") {
		unless ($judge_settings{$tag} eq $ARGS{$tag}) {
			if ($ARGS{$tag}) {
				$judge->setting($tag, "text", $ARGS{$tag});
			} else {
				$judge->setting($tag, 0);
			}
		}
	}

	# Numerical only please

	foreach my $tag (
		"phone", "hire_offer", "tab_rating", "original_school",
		"nsda", "diamonds", "diamonds_override",
	) {
		$ARGS{$tag} =~ s/[\D_]//g;
		$judge->setting($tag, $ARGS{$tag});
	}

	if ($jp > 0) {

		$judge->setting("email", 0);
		$judge->setting("phone", 0);

		if ($ARGS{"phone"} && (not defined $jp->phone)) {
			$jp->phone($ARGS{"phone"});
			$jp->update();
		}

	} else {

		$judge->setting("email", $ARGS{"email"});
		$judge->setting("phone", $ARGS{"phone"});

		if ($cj) {
			if ($ARGS{"phone"} ne $cj->phone) {
				$cj->phone($ARGS{"phone"});
			}

			if ($ARGS{"email"} ne $cj->email) {
				$cj->email($ARGS{"email"});
			}

			$cj->update();
		}
	}

	if ($tourn_settings->{"nsda_nats"}) {

		my $response = $m->comp(
			"/funclib/nsda/judge_check.mas",
			tourn    => $tourn,
			judge_id => $judge->id
		);

		if ($judge->school) {
			$m->comp("/funclib/judgemath/nats_check_judging.mas", school => $judge->school);
		}
	}

	my $msg = "Judge information saved";
	$m->redirect("edit.mhtml?judge_id=$judge_id&msg=$msg&err=$err");

</%init>
