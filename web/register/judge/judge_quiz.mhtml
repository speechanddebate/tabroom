<%args>
	$tourn
	$tourn_settings
	$person         => undef
	$quiz_id        => undef
	$judge_id       => undef
	$person_id      => undef
	$property_value => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	my $quiz = Tab::Quiz->retrieve($quiz_id);
	my $judge_person = Tab::Person->retrieve($person_id);

	my $judge = Tab::Judge->retrieve($judge_id);
	my $pq = Tab::PersonQuiz->search( person => $person_id, quiz => $quiz_id)->first;

	my $message;

	if ($property_value) {

		if ($pq) {
			$pq->approved_by($judge_person);
			$pq->update();
		} else {
			$pq = Tab::PersonQuiz->create({
				person      => $judge_person->id,
				quiz        => $quiz_id,
				completed   => 1,
				approved_by => $person->id
			});
		}

		if ($pq->approved_by) {
			$message = "Person quiz marked as taken";
		}

	} else {

		$pq->approved_by(0);
		$pq->update();
		$message = "Person quiz marked as not approved";
	}

	if ($tourn_settings->{"nsda_nats"}) {
		my $response = $m->comp(
			"/funclib/nsda/judge_check.mas",
			tourn    => $tourn,
			judge_id => $judge->id
		);

		if ($judge->school) {
			$m->comp("/funclib/judgemath/nats_check_judging.mas", school => $judge->school);
		}
	}

	my $response = ({
		error   => \0,
		message => $message
	});

	$m->print(JSON::encode_json($response));

	$m->abort();

</%init>
