<%args>
	$tourn
	$tourn_settings
	$start
	$end
	$perms
	$what              => "tabbing"
	$event_id          => undef
	$events            => undef
	$delete_permission => undef
</%args>
<%init>

	use Data::Dumper;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my @tabs;

	if ($what eq "access") {
		undef $delete_permission;
		unless ($perms->{'owner'}) {
			$m->comp("/funclib/abort.mas", message => "Only a tournament owner may access that function");
		}
	}

	my $query_limit;

	unless (
		$perms->{'tourn'}{$tourn} eq "owner"
		|| $perms->{'tourn'}{$tourn} eq "tabber"
	) {

		if ($perms->{event}) {
			my $ids = join(",", keys %{$perms->{event}});
			$query_limit = " and event.id in ($ids) ";
			if ($event_id && $perms->{event}{$event_id}) {
				$query_limit = "and event.id = ".int($event_id);
			}
		}

		if ($perms->{category}) {
			my $ids = join(",", keys %{$perms->{category}});
			$query_limit = " and category.id in ($ids) ";
		}

		unless ($query_limit) {
			$m->comp("/funclib/abort.mas", message => "You do not have sufficient access to any events or categories");
		}
	}

	my $dbh = Tab::DBI->db_Main();

	my $sth = $dbh->prepare("
		select distinct cl.id,
			CONVERT_TZ(cl.created_at, '+00:00', tourn.tz) as created_at,
			cl.tag tag,
			cl.description description,
			cl.count count,
			concat_ws(' ', person.first, person.last) as person_name,
			person.email as person_email,
			event.id as event_id,
			event.name as event_name,
			event.abbr as event_abbr,
			category.id as category_id,
			category.name as category_name,
			category.abbr as category_abbr,
			round.id round_id,
			round.name round_name,
			round.label round_label
		from (tourn, change_log cl)
			left join event on event.id = cl.event
			left join judge on judge.id = cl.judge
			left join category on category.id = cl.category
			left join person on cl.person = person.id
			left join round on round.id = cl.round

		where tourn.id = ?
			and cl.tourn = tourn.id
			and cl.tag = ?
			and cl.created_at > ?
			and cl.created_at < ?
			$query_limit
		order by cl.created_at DESC
	");

	$sth->execute(
		$tourn->id,
		$what,
		$start->{"string"},
		$end->{"string"}
	);

	my $results = $sth->fetchall_hash();

</%init>

	<span class="seveneighths nospace">
		<h4><% $tourn->name %> <% ucfirst($what) %> Log </h4>
	</span>

	<span
		class = "eighth rightalign"
		id    = "hijinks_buttonarea"
	>
	</span>

	<&
		"/funclib/tablesorter.mas",
		table => "hijinks"
	&>

	<table id="hijinks">

		<thead>

		<tr class="yellowrow">

			<th class="smaller limit">
				Who
			</th>

			<th class="smaller">
				What
			</th>

			<th class="smaller">
				When
			</th>

			<th class="smaller">
				Detail
			</th>

%			if ($delete_permission) {
				<th>
				</th>
%			}
		</tr>
		</thead>

		<tbody>
<%perl>
 		foreach my $log (@{$results}) {

			if ($event_id) {
				next if ($log->{event_id} != $event_id);
			}

			$log->{description} =~ s/,/, /g;

			if ($what eq "strikecards") {
				delete $log->{description};
			}
</%perl>
			<tr id="<% $log->{id} %>">

				<td class="smallish" title="<% $log->{person_email} %>">
					<% $log->{person_name} %>
				</td>

				<td class="smallish centeralign nowrap">
					<% $log->{event_abbr}
						? $log->{event_abbr}
						: $log->{category_abbr}
							? $log->{category_abbr}
							: "Tourn"
					%>
				</th>

%				my $sort = $log->{created_at};
%				$sort =~ s/[\D_]//g;

				<td
					class     = "smallish centeralign nowrap"
					data-text = "<% $sort %>"
				>
					<& "/funclib/showdt.mas",
						string => $log->{created_at},
						format => "murica_short"
					&>
				</td>

				<td class="smallish">
%					if ($log->{round_label}) {
						<% $log->{round_label} %>
%					} elsif ($log->{round_name}) {
						Rnd <% $log->{round_name} %>
%					}
					<% $log->{description} %>
				</td>

%				if ($delete_permission) {
					<td class="smaller centeralign padless">
						<a
							value      = "1"
							id         = "<% $log->{id} %>"
							log_id     = "<% $log->{id} %>"
							on_success = "destroy"
							onClick    = "postSwitch( this, 'rm_log.mhtml')"
							class      = "buttonwhite fa fa-sm fa-trash redtext hover"
							title      = "Delete this log entry"
						>
						</a>
					</td>
%				}
			</tr>
%		}

		</tbody>

	</table>
