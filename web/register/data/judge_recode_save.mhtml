<%args>
	$tourn
	$tourn_settings
	$category_id
	$jpool_id  => undef
	$sort_by   => undef
	$codestart => undef
</%args>
<%init>

	my $category = Tab::Category->retrieve($category_id);

	my @judges;

	if ($tourn_settings->{"nsda_nats"}) {

		Tab::Judge->columns(TEMP => "state");

		Tab::Judge->set_sql( by_state => "
			select judge.*, region.code as state
			from judge
			left join school on school.id = judge.school
			left join region on school.region = region.id

			where judge.category  = ?
			order by region.code
		");

		@judges = Tab::Judge->search_by_state($category->id);

		my $last_state;
		my $baseline_code = $category->setting("code_start");
		$baseline_code = 100 unless $baseline_code > 0;

		my $current_code;
		my $undone;
		my $done;

		JUDGE:
		foreach my $judge (@judges) {

			unless ($judge->state) {
				$undone++;
				next JUDGE;
			}

			if ($last_state ne $judge->state) {
				$last_state = $judge->state;
				$current_code = $baseline_code;
			}

			my $code = $judge->state."J".$current_code;

			$judge->code($code);
			$judge->update();

			$done++;
			$current_code++;

            $current_code++ if $current_code == 69;
            $current_code++ if $current_code == 169;
            $current_code++ if $current_code == 269;
            $current_code++ if $current_code == 420;
            $current_code++ if $current_code == 666;

		}

		my $msg = "$done judges recoded.  $undone judges lacked a state code and were not";
		$m->redirect("/register/data/judge_recode.mhtml?msg=$msg");

	}

	Tab::Judge->columns(TEMP => "school_name");
	Tab::Judge->columns(TEMP => "school_code");

	Tab::Judge->columns(TEMP => "region_name");
	Tab::Judge->columns(TEMP => "region_code");

	if ($jpool_id && $jpool_id eq int($jpool_id)) {

		Tab::Judge->set_sql( by_jpool => "
			select judge.*,
				school.name school_name, school.code school_code,
				region.name region_name, region.code region_code,
				school.state school_state
			from (judge, jpool_judge)
				left join school on judge.school = school.id
				left join region on school.region = region.id

			where judge.id = jpool_judge.judge
			and jpool_judge.jpool = ?
		");

		@judges = Tab::Judge->search_by_sql($jpool_id);

	} else {

		Tab::Judge->set_sql( by_jpool => "
			select judge.*,
				school.name school_name, school.code school_code,
				region.name region_name, region.code region_code,
				school.state school_state
			from (judge, jpool_judge)
				left join school on judge.school = school.id
				left join region on school.region = region.id

			where judge.id = jpool_judge.judge
			and jpool_judge.jpool = ?
		");
		@judges = $category->judges;
	}

	@judges = sort {$a->last cmp $b->last} @judges;

	@judges = sort {$a->school_name cmp $b->school_name} @judges
		if $sort_by eq "school"
		|| $sort_by eq "diocese"
		|| $sort_by eq "region";

	if ($sort_by eq "region" || $sort_by eq "diocese") {
		@judges = sort {
			length($a->region_code) <=> length($b->region_code)
			|| $a->region_code cmp $b->region_code
		} @judges;
	}

	if ($sort_by eq "Randomly") {
	    my $i = scalar(@judges);
	    my $j;
	    foreach my $item (@judges)
	    {	 --$i;
	        $j = int rand ($i+1);
	        next if $i == $j;
	        @judges [$i,$j] = @judges[$j,$i];
 	   }
	}

	my $msg = "Codes for ".$category->name." reshuffled by $sort_by starting with $codestart";

	foreach my $judge (@judges) {

		#Let's attempt for SOME maturity here
		$codestart++ if $codestart == 69;
		$codestart++ if $codestart == 420;
		$codestart++ if $codestart == 169;
		$codestart++ if $codestart == 6969;
		$codestart++ if $codestart == 666;
		$codestart++ if $codestart == 6666;

		$judge->code($codestart);
		$codestart++;
		$judge->update;
	}

	$m->redirect("/register/data/judge_recode.mhtml?msg=$msg");

</%init>
