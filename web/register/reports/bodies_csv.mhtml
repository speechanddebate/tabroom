<%args>
	$dbh
	$tourn
	$person
	$session
</%args>
<%init>
	use POSIX;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

    my $now = DateTime->now;
    $now->set_time_zone($tz);

    my $name = $tourn->name;
    $name =~ s/[\W_]//g;

    my $filename = "PersonsInAttendance-$name.csv";
	$m->clear_buffer;
    $r->content_type('application/csv');
    $r->headers_out->{'Content-Disposition'} = "attachment; filename=$filename";

	my $student_sth = $dbh->prepare('
		select student.id, student.first, student.last, student.nsda,
			event.abbr, supp.abbr,
			chapter.id, chapter.nsda, school.name, school.state,
				chapter.formal,
				chapter.name, chapter.state,
				otherchapter.id,
			region.name,
			district.name, district.code,
			entry.created_at,
			entry.active

		from (student, entry_student, school, entry)

		left join region on region.id        = school.region
		left join chapter on student.chapter = chapter.id
		left join district on district.id    = school.district
		left join event
			on entry.event = event.id
			and NOT EXISTS (
				select es.id from event_setting es where es.tag = "supp" and es.event = event.id
			)

		left join event supp
			on entry.event = supp.id
			and EXISTS (
				select es.id from event_setting es where es.tag = "supp" and es.event = supp.id
			)

		left join chapter otherchapter on school.chapter = otherchapter.id

		where school.tourn = ?
			and school.id             = entry.school
			and entry.id              = entry_student.entry
			and entry_student.student = student.id
			and entry.active          = 1
		group by entry_student.id
		order by school.id, entry.event, entry.timestamp
	');

	$student_sth->execute($tourn->id);

	my %bodies_by_school = ();
	my %chapters;

	my %done;

    while(
		my (
			$student_id,
			$student_first, $student_last, $nsda,
			$event_code, $supp_code,
			$chapter_id, $chapter_nsda, $school_name, $school_state,
			$chapter_formal,
			$chapter_name, $chapter_state,
				$otherchapter_id,
			$region_name,
			$district_name, $district_code,
			$entry_timestamp,
			$active
		)
		= $student_sth->fetchrow_array()
	) {

		$supp_code =~ s/^A //g;
		$supp_code =~ s/^B //g;

		if ($done{$student_id}) {

			unless($done{$student_id}{"event"}) {
				$done{$student_id}{"event"} = $event_code;
			}

			unless($done{$student_id}{"supp"}) {
				$done{$student_id}{"supp"} = $supp_code;
			}

		} else {

			if ($otherchapter_id != $chapter_id) {
				$school_name  = $chapter_name;
				$school_state = $chapter_state;
			}

			my $person = ({
				first       => $student_first,
				last        => $student_last,
				nsda        => $nsda,
				type        => "competitor",
				event       => $event_code,
				supp        => $supp_code,
				school_nsda => $chapter_nsda,
				school_id   => $chapter_id,
				school      => $chapter_formal || $chapter_name,
				state       => $chapter_state,
				region      => $region_name,
				district    => $district_name,
				dcode       => $district_code,
				timestamp   => $entry_timestamp,
				active      => $active
			});

			push @{$chapters{$chapter_id}{"students"}}, $person;

			unless ($chapters{$chapter_id}{"name"}) {
				$chapters{$chapter_id}{"formal"} = $chapter_formal || $chapter_name;
				$chapters{$chapter_id}{"name"}   = $chapter_name;
				$chapters{$chapter_id}{"nsda"}   = $chapter_nsda;
				$chapters{$chapter_id}{"state"}  = $region_name;
			}

			$done{$student_id} = $person
		}
	}

	my $judge_sth = $dbh->prepare('
		select judge.first, judge.last, nsda.value,
			category.abbr,
			diamonds.value,
			chapter.id, chapter.nsda, school.name, school.state,
			chapter.formal,
			region.name,
			district.name, district.code,
			judge.timestamp

		from (judge, category)

			left join school on school.id = judge.school
			left join region on region.id = school.region
			left join district on district.id = school.district
			left join chapter on chapter.id = school.chapter
			left join judge_setting nsda
				on nsda.judge = judge.id and nsda.tag = "nsda"

			left join person on person.id = judge.person
			left join person_setting diamonds on diamonds.person = person.id
				and diamonds.tag = "diamonds"

		where category.tourn = ?
			and category.id = judge.category
		group by judge.id
		order by school.id
	');

	$judge_sth->execute($tourn->id);

    while(
		my (
			$judge_first, $judge_last, $nsda,
			$event_code,
			$diamonds,
			$chapter_id, $chapter_nsda, $chapter_name, $chapter_state,
			$chapter_formal,
			$region_name,
			$district_name, $district_code,
			$timestamp
		)
		= $judge_sth->fetchrow_array()
	) {

		$chapter_name =~ s/Hired //g;

		my $person = ({
			first       => $judge_first,
			last        => $judge_last,
			nsda        => $nsda,
			type        => "judge",
			event       => $event_code,
			school_nsda => $chapter_nsda,
			school_id   => $chapter_id || 1,
			school      => $chapter_formal || $chapter_name || "Neutral/Hired",
			state       => $chapter_state,
			region      => $region_name || "XX",
			district    => $district_name,
			dcode       => $district_code,
			diamonds    => $diamonds,
			timestamp   => $timestamp
		});

		$chapter_id = 0 unless $chapter_id;

		unless ($chapters{$chapter_id}{"name"}) {
			$chapters{$chapter_id}{"name"}  = $chapter_formal || $chapter_name;
			$chapters{$chapter_id}{"nsda"}  = $chapter_nsda;
			$chapters{$chapter_id}{"state"} = $region_name;
		}

		push @{$chapters{$chapter_id}{"judges"}}, $person;
	}

	$m->print("First,Last,Merit,Diamonds,School,SchoolID,State,Type,Event,Active,Region,District,DCode,Timestamp\n");

	foreach my $chapter_id (
		sort {
			$chapters{$a}{"state"} cmp $chapters{$b}{"state"}
			|| $chapters{$a}{"name"} cmp $chapters{$b}{"name"}
		} keys %chapters
	) {

		my @people;

		if ($chapters{$chapter_id}{"students"}) {
			push @people, sort {$_->{"last"} cmp $_->{"last"}} @{$chapters{$chapter_id}{"students"}};
		}

		if ($chapters{$chapter_id}{"judges"}) {
			push @people, sort {$_->{"last"} cmp $_->{"last"}} @{$chapters{$chapter_id}{"judges"}};
		}

		foreach my $person (@people) {

			$m->print('"'.$person->{"first"}.'"');
			$m->print(',');
			$m->print('"'.$person->{"last"}.'"');
			$m->print(',');
			$m->print('"'.$person->{"nsda"}.'"');
			$m->print(',');
			foreach (1 .. $person->{"diamonds"}) {
				$m->print('*');
			}
			$m->print(',');
			$m->print('"'.$person->{"school"}.'"');
			$m->print(',');
			$m->print('"'.$person->{"school_nsda"}.'"');
			$m->print(',');
			$m->print('"'.$person->{"state"}.'"');
			$m->print(',');

			if ($person->{'event'} eq "ATTN") { 
				$m->print('"attendee"');
				$m->print(',');
			} elsif ($person->{'event'}) {
				$m->print('"'.$person->{"type"}.'"');
				$m->print(',');
				$m->print('"'.$person->{"event"}.'"');
			} else {
				$m->print('"supp only"');
				$m->print(',');
				$m->print('"'.$person->{"supp"}.'"');
			}
			$m->print(',');
			$m->print('"'.$person->{"active"}.'"');
			$m->print(',');
			$m->print('"'.$person->{"region"}.'"');
			$m->print(',');
			$m->print('"'.$person->{"district"}.'"');
			$m->print(',');
			$m->print('"'.$person->{"dcode"}.'"');
			$m->print(',');
			$m->print('"'.$person->{"timestamp"}.'"');
			$m->print("\n");

		}

	}

	$m->flush_buffer();
	$m->abort;

</%init>
