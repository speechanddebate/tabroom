<%args>
	$school
	$tourn
	$filename
	$tourn_settings
	$weekend           => undef
	$skip_entry        => undef
	$skip_concessions  => undef
	$skip_payments     => undef
	$category_settings => undef
	$events            => undef
	$categories        => undef
	$concessions_array => undef
	$event_settings    => undef
	$school_settings   => undef
</%args>
<%init>

	use POSIX;

    unless ($school) {
        $m->print("No school id sent. Go back and try again");
        $m->abort;
    }

	my $total;
	my $feline_ref;

    ($total, $feline_ref) = $m->comp(
		"/funclib/school_fees.mas",
			entry_fees        => 1,
			school            => $school,
			tourn             => $tourn,
			ignore_judging    => $tourn_settings->{"ncfl"},
			tourn_settings    => $tourn_settings,
			events            => $events,
			categories        => $categories,
			concessions_array => $concessions_array,
			category_settings => $category_settings,
			event_settings    => $event_settings,
			school_settings   => $school_settings,
			weekend           => $weekend
	) unless $skip_entry;

    my @felines;

	@felines = @{$feline_ref} if $feline_ref;

	my $paid;
	my $payline_ref;

    ($paid, $payline_ref) = $m->comp(
		"/funclib/school_fees.mas",
			school            => $school,
			tourn             => $tourn,
			tourn_settings    => $tourn_settings,
			ignore_judging    => $tourn_settings->{"ncfl"},
			payments          => "whyyespleasethankyou",
			events            => $events,
			categories        => $categories,
			concessions_array => $concessions_array,
			category_settings => $category_settings,
			event_settings    => $event_settings,
			school_settings   => $school_settings,
			weekend           => $weekend
	) unless $skip_payments;

    my @paylines;

	@paylines = @{$payline_ref} if $payline_ref;

	my $con_total;
	my $conline_ref;

	($con_total, $conline_ref) = $m->comp(
		"/funclib/school_fees.mas",
			school            => $school,
			tourn             => $tourn,
			tourn_settings    => $tourn_settings,
			ignore_judging    => $tourn_settings->{"ncfl"},
			events            => $events,
			categories        => $categories,
			concessions_array => $concessions_array,
			category_settings => $category_settings,
			event_settings    => $event_settings,
			school_settings   => $school_settings,
			concessions       => "Yes"
	) unless $skip_concessions;

	my @conlines;

	@conlines = @{$conline_ref} if $conline_ref;

	return unless (@conlines || @paylines || @felines);

	my $symbol = $tourn_settings->{"currency"};

    my $concessions_label = $tourn_settings->{"concession_name"};
	$concessions_label = "Concessions" unless $concessions_label;

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;
    my $now = DateTime->now;
    $now->set_time_zone($tz);

	my $filepath = $Tab::file_root."/tmp/".$filename;
	open (TEXOUT, ">>$filepath.tex");
	binmode(TEXOUT, ":utf8");

	print TEXOUT "\\noindent\n";

	my $logo_file = $tourn_settings->{"logo"};

	if ($logo_file) {

		unless (-e "$Tab::file_root/tmp/".$logo_file) {
			system "cd $Tab::file_root/tmp;
				$Tab::latex_path_prefix/wget ".$Tab::s3_url."/".$tourn->id."/".$logo_file;
		}

		if (-e "$Tab::file_root/tmp/".$logo_file) {
			print TEXOUT "\\hspace{-4mm}\n";
			print TEXOUT "\\begin{minipage}[c]{1.4in}\n";
			print TEXOUT "\\includegraphics[width=\\linewidth]{".$logo_file."}\n";
			print TEXOUT "\\end{minipage}\n";
			print TEXOUT "\\begin{minipage}[c]{4in}\n";
		} else {
			print TEXOUT "\\begin{minipage}[c]{5.4in}\n";
		}
	} else {
		print TEXOUT "\\begin{minipage}[c]{5.4in}\n";
	}

	print TEXOUT "{\\Large\\bf ".&Tab::texify($tourn->name)." } \n";
	print TEXOUT "\\medskip\n\\newline\n";
	print TEXOUT "{\\large \\bf \\color{black!64} \\raggedright ";
		print TEXOUT "ENTRY" unless $skip_entry;
		print TEXOUT " and " unless ($skip_entry || $skip_concessions);
		print TEXOUT &Tab::texify(uc($concessions_label)) unless $skip_concessions;
		print TEXOUT " FEES } \n";
	print TEXOUT "\\end{minipage}\n";

	print TEXOUT "\\begin{minipage}[t]{1.5in}\n";
	print TEXOUT "\\hfill {\\LARGE \\bf \\color{black!32} INVOICE }\n";
	print TEXOUT "\\end{minipage}\n";

	print TEXOUT "\\vspace{.32in}\n";
	print TEXOUT "\\newline\n";

	my $address = $m->comp("/funclib/print_format.mas",
		message => $tourn_settings->{"invoice_address"}
	);

	print TEXOUT "\\begin{minipage}[t]{3.75in}\n";
	print TEXOUT "\\raggedright\n";

	if ($tourn_settings->{'boltizar_require_epayments'}) {
	print TEXOUT "{\\bf Payments must be remitted electronically via Tournament Money:}\n\n";
	print TEXOUT " https://tournament.money/pay/tabroom/".$tourn."/".$school;
	print TEXOUT "\\medskip\n\\newline\n";
	} else {
	if ($address) {
		print TEXOUT "{\\bf Payable To:}\n\n";
		print TEXOUT $address;
		print TEXOUT "\\medskip\n\\newline\n";
	}

	print TEXOUT "{\\bf Tournament Contact(s):} \\\\ \n ";

	foreach my $contact (
		$m->comp("/funclib/tourn_admins.mas",
			tourn => $tourn,
			contact => 1
		)
	) {
		print TEXOUT &Tab::texify($contact->first." ".$contact->last." (".$contact->email.")");
		print TEXOUT "\\smallskip\n\\newline\n";
	}

	print TEXOUT "\\end{minipage}\n";

	print TEXOUT "\\hspace{.25in}\n";

	my $start = $tourn->start->set_time_zone($tz);
	my $end = $tourn->end->set_time_zone($tz);

	print TEXOUT "\\begin{minipage}[t]{3.0in}\n";
		print TEXOUT "{\\bf Entry \\#:} \\hfill ".sprintf('%05d', $school->id) ." \n";
		print TEXOUT "\\smallskip\n\\newline\n";
		print TEXOUT "{\\bf Tournament Dates:} \\hfill ".&Tab::eurodate($start);
		print TEXOUT " -- ". &Tab::eurodate($end) if $start->day != $end->day;
		print TEXOUT "\n\\smallskip\n\\newline\n";
		print TEXOUT "{\\bf Invoice Printed:}  \\hfill ".&Tab::eurodate($now)." at ".&Tab::nicetime($now);
	print TEXOUT "\\end{minipage}\n";

	print TEXOUT "\\medskip\n";
	print TEXOUT "\\newline\n";
    print TEXOUT "\\centerline{\\textsb{\\Large For: ".&Tab::texify($school->name)." }}\n";
	print TEXOUT "\\medskip\n";
	print TEXOUT "\\newline\n";

	my $tabular = "\\begin{tabular}{|p{4.1in}|p{.5in}|p{.5in}|p{1.25in}|}\n";

	print TEXOUT "\\small\n";

	print TEXOUT $tabular;
	print TEXOUT "\\hline\n";
	print TEXOUT "\\rowcolor[rgb]{.81,.81,.81}\[6pt\]\[6pt\]\n";
	print TEXOUT "\\centering \\bf DESCRIPTION & \\centering  \\bf QTY & \\centering  \\bf PRICE & \\centering \\bf AMOUNT \\tabularnewline \n";
	print TEXOUT "\\hline\n";
	print TEXOUT "\\end{tabular}\n";

	print TEXOUT "\\begin{tt}\n";

	if (@felines) {
		print TEXOUT "\\vspace{-1px}\n";
		print TEXOUT $tabular;
		print TEXOUT "\\centering \\bf \\color{black!64}  ENTRY FEES & & & \\\\ \n";
		print TEXOUT "\\end{tabular}\n";
	}

	foreach my $line (@felines) {

		next unless $line->{'fee'};
		next if $line->{'deleted'};

		print TEXOUT "\\vspace{-1px}\n";
		print TEXOUT $tabular;
		print TEXOUT &Tab::texify($line->{'short_name'});
		print TEXOUT &Tab::texify($line->{'name'}) unless $line->{'short_name'};
		print TEXOUT " & ";
		print TEXOUT "\\raggedleft ".  &Tab::texify($line->{'quantity'}) ." & ";
		print TEXOUT "\\raggedleft ".  &Tab::texify($line->{'per_unit'}) ." & ";
		print TEXOUT "\\raggedleft ".  &Tab::texify(money($line->{'fee'}, $symbol))." \\tabularnewline \n";
		print TEXOUT "\\end{tabular}\n";
	}

	if (@conlines) {
		print TEXOUT "\\vspace{-1px}\n";
		print TEXOUT $tabular;
		print TEXOUT "\\centering \\bf \\color{black!64} ".&Tab::texify(uc($concessions_label))." & & & \\\\ \n";
		print TEXOUT "\\end{tabular}\n";
	}

	foreach my $line (@conlines) {
		next if $line->{'warn'};
		next if $line->{'message'};
		next if $line->{'deleted'};
		print TEXOUT "\\vspace{-1px}\n";
		print TEXOUT $tabular;
		print TEXOUT &Tab::texify($line->{'short_name'});
		print TEXOUT &Tab::texify($line->{'name'}) unless $line->{'short_name'};
		print TEXOUT " & ";
		print TEXOUT "\\raggedleft ".  &Tab::texify($line->{'quantity'}) ." & ";
		print TEXOUT "\\raggedleft ".  &Tab::texify($line->{'per_unit'}) ." & ";
		print TEXOUT "\\raggedleft ".  &Tab::texify(money($line->{'fee'}, $symbol))." \\tabularnewline \n";
		print TEXOUT "\\end{tabular}\n";
	}

	if (@paylines) {
		print TEXOUT "\\vspace{-1px}\n";
		print TEXOUT $tabular;
		print TEXOUT "\\centering \\bf \\color{black!64} PAYMENTS RECORDED & & & \\\\ \n";
		print TEXOUT "\\end{tabular}\n";
	}

	foreach my $line (@paylines) {
		next if $line->{'deleted'};
		print TEXOUT "\\vspace{-1px}\n";
		print TEXOUT $tabular;
		print TEXOUT &Tab::texify($line->{'name'});
		print TEXOUT " & & & ";
		print TEXOUT "\\raggedleft ".  &Tab::texify(money($line->{'fee'}, $symbol))." \\tabularnewline \n";
		print TEXOUT "\\end{tabular}\n";
	}

	print TEXOUT "\\vspace{-1px}\n";
	print TEXOUT $tabular;
	print TEXOUT " & & & \\tabularnewline ";
	print TEXOUT "\\hline\n";
	print TEXOUT "\\end{tabular}\n";

	print TEXOUT "\\begin{minipage}{4.205in}\n";
	print TEXOUT "~~";
	print TEXOUT "\\end{minipage}\n";
	print TEXOUT "\\begin{tabular}{|p{1.17in}|p{1.25in}|}\n";
	print TEXOUT "\\bf TOTAL DUE: & ";
	print TEXOUT "\\raggedleft ".  &Tab::texify(money(($total + $con_total + $paid), $symbol))." \\tabularnewline \n";
	print TEXOUT "\\hline\n";
	print TEXOUT "\\end{tabular}\n";

	print TEXOUT "\\end{tt}\n";
	print TEXOUT "\\bigskip\n";
	print TEXOUT "\\newline\n";

	my $warned;
	foreach my $line (@felines) {
		next if $line->{'fee'};
		next unless $line->{'warn'};
		next if $line->{'deleted'};
		$warned++;
		print TEXOUT "{\\bf \\color{red} ".&Tab::texify($line->{'name'})." } \n";
		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";
	}

	foreach my $line (@felines) {
		next if $line->{'deleted'};
		next if $line->{'fee'};
		next unless $line->{'message'};
		$warned++;
		print TEXOUT "{\\bf \\color{black!72} ".&Tab::texify($line->{'name'})." } \n";
		print TEXOUT "\\medskip\n";
		print TEXOUT "\\newline\n";
	}

	if ($tourn_settings->{'boltizar_enable'}) {
		print TEXOUT "\\medskip\n\\newline\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\begin{minipage}[t]{6.5in}\n";
		print TEXOUT "{\\bf Pay your invoice at:} ";
		print TEXOUT "\\newline\n";
		print TEXOUT " https://tournament.money/pay/tabroom/".$tourn."/".$school;
		print TEXOUT "\\newline\n";
		print TEXOUT "\\newline\n";
		print TEXOUT " Reminder: all pricing reflects a 3.5 percent cash discount, and credit card payments are not eligible for the cash discount. Fees paid in lieu of cash discount are clearly documented in the emailed receipts for credit card payments and when they are posted to Tabroom.";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\hfill \\strut\n";
		print TEXOUT "\\end{minipage}\n";
	}

	my $message = $m->comp("/funclib/print_format.mas",
		message => $tourn_settings->{"invoice_message"}
	);

	print TEXOUT "\\begin{minipage}[t]{6.5in}\n";
	print TEXOUT "\\raggedright\n";
	if ($address) {
		print TEXOUT "\\textsb{Notes:}\n\n";
		print TEXOUT $message;
	}
	print TEXOUT "\\end{minipage}\n";

	if ($tourn_settings->{'nsda_district'}) {

		print TEXOUT "\\medskip\n\\newline\n";
		print TEXOUT "\\begin{minipage}[t]{6.5in}\n";
		print TEXOUT "\\strut \\hfill\n";
		print TEXOUT "\\textsb{\\normalsize \\color{red} ";
		print TEXOUT " This invoice is for fees for the District Tournament, not NSDA Nationals.";
		print TEXOUT "\\hfill \\strut\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\strut \\hfill\n";
		print TEXOUT " Payment should NOT be sent to the NSDA National Office. } ";
		print TEXOUT "\\hfill \\strut\n";
		print TEXOUT "\\end{minipage}\n";
	}

    sub money {

		my ($number, $symbol) = @_;
		my $negative++ if $number < 0;
      	$number = sprintf("%.2f", $number);

		if ($symbol eq '$' || not defined $symbol) {
			1 while $number =~ s/^(-?\d+)(\d\d\d)/$1,$2/;
		} else {
			1 while $number =~ s/^(-?\d+)(\d\d\d)/$1.$2/;
		}

		$number = "(".$number.")" if $negative;
		$number = $number."~~" unless $negative;
      	return $number;
    }

</%init>
