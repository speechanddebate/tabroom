<%args>
	$tourn
	$person
	$person_settings
	$category
	$category_settings
	$school
</%args>
<%init>

	my $tz = $tourn->tz;
	my %tourn_settings = $tourn->all_settings();

	my $now = DateTime->now();
	use Data::Dumper;

	next unless $category_settings->{"nats_category"};

	my ($provided, $burden) = $m->comp(
		"/funclib/judgemath/nats_judging.mas",
		category => $category,
		school   => $school
	);

	my @jpools = $m->comp(
		"/funclib/category_jpools.mas",
		category => $category,
		limit	=> "registrant"
	);

	my $jpool_settings = $m->comp(
		"/funclib/jpool_settings.mas",
		category => $category
	);

	@jpools = sort {
		$jpool_settings->{$a}{"hire"} <=> $jpool_settings->{$b}{"hire"}
	} @jpools;

	my $last_hirable;

	foreach my $jpool (@jpools) {
		$last_hirable = $jpool->id
			unless $jpool_settings->{$jpool->id}{"hire"};
	}

	my @judges = $m->comp(
		"/funclib/nsda/nats_school_judges.mas",
		category => $category,
		school   => $school
	);

	my $judge_hire = Tab::JudgeHire->search(
		category => $category->id,
		school   => $school->id
	)->first;

</%init>

	<div class="martopmore padbottom rightalign">

		<div class="full nospace marbottom leftalign">
			<span class="quarter nospace">
				<h5 class="nospace">
					Main Tournament
				</h5>
			</span>
		</div>

%		if ($provided->{'minimum_unmet'} && (not defined $school->setting("no_judge_warnings"))) {
			<div class="full borderredvert odd marno padless centeralign">
				<p class='redtext semibold biggish'>
					You must bring judge(s) with
					<% $category_settings->{"minimum_supplied"} %>
					days minimum.
				</p>
			</div>
%		}

		<& "/funclib/tablesorter.mas", table => "main_obligation", nobuttons => "aye" &>

		<table id="main_obligation" class="leftalign">
			<thead>
				<tr class="yellowrow smallish padvert">
					<th>
						Description
					</th>

					<th>
						Days
					</th>

					<th>
						Status
					</th>
				</tr>
			</thead>

			<tbody>
				<tr>
					<td class="biggish semibold">
						<span class="spacer">
						</span>
						Total number of judging days school owes
					</td>

					<td class="centeralign padsetting semibold bluetext" id="needed">
						<% $burden->{"total"} %>
					</td>

%					my $brought = $provided->{"total"};
%					$brought += $judge_hire->rounds_accepted if $judge_hire;

					<td class="centeralign">
%						if ($burden->{"total"} <= $brought) {
							<span class="fa-lg fa greentext fa-check"></span>
%						} else {
							<span class="fa-lg fa redtext fa-times"></span>
%					}
					</td>
				</tr>

%               if (not defined $school->setting("no_judge_warnings")) {
                    <tr>
						<td class="biggish semibold">
                            <span class="spacer">
                            </span>
                            Minimum days that may not be bought out
                        </td>

                        <td class="centeralign padsetting semibold bluetext" id="mincount">
                            <% $category->setting("minimum_supplied") %>
                        </td>

                        <td class="centeralign">
%                          if ($provided->{"minimum_unmet"}) {
                                <span class="fa-lg fa redtext fa-times"></span>
%                          } else {
                                <span class="fa-lg fa greentext fa-check"></span>
%                          }
                        </td>
                    </tr>
%               }


%				foreach my $jpool (@jpools) {
%					next if $jpool_settings->{$jpool->id}{"hire"};
%					next unless $burden->{$jpool->id};

					<tr>
						<td class="biggish semibold">
							<span class="spacer">
							</span>
							Minimum days owed in <% $jpool->name %>, which cannot be hired
						</td>

						<td class="centeralign padsetting semibold bluetext">
							<% $burden->{$jpool->id} %>
						</td>

						<td class="centeralign">
%							if ($provided->{$jpool->id} >= $burden->{$jpool->id }) {
								<span class="fa-lg fa greentext fa-check"></span>
%							} else {
								<span class="fa-lg fa redtext fa-times"></span>
%							}
						</td>
					</tr>
%				}
			</tbody>
		</table>

		<span class="thenines leftalign">

		<div class="nospace martop">
			<span class="twothirds nospace">
				<h6 class="nospace">
					School Judges
				</h6>
			</span>

			<span
				class = "third rightalign nospace padvertless"
			>
				<a
					href  = "/register/judge/add.mhtml?category_id=<% $category->id %>&school_id=<% $school->id %>"
					class = "buttonwhite greentext fa fa-plus"
				></a>
			</span>
		</div>

%		if (@judges) {

			<table id="judges_<% $category->id %>">

%			my $total;

			<thead>
				<tr class="yellowrow smallish padvert">
					<th>
						First
					</th>

					<th>
						Last
					</th>

					<th>
						Days
					</th>

					<th>
						Pools
					</th>

					<th>
						Status
					</th>

					<th>
					</th>

				</tr>

			</thead>

			<tbody>
%				foreach my $judge (@judges) {
					<tr class="row">
						<td class="nospace padleft">
							<a
								class="white full padvert padleft"
								href="/register/judge/edit.mhtml?judge_id=<% $judge->id %>&school_id=<% $school->id %>"
							>
								<% $judge->first %>
							</a>
						</td>

						<td class="nospace padleft">
							<a
								class="white full padvert padleft"
								href="/register/judge/edit.mhtml?judge_id=<% $judge->id %>&school_id=<% $school->id %>"
							>
								<% $judge->last %>
							</a>
						</td>

						<td class="centeralign provided">
							<% $judge->obligation %>
						</td>

						<td style="font-size: 92%; line-height: 14pt;" class="nospace padleft">
							<% $judge->jpoolnames %>
						</td>

						<td class="centeralign">
							<% $judge->setting("incomplete")
								? '<span class="semibold redtext">INCOMPLETE</span>'
								: '<span class="semibold greentext">OK</span>'
							%>
						</td>

						<td class="centeralign nospace padvert">
							<span class="third nospace">
								<a
									class="buttonwhite bluetext fa fa-edit fa-sm"
									href="/register/judge/edit.mhtml?judge_id=<% $judge->id %>&school_id=<% $school->id %>"
								></a>
							</span>
							<span class="third nospace">
								<a
									class="buttonwhite redtext fa fa-trash fa-sm"
									href="/register/judge/drop.mhtml?judge_id=<% $judge->id %>&school_id=<% $school->id %>"
								></a>
							</span>
						</td>
					</tr>
%				}

				</tbody>
			</table>
%		}

		<div class="full nospace padtop martopmore">
			<span class="quarter nospace">
				<h6 class="nospace">
					Judging Buyouts
				</h6>
			</span>

			<span class="threequarters rightalign explain biggish">
				No buy-outs in CX, LD or PF.  Schools in main events must bring <% $category_settings->{"minimum_supplied"} %> days of judging.
			</span>
		</div>

		<div class="full bordertop odd marno martop padless">
			<span class="twofifths semibold biggish bluetext">
				Maximum days school can buy out for
			</span>

			<span class="tenth biggish semibold orangetext" id="hire">
				<% $provided->{"canhire"}{"total"} %>
			</span>

			<span class="quarter rightalign semibold biggish bluetext">
				Days bought
			</span>

			<span class="fifth centeralign">
				<input
					type  = "number"
					name  = "hires"
					id    = "hires"
					min   = 0
					value = "<% $judge_hire
						? $judge_hire->rounds_accepted
						: ""
					%>"
				>
			</span>

			<span class="twenty centeralign">
				<button
					type    = "button"
					class   = "fa fa-lg buttonwhite bluetext fa-save invert"
					onClick = "postHires('<% $category->id %>', <% $provided->{'hire'}{'total'} %>);"
				>
			</span>

			<span
				id  = "hired"
				class = "hidden"
			>
				<% $judge_hire ? $judge_hire->rounds_accepted() : "" %>
			</span>
		</div>
		</span>
	</div>

	<script>

        function totalOwed () {

            var needed = parseInt($('#needed').text()) || 0;

			var provided = 0;
			$(".provided").each(function() {
            	provided += parseInt($(this).text()) || 0;
			});

            var hired = parseInt($('#hired').text()) || 0;

            if (hired < 0) {
                hired = 0;
            }

            var owed = parseInt(needed - provided - hired);
            var amtOwed = 0;

            $(".hirestill").each(function() {
                amtOwed += parseInt($(this).text()) || 0;
            });

            if (owed < amtOwed) {
                owed = amtOwed;
            }

            if (owed < 0) {
                owed = 0;
            }

            $("#owed").text(owed);
        }

		function countHires() {

			var allOwed = parseInt($("#needed").text()) || 0;
			var maxRounds = allOwed;

			$(".provided").each(function() {
            	maxRounds -= parseInt($(this).text()) || 0;
			});

			$(".nohires").each(function() {
				maxRounds -= parseInt($(this).text()) || 0;
			});

			var minCount = parseInt($("#mincount").text()) || 0;

			if (maxRounds > (allOwed - minCount)) {
				maxRounds = allOwed - minCount;
			}

			if (maxRounds < 0) {
				maxRounds = 0;
			}

			$("#hire").text(maxRounds);

			return maxRounds;
		}

		$(document).ready(function() {
			countHires();
			totalOwed();
		});

		function postHires(categoryID) {

			var hireNumber = $("#hires").val();
			var maxRounds = countHires();

			if (hireNumber > maxRounds) {
//				I cannot wait until we're using node and I no longer have
//				to mix perl and javascript.

%				unless ($person->site_admin || $person_settings->{"nsda_admin"}) {
					hireNumber = maxRounds;
%				}
				alertify.notify("Warning: You can only buy out for "+maxRounds+" total days", "warning");
			}

			$.ajax({

				type	: 'POST',
				url		: "judge_hires.mhtml",
				data	: {
					school_id   : "<% $school->id %>",
					category_id : categoryID,
					hires       : hireNumber,
					max         : maxRounds,
				},

				success : function(data) {

					if (data.reply) {
						$(".replybucket").text(data.reply);
						$(".replyappend").append(data.reply);
						totalOwed();
					}

					if (data.error) {

						alertify.error(data.message);

					} else if (data.message) {

						alertify.notify(data.message, "custom");

					} else {

						console.log(data);
						alertify.warning("An error condition was tripped.");
					}
				}

			});
		}

	</script>

