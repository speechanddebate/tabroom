<%args>
	$person
	$perms
	$tourn
	$region_id      => undef
	$property_name  => undef
	$property_value => undef
	$setting_name   => undef
	$flag           => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($region_id) {
		$m->print('{ "error": true, "message": "No region ID sent"}');
		$m->abort();
	}

	unless ($property_name || $setting_name) {
		$m->print('{ "error": true, "message": "No property to change sent"}');
		$m->abort();
	}

	my $region = Tab::Region->retrieve($region_id);

	unless ($region) {
		$m->print('{ "error": true, "message": "No region found for ID '.$region_id.'"}');
		$m->abort();
	}

	my $message;

	if ($property_name) {
		$message .= " not " if $property_value == 0;
		$message .= $property_name;
	} elsif ($setting_name) {
		$message .= " not " if $property_value == 0;
		$message .= $setting_name;
	}

	if ($property_name) {
		$region->$property_name($property_value);
		$region->update;
	} elsif ($setting_name) {
		$property_value = "0" unless $property_value;
		$region->setting($setting_name, $property_value);
	}

	if (index($setting_name, "registered_") != -1) {

		if ($property_value == "0") {

			$region->setting("registered_at", 0);
			$region->setting("registered_".$tourn->id, 0);
			$region->setting("registered_by", 0);

		} else {

			my $now = DateTime->now();
			$region->setting("registered_at", "date", $now);
			$region->setting("registered_by", $person->id);
			$region->setting("registered_".$tourn->id, 1);
		}
	}

	$message =~ s/_/ /g;
	$message =~ s/\d//g;

	$m->print('{
		"error": false,
		"message": "'.$region->name.' marked as '.$message.'"
	}');

	$m->abort();

</%init>

