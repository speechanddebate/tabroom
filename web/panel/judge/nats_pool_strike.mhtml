<%args>
	$tourn
	$tourn_settings
	$person
	$round_id      => undef
	$property_name => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($round_id) {
		$m->print('{ "error": true, "message": "No round ID sent"}');
		$m->abort();
	}

	my $round = Tab::Round->retrieve($round_id);
	my $event = $round->event;
	my $now = DateTime->now();

	my $counter;
	my $msg;

	foreach my $jpool ($round->jpools) {

		foreach my $judge ($jpool->judges) {

			if ($property_name eq "remove") {

				foreach my $strike (
					Tab::Strike->search(
						judge => $judge->id,
						event => $event->id
					)
				) {
					$counter++;
					$strike->delete();
				}

				$msg = $counter ." judge strikes deleted for pool members against ".$event->abbr;

			} else {

				unless (
					Tab::Strike->search(
						judge => $judge->id,
						event => $event->id
					)
				) {
					$counter++;
					my $strike = Tab::Strike->create({
						type       => "event",
						judge      => $judge->id,
						event      => $event->id,
						entered_by => $person->id
					});
				}

				$msg = $counter ." judge strikes added for pool members against ".$event->abbr;
			}
		}
	}

    my %response = (
		error   => 0,
		message => $msg
    );

    $m->print(JSON::encode_json(\%response));

	$m->abort();

</%init>
