<%args>
	$tourn
	$tourn_settings
	$person
	$perms
</%args>
<%init>

	unless ($perms->{tourn}{$tourn} eq "owner") {
		$m->comp("/funclib/abort.mas",
			message => "You have found a screen with extraordinary potential for destruction of Palmer's own life.  Therefore, you cannot see it unless you are a tournament owner."
		)
	}

	Tab::Category->set_sql( nats => "
		select category.*
			from category, category_setting
		where category.tourn = ?
			and category.id = category_setting.category
			and category_setting.tag = 'nats_category'
	");

	my $category = Tab::Category->search_nats($tourn->id)->first;

	unless ($category) {
		$m->comp("/funclib/abort.mas",
			message => "No NSDA Nationals Main category found"
		);
	}

	my $dbh = Tab::DBI->db_Main();

	my $count_sth = $dbh->prepare("
		select
			event.id, count(distinct entry.id)
		from entry, event
		where event.category = ?
			and event.id = entry.event
			and entry.active = 1
		group by event.id
	");

	$count_sth->execute($category->id);

	my %counts;

	while (
		my (
			$event_id, $count
		) = $count_sth->fetchrow_array()
	) {
		$counts{$event_id} = $count;
	}

	$count_sth->finish();

	my $jcount_sth = $dbh->prepare("
		select
			jpool.id, count(distinct jpj.judge), sum(judge.hired), sum(judge.obligation)
		from jpool, jpool_judge jpj, judge
		where jpool.category = ?
			and jpool.id = jpj.jpool
			and jpj.judge =judge.id
			and judge.active = 1
		group by jpool.id
	");

	$jcount_sth->execute($category->id);
	my %jcounts;

	while (
		my (
			$jpool_id, $judge_count, $hired, $obligation
		) = $jcount_sth->fetchrow_array()
	) {
		$jcounts{$jpool_id}{"judges"} = $judge_count;
		$jcounts{$jpool_id}{"rounds"} = $hired + $obligation;
	}

	$jcount_sth->finish();

	my $supp_parent;

	my $sth = $dbh->prepare("
		select
			jpool.id, jpool.name,
			parent.id, parent.name,
			registrant.value,
			rounds.value,
			pool_target.value,
			pool_priority.value,
			pool_ignore.value,
			day.value,
			num_judges.value,
			round.id, round.flighted, round.name, round.type, round.timeslot,
			event.id, event.type, event.abbr, supp.value,
			max_panel_size.value,
			min_panel_size.value,
			count(judge.id),
			sum(judge.obligation),
			sum(judge.hired)

		from (jpool)

			left join jpool parent on parent.id = jpool.parent

			left join jpool_setting registrant
				on registrant.jpool = jpool.id
				and registrant.tag = 'registrant'

			left join jpool_setting rounds
				on rounds.jpool = jpool.id
				and rounds.tag = 'rounds'

			left join jpool_setting pool_target
				on pool_target.jpool = jpool.id
				and pool_target.tag = 'pool_target'

			left join jpool_setting day
				on day.jpool = jpool.id
				and day.tag = 'day'

			left join jpool_setting pool_ignore
				on pool_ignore.jpool = jpool.id
				and pool_ignore.tag = 'pool_ignore'

			left join jpool_setting pool_priority
				on pool_priority.jpool = jpool.id
				and pool_priority.tag = 'pool_priority'

			left join jpool_round jpr on jpr.jpool = jpool.id
			left join round on round.id = jpr.round
			left join event on round.event = event.id

			left join event_setting supp
				on supp.event = event.id
				and supp.tag = 'supp'

			left join event_setting max_panel_size
				on max_panel_size.event = event.id
				and max_panel_size.tag = 'max_panel_size'

			left join event_setting min_panel_size
				on min_panel_size.event = event.id
				and min_panel_size.tag = 'min_panel_size'

			left join round_setting num_judges
				on num_judges.round = round.id
				and num_judges.tag = 'num_judges'

			left join jpool_judge jpj on jpj.jpool = jpool.id
			left join judge on judge.id = jpj.judge and judge.active = 1

		where jpool.category = ?
		group by jpool.id, round.id
		order by registrant.value DESC, jpool.parent, jpool.name, round.name
	");

	$sth->execute($category->id);

	my %jpools;

	while (
		my (
			$jpool_id, $jpool_name,
			$jpool_parent, $parent_name,
			$registrant,
			$rounds,
			$pool_target,
			$pool_priority,
			$pool_ignore,
			$day,
			$num_judges,
			$round_id, $flighted, $round_name, $round_type, $round_timeslot,
			$event_id, $event_type, $event_abbr, $supp,
			$max_panel_size,
			$min_panel_size,
			$judge_count,
			$judge_rounds,
			$judge_hired_rounds
		)  = $sth->fetchrow_array()
	) {

		next unless $round_id;

		if ($supp) {
			$supp_parent = $jpool_parent;
		}

		unless ($jpools{$jpool_id}{"name"}) {
			$jpools{$jpool_parent}{"children"}{$jpool_id}++;
			$jpools{$jpool_parent}{"child_count"} = 1;

			$jpools{$jpool_id}{"name"}          = $jpool_name;
			$jpools{$jpool_id}{"parent"}        = $jpool_parent;
			$jpools{$jpool_id}{"registrant"}    = $registrant;
			$jpools{$jpool_id}{"pool_target"}   = $pool_target;
			$jpools{$jpool_id}{"pool_priority"} = $pool_priority;
			$jpools{$jpool_id}{"pool_ignore"}   = $pool_ignore;
			$jpools{$jpool_id}{"day"}           = $day;
			$jpools{$jpool_id}{"obligation"}    = $rounds;
		}

		unless ($jpools{$jpool_id}{"rounds"}{$round_id}) {

			$jpools{$jpool_id}{"rounds"}{$round_id}++;
			my $entry_count;

			if ($round_type eq "final") {

				if ($event_type eq "speech") {
					$entry_count += 6;
				} elsif ($event_type eq "congress") {
					$entry_count += 18;
				} else {
					$entry_count += 2;
				}

			} elsif ($event_type eq "speech" && $supp && $round_type eq "elim") {

				my $power = 8 - $round_name;
				my $round = 2 ** $power;
				$entry_count += $round * 6;

			} elsif ($round_type eq "elim") {

				if ($event_type eq "speech") {
					if ($round_name > 10) {
						$entry_count += 14;
					} elsif ($round_name > 30) {
						$entry_count += 30;
					} else {
						$entry_count += 60;
					}
				} elsif ($event_type eq "congress") {
					$entry_count += (18 * 4)
				} else {
					if ($round_name < 9) {
						$entry_count += 60;
					} else {
						my $entries = (40 - $round_name * 2);
						$entry_count += $entries;
					}
				}
			} else {
				$entry_count += $counts{$event_id};
			}

			my $panel_min;
			my $judge_min;

			if ($event_type eq "speech" || $event_type eq "congress") {

				if ($event_type eq "speech") {
					if ($round_type eq "elim") {
						if ($round_name > 10) {
							$max_panel_size = "7";
						} else {
							$max_panel_size = "6";
						}
					} else {
						$max_panel_size = "7" unless $max_panel_size;
					}
				} else {
					$max_panel_size = "18" unless $max_panel_size;
				}

				$panel_min = POSIX::ceil($entry_count / $max_panel_size);

				if ($flighted > 0) {
					$panel_min = (POSIX::ceil($panel_min / $flighted));
				}

				$num_judges = 1 unless $num_judges;

				$judge_min = ($panel_min * $num_judges);

			} else {

				$panel_min = POSIX::ceil($entry_count / 2);

				if ($flighted) {
					$panel_min = (POSIX::ceil($panel_min / $flighted));
				}

				$judge_min = ($panel_min * $num_judges);
			}

			$jpools{$jpool_id}{"ts"}{$round_timeslot}{"entry_count"} += $entry_count;
			$jpools{$jpool_id}{"ts"}{$round_timeslot}{"panel_count"} += $panel_min;
			$jpools{$jpool_id}{"ts"}{$round_timeslot}{"judge_count"} += $judge_min;
		}
	}

	foreach my $jid (keys %jpools) {

		my $min_judge;
		my $min_panel;
		my $min_count;

		foreach my $tid (keys %{$jpools{$jid}{"ts"}}) {

			if ($jpools{$jid}{"ts"}{$tid}{"judge_count"} > $min_judge) {
				$min_judge = $jpools{$jid}{"ts"}{$tid}{"judge_count"};
			}
			if ($jpools{$jid}{"ts"}{$tid}{"panel_count"} > $min_panel) {
				$min_panel = $jpools{$jid}{"ts"}{$tid}{"panel_count"};
			}
			if ($jpools{$jid}{"ts"}{$tid}{"entry_count"} > $min_count) {
				$min_count = $jpools{$jid}{"ts"}{$tid}{"entry_count"};
			}
		}


		$jpools{$jid}{"min_panel"} = $min_panel;
		$jpools{$jid}{"entries"}   = $min_count;
		$jpools{$jid}{"min_judge"} = $min_judge;
	}

</%init>

	<div class="menu">
		<div class="sidenote">
			<a
				class = "full blue"
				href  = "nats_pool_check.mhtml?category_id=<% $category %>"
			>Check It</a>
		</div>

		<div class="sidenote">

			<h4>Supps BS</h4>

%			if ($supp_parent) {
%				my $parent = Tab::JPool->retrieve($supp_parent);
%				my $postUrl = $Tab::indexcards_url."/tab/".$tourn->id."/jpool/$supp_parent/placeJudges/suppOnly";
%				my $warn = "This will place the judges into the jpools for supp only schools.  It skips Worlds.  It cannot be undone yet except manually.";
				<a
					class="full blue"
					onClick="postConfirm('<% $warn %>', this, '<% $postUrl %>');"
				>Pull Supp Only Judges Into <% $parent->name %> Pools</a>
%			}

			<h4>Congress Manipulations</h4>

			<form
				action = "nats_pool_hijinks.mhtml"
				method = "post"
			>
				<p class="bigger semibold bluetext">
					Put all Pref Congress parlis into
				</p>

				<div class="full centeralign odd">
					<select name="parlis" class="fixedmost">
						<option value=""></option>
<%perl>
							foreach my $jpool_id (
								sort {
									$jpools{$b}{"child_count"} <=> $jpools{$a}{"child_count"}
									|| $jpools{$a}{"name"} <=> $jpools{$b}{"name"}
								} keys %jpools
							) {
</%perl>
								<option
									value="<% $jpool_id %>"
								><% $jpools{$jpool_id}{"name"} %></option>
%							}
					</select>
				</div>

				<p class="bigger semibold bluetext">
					Put all Pref Congress non-parlis into
				</p>

				<div class="full centeralign odd">
					<select name="non_parlis" class="fixedmost">
						<option value=""></option>
<%perl>
							foreach my $jpool_id (
								sort {
									$jpools{$b}{"child_count"} <=> $jpools{$a}{"child_count"}
									|| $jpools{$a}{"name"} <=> $jpools{$b}{"name"}
								} keys %jpools
							) {
</%perl>
								<option
									value="<% $jpool_id %>"
								><% $jpools{$jpool_id}{"name"} %></option>
%							}
					</select>
				</div>

				<p class="bigger semibold bluetext martopmuchmore">
					If you're only regged in
				</p>

				<div class="full centeralign odd">
					<select name="in_congress" class="fixedmost">
						<option value=""></option>
<%perl>
							foreach my $jpool_id (
								sort {
									$jpools{$b}{"child_count"} <=> $jpools{$a}{"child_count"}
									|| $jpools{$a}{"name"} <=> $jpools{$b}{"name"}
								} keys %jpools
							) {
</%perl>
								<option
									value="<% $jpool_id %>"
								><% $jpools{$jpool_id}{"name"} %></option>
%							}
					</select>
				</div>

				<p class="bigger semibold bluetext">
					and don't pref congress, dump into
				</p>

				<div class="full centeralign odd">
					<select name="banish_to" class="fixedmost">
						<option value=""></option>
<%perl>
							foreach my $jpool_id (
								sort {
									$jpools{$b}{"child_count"} <=> $jpools{$a}{"child_count"}
									|| $jpools{$a}{"name"} <=> $jpools{$b}{"name"}
								} keys %jpools
							) {
</%perl>
								<option
									value="<% $jpool_id %>"
								><% $jpools{$jpool_id}{"name"} %></option>
%							}
					</select>
				</div>

				<div class="liblrow rightalign">
					<input
						type  = "submit"
						value = "Save"
					>
				</div>
			</form>
		</div>
	</div>

	<div class="main">

	<h2><% $category->name %></h2>

	<& "tabbar.mas",
		tourn    => $tourn,
		perms    => $perms,
		category => $category,
		nsda     => $tourn_settings->{'nsda_nats'},
		whoami   => "nats_pool_counts"
	&>

	<& "/funclib/tablesorter.mas", table => "jpool_count" &>

	<span class="threequarters nospace">
		<h4>Judge Pool Counts</h4>
	</span>
	<span
		id="jpool_count_buttonarea"
		class='quarter rightalign'
	></span>

	<table id ="jpool_count">

		<thead>

			<tr class="yellowrow smallish padvertless">
				<th>
					Pool
				</th>

				<th title="Is this a registrant judge pool?">
					Reg
				</th>

				<th title="How much obligation does an assignment cover?">
					Obl
				</th>

				<th title="Parent judge pool">
					Parent
				</th>

				<th title="Total rounds in the pool">
					Rd
				</th>

				<th title="Total entries in the pool">
					Es
				</th>

				<th title="Number of sections/estimated">
					MSs
				</th>

				<th title="Number of judges/estimated">
					MJs
				</th>

				<th title="Ignore this jpool in pooling">
					Ignore
				</th>

				<th title="Target number of judges to assign">
					Target
				</th>

				<th title="Priority: lower means pull better judges first">
					Priority
				</th>

				<th title="Judges in pool now">
					Js
				</th>

				<th title="Put the judges in the pool NOW.  Do it, England; For like the hectic in my blood he rages, And thou must cure me: till I know 'tis done, Howe'er my haps, my joys were ne'er begun.">
					DO IT
				</th>

				<th title="This thing will augment the spares into the pools they fit in but not touch what you've already done">
					ADD
				</th>
			</tr>
		</thead>

		<tbody>
<%perl>
			my %done;

			my @days = $m->comp("/funclib/tourn_days.mas", tourn => $tourn);

			foreach my $jpool_id (
				sort {
					$jpools{$b}{"child_count"} <=> $jpools{$a}{"child_count"}
					|| $jpools{$a}{"name"} cmp $jpools{$b}{"name"}
				} keys %jpools
			) {

				my @jpools = ($jpool_id);
				next unless $jpool_id;

				while (@jpools) {

					my $jid = shift @jpools;
					next unless $jid;

					next if $done{$jid}++;

					my @children = sort {
						$jpools{$a}{"name"} <=> $jpools{$b}{"name"}
						|| $jpools{$a}{"name"} cmp $jpools{$b}{"name"}
					} keys %{$jpools{$jid}{"children"}};

					if (@children) {
						unshift @jpools, @children;
					}

					my $pid = $jpools{$jid}{"parent"};
					my $round_count = scalar (keys %{$jpools{$jid}{"rounds"}});
</%perl>
					<tr>
						<td class="<% $jpools{$jid}{"child_count"} > 0 ? "semibold" : "padleftmore" %>" >

%							if ($jpools{$jid}{"child_count"}) {
								<span class="centeralign nospace fifth">
									<a
										href  = "nats_pool_report.mhtml?parent_id=<% $jid %>&tourn_id=<% $tourn->id %>"
										class = "fa fa-sm buttonwhite greentext fa-table"
										title = "Pooling Result Report"
									></a>
								</span>
%							}

							<span class="fourfifths">
								<a
									href   = "/panel/judge/jpool.mhtml?jpool_id=<% $jid %>"
									class  = "plain padvertless hover"
									target = "_blank"
								><% $jpools{$jid}{"name"} %></a>
							</span>
						</td>

						<td class="centeralign">
							<& "/funclib/bool_switch.mas",
								tag      => "registrant",
								value    => $jpools{$jid}{"registrant"},
								jpool_id => $jid,
								url      => "jpool_switch.mhtml",
								smaller  => 1
							&>
						</td>

						<td class="centeralign padless">
							<input
								type         = "text"
								min          = 0
								max          = 99
								size         = "2"
								jpool_id     = "<% $jid %>"
								setting_name = "rounds",
								value        = "<% $jpools{$jid}{"obligation"} %>"
								onChange     = "postSwitch(this, 'jpool_switch.mhtml');"
							>
						</td>

						<td class="smaller">
							<% $pid ? $jpools{$pid}{"name"} : "" %>
						</td>

						<td class="centeralign">
							<% $round_count %>
						</td>

						<td class="centeralign">
							<% $jpools{$jid}{"entries"} %>
						</td>

						<td class="centeralign">
							<% $jpools{$jid}{"min_panel"} %>
						</td>

						<td class="centeralign">
							<% $jpools{$jid}{"min_judge"} %>
						</td>

						<td class="centeralign">
							<& "/funclib/bool_switch.mas",
								tag      => "pool_ignore",
								value    => $jpools{$jid}{"pool_ignore"},
								jpool_id => $jid,
								url      => "jpool_switch.mhtml",
								smaller  => 1
							&>
						</td>

						<td class="centeralign padless">
							<span class="hiddencsv"><% $jpools{$jid}{"pool_target"} %></span>
							<input
								type         = "text"
								min          = 0
								max          = 99
								size         = "2"
								jpool_id     = "<% $jid %>"
								setting_name = "pool_target",
								value        = "<%
													$jpools{$jid}{"pool_target"}
													? $jpools{$jid}{"pool_target"}
													: $jpools{$jid}{"min_judge"}
												%>"
								onChange     = "postSwitch(this, 'jpool_switch.mhtml');"
							>
						</td>

						<td class="centeralign padless">
							<input
								type         = "text"
								min          = 0
								max          = 99
								size         = "2"
								jpool_id     = "<% $jid %>"
								setting_name = "pool_priority",
								value        = "<% $jpools{$jid}{"pool_priority"} %>"
								onChange     = "postSwitch(this, 'jpool_switch.mhtml');"
							>
						</td>

						<td class="centeralign padless">
							<%
								$jcounts{$jid}{"judges"}
							%>
						</td>

						<td class="centeralign">
%							my $msg = "You are about to delete the existing pools under ".$jpools{$jid}{"name"}.".  You, uh, sure about that bucko?";
%							if (@children) {
								<a
									parent_id = "<% $jid %>"
									onClick = 'postConfirm("<% $msg %>", this, "<% $Tab::indexcards_url %>/tab/<% $tourn %>/jpool/<% $jid %>/placeJudges/nats");'
									class  = "fa fa-sm fa-random buttonwhite bluetext centeralign border half"
								></a>
%							}
						</td>
						<td class="centeralign">
%							if (@children) {
%								my $msg = "You are about to augment pools under ".$jpools{$jid}{"name"}.".  You, uh, sure about that bucko?";
								<a
									parent_id = "<% $jid %>"
									augment   = 1
									onClick   = 'postConfirm("<% $msg %>", this, "<% $Tab::indexcards_url %>/tab/<% $tourn %>/jpool/<% $jid %>/placeJudges/nats");'
									class     = "fa fa-sm fa-plus-circle buttonwhite greentext centeralign border half"
								></a>
%							}
						</td>
					</tr>
%				}
%			}
		</tbody>
	</table>

	</div>

	<script>

		$(document).ready(function() {
			console.log("hellow");
			zebraRows();
		});

	</script>

%	;
