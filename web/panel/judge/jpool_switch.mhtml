<%args>
	$person
	$perms
	$jpool_id       => undef
	$setting_name   => undef
	$property_name  => undef
	$property_value => 0
	$flag           => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($jpool_id) {
		$m->print('{ "error": true, "message": "No judge pool ID sent"}');
		$m->abort();
	}

	unless ($property_name || $setting_name) {
		$m->print('{ "error": true, "message": "No property to change sent"}');
		$m->abort();
	}

	my $jpool = Tab::JPool->retrieve($jpool_id);

	unless ($jpool) {
		$m->print('{ "error": true, "message": "No judge pool found for ID '.$jpool_id.'"}');
		$m->abort();
	}

	my $message;

	if ($setting_name eq "message") {

		$jpool->setting($setting_name, "text", $property_value);
		$message = "Message changed to $property_value";

	} elsif ($setting_name) {

		if ($property_value == 1) {
			$message = "Setting $setting_name activated ";
		} elsif ($property_value > 0) {
			$message = "Setting $setting_name set to $property_value";
		} else {
			$message = "Setting $setting_name deactivated ";
		}

		$jpool->setting($setting_name, $property_value);

	} elsif ($property_name) {

		if ($property_value) {
 			$message = "JPool $property_name changed";
			$jpool->$property_name($property_value);
			$jpool->update();
		} elsif ($property_name eq "parent") {

			my $dbh = Tab::DBI->db_Main();
			my $sth = $dbh->prepare(" update jpool set $property_name = NULL where id = ? ");
			eval {
				$sth->execute($jpool_id);
			};

			if ($@) {
				my %response = (
					error   => 1,
					message => $@
				);
				$m->print(JSON::encode_json(\%response));
				$m->abort();
			}

			$message = "JPool $property_name erased ";
		} else {
			$jpool->$property_name(0);
			$jpool->update();
		}
	}

    my %response = (
		error   => 0,
		message => $message
    );

    $m->print(JSON::encode_json(\%response));
	$m->abort();

</%init>
