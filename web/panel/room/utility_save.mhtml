<%args>
	$tourn
	$tourn_settings
	$person
</%args>
<%init>

    my @rooms = eval {
        return @{$tourn_settings->{"online_rooms"}};
    };

	my $new = ({ id => "new" });
	push @rooms, $new;

	my $now = DateTime->now();

	my @keepers;
	my $counter = 1;

	foreach my $room (@rooms) {

		my $key = $room->{"id"};
		next unless $ARGS{$key."_name"};

		$room->{"name"} = $ARGS{$key."_name"};

		$room->{"name"}   = $ARGS{$key."_name"};
		$room->{"url"}    = $ARGS{$key."_url"};
		$room->{"access"} = $ARGS{$key."_access"};
		$room->{"edited_by"} = $person->id;
		$room->{"edited_at"} = DateTime::Format::MySQL->format_datetime($now);

		undef $room->{"event_id"};
		undef $room->{"category_id"};

		if ($room->{"access"} eq "judge" || $room->{"access"} eq "tab") {
			$room->{"category_id"} = $ARGS{$key."_category"};
		} elsif ($room->{"access"} eq "entry") {
			$room->{"event_id"} = $ARGS{$key."_event"};
		}

		if ($key eq "new") {
			$room->{"created_by"} = $person->id;
		}

		if ($ARGS{$key."_type"}) {
			$room->{"type"} = $ARGS{$key."_type"};
		} else {
			$room->{"type"} = "link";
		}

		if (
			$room->{"type"} eq "jitsi"
			&& ( (not defined $room->{"uuid"})
				|| $ARGS{$key."_regenerate"}
			)
		) {
			$room->{"uuid"} = substr(Digest::SHA::sha256_hex($key,$now->epoch),0,32);
		} elsif ($room->{"type"} eq "link") {
			delete $room->{"uuid"};
		}

		$room->{"id"} = $counter++;
		push @keepers, $room;
	}

	if (@keepers) {
		$tourn->setting("online_rooms", "json", \@keepers);
	} else {
		$tourn->setting("online_rooms", 0);
	}

	my $msg = scalar @keepers." utility rooms saved";
	$m->redirect("utility.mhtml?msg=$msg");

</%init>
