<%args>
	$tourn
	$tourn_settings
	$session
	$round_id => undef
	$no_pronoun => undef
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();

	my $query;
	my @params;
	my $limit;
	my $filename;

	my $event;

	if ($ARGS{"entry_id"}) {

		my $entry = Tab::Entry->retrieve($ARGS{"entry_id"});
		$limit = " where entry.id = ? and round.name = 1";
		push @params, $entry->id;

		$filename = "Entry-".$entry->code;
		$event = $entry->event;

	} elsif ($ARGS{"round_id"}) {

		my $round = Tab::Round->retrieve($ARGS{"round_id"});
		$limit = " where panel.round = ? ";
		push @params, $ARGS{"round_id"};

		if ($round->label) {
			$filename = $round->label;
		} else {
			$filename = "Session-".$round->name;
		}
		$filename =~ s/\s+//g;
		$event = $round->event;

	} elsif ($ARGS{"panel_id"}) {

		my $panel = Tab::Panel->retrieve($ARGS{"panel_id"});
		$limit = " where panel.id = ? ";
		push @params, $ARGS{"panel_id"};
		$filename = "Chamber-".$panel->letter;
		$event = $panel->round->event;

	} else {
		$m->comp("/funclib/abort.mas", message => "No valid section or round ID sent");
	}


	my $sth = $dbh->prepare("
		select
			student.first, student.last,
			entry.name entry_name, entry.code,
			school.name school_name, school.code school_code,
			panel.letter, round.name, round.label,
			room.name room,
			person.pronoun

		from (entry, ballot, panel, round, entry_student es, student)

			left join room on panel.room = room.id
			left join school on entry.school = school.id
			left join person on student.person = person.id

		$limit
			and entry.id = ballot.entry
			and ballot.panel = panel.id
			and panel.round = round.id
			and es.entry = entry.id
			and es.student = student.id
		group by student.id
		order by round.name, panel.letter, student.last
	");

	$sth->execute(@params);

    $filename = "Placards-".$filename;
    my $filepath = $Tab::file_root."tmp/".$filename;

	$m->comp("/funclib/printout.mas",
		tourn           => $tourn,
		filename        => $filename,
		head            => 1,
		landscape       => 1,
		rotating        => 1,
		transparent     => 1,
		varwidth        => 1,
		no_raw_encoding => 1,
		no_footer       => 1
	);

	my %event_settings = $event->all_settings();

	$event_settings{"congress_placard_designator"} = "lastnames" unless $event_settings{"congress_placard_designator"};

	my $nologo = $event->setting("congress_placard_nologo");
	my $logo_file = $event->setting("congress_placard_logo");

	undef $logo_file if $event_settings{"congress_placard_nologo"};

	if ($logo_file) {
		unless (-e "$Tab::file_root/tmp/".$logo_file) {
   			system "cd $Tab::file_root/tmp; $Tab::latex_path_prefix/wget ".$Tab::s3_url."/".$tourn->id."/".$event->id."/".$logo_file;
		}
	}

	unless ($logo_file) {

		$logo_file = $tourn_settings->{"logo"};
		undef $logo_file if $event_settings{"congress_placard_nologo"};

		if ($logo_file) {
			unless (-e "$Tab::file_root/tmp/".$logo_file) {
				system "cd $Tab::file_root/tmp; $Tab::latex_path_prefix/wget ".$Tab::s3_url."/".$tourn->id."/".$logo_file;
			}
		}
	}

	$event_settings{"congress_placard_title"} = "Representative"
		if (index($event->name, "House") != -1)
		&& (not defined $event_settings{"congress_placard_title"});
	$event_settings{"congress_placard_title"} = "Senator" unless $event_settings{"congress_placard_title"};

	my $fontsize = "128";
	my $smallfontsize = "96";
	my $supersmallfontsize = "80";
	my $smolestfontsize = "64";

    open (TEXOUT, ">>$filepath.tex");
	binmode(TEXOUT, ":utf8");

	my $results = $sth->fetchall_hash();
	my %taken;

	foreach my $ref (
		sort {
			$a->{name} <=> $b->{name}
			|| length($a->{letter}) <=> length($b->{letter})
			|| $a->{letter} cmp $b->{letter}
		} @{$results}
	) {

		my $first;

		if ($event_settings{"congress_placard_designator"} eq "codes") {
			$taken{$ref->{letter}}{$ref->{code}}++;
		} else {
			$taken{$ref->{letter}}{$ref->{last}}++;
		}

		print TEXOUT "\\begin{turn}{180}\n";
		print TEXOUT "\\fbox{\\begin{minipage}[b][3.15in][b]{9.35in}\n";

		if ($ref->{label}) {
			print TEXOUT "\\strut\\hfill\n";
			print TEXOUT "\\textsb{\\LARGE ";
			print TEXOUT Tab::texify($ref->{"label"});
			print TEXOUT " } \n";
			print TEXOUT "\\hfill\\strut\n";
			print TEXOUT "\\smallskip\n";
			print TEXOUT "\\newline\n";
		}

		print TEXOUT "\\large\n";
		print TEXOUT Tab::texify($ref->{entry_name})."\n";
		print TEXOUT "\\hfill\n";

		print TEXOUT Tab::texify("Chamber ".$ref->{letter})."\n";
		print TEXOUT "\\smallskip\n";
		print TEXOUT "\\newline\n";

		print TEXOUT Tab::texify($ref->{school_name})."\n";
		print TEXOUT "\\hfill\n";

		print TEXOUT Tab::texify("Room ".$ref->{room})."\n";
		print TEXOUT "\\smallskip\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\end{minipage}}\n";
		print TEXOUT "\\end{turn}\n";
		print TEXOUT "\\vspace{.25in}";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\fbox{\n";
		print TEXOUT "\\begin{minipage}[t][3.15in][t]{9.35in}\n";

		print TEXOUT "\\begin{minipage}[t][1in][t]{9.35in}\n";

		print TEXOUT "\\begin{minipage}[b][.8in][c]{2.5in}\n";
		if ($logo_file && -e "$Tab::file_root/tmp/".$logo_file) {
			print TEXOUT "{\\transparent{0.5}\\includegraphics[height=.75in]{".$logo_file."}}\n";
			print TEXOUT "\\hspace{.2in}\n";
		}
		print TEXOUT "\\strut\n";
		print TEXOUT "\\end{minipage} \n";

		print TEXOUT "\\begin{varwidth}[b][.8in][c]{4in}\n";
		print TEXOUT "\\strut\n";
		print TEXOUT "\\hfill\n";
		print TEXOUT "\\fontsize{32pt}{32pt}\\selectfont\n";
		print TEXOUT "\\color{black!48}\n";
		print TEXOUT Tab::texify(uc($event_settings{"congress_placard_title"}))."\n";
		print TEXOUT "\\hfill\n";
		print TEXOUT "\\strut\n";
		print TEXOUT "\\end{varwidth}\n";

		print TEXOUT "\\begin{minipage}[b][.8in][c]{2.5in}\n";
		print TEXOUT "\\fontsize{28pt}{28pt}\\selectfont\n";
		print TEXOUT "\\color{black!54}\n";
		print TEXOUT "\\strut\n";
		print TEXOUT "\\hfill\n";
		unless ($ARGS{"no_pronoun"}) {
			print TEXOUT Tab::texify($ref->{"pronoun"})."\n";
		}
		print TEXOUT "\\end{minipage}\n";
		print TEXOUT "\\end{minipage}\n";
		print TEXOUT "\\newline\n";

		my $string;

		if ($event_settings{"congress_placard_designator"} eq "lastnames") {

			$string = $ref->{last};
			if ($taken{$ref->{letter}}{$ref->{last}} > 1) {
				$string = $ref->{entry_name};
			}

		} else {

			$string = $ref->{code};

			if ($taken{$ref->{letter}}{$ref->{code}} > 1) {
				$string .= $ref->{first};
			}
		}

		print TEXOUT "\\begin{minipage}[t][1.25in][t]{9.30in}\n";
		print TEXOUT "\\color{black!100}\n";
		print TEXOUT "\\strut \\hfill\n";
		if (length($string) > 15) {
			print TEXOUT "\\fontsize{".$smolestfontsize."pt}{".$smolestfontsize."pt}\\selectfont ";
			print TEXOUT Tab::texify(uc($string))."\n";
		} elsif (length($string) > 11) {
			print TEXOUT "\\fontsize{".$supersmallfontsize."pt}{".$supersmallfontsize."pt}\\selectfont ";
			print TEXOUT Tab::texify(uc($string))."\n";
		} elsif (length($string) > 8) {
			print TEXOUT "\\fontsize{".$smallfontsize."pt}{".$smallfontsize."pt}\\selectfont ";
			print TEXOUT Tab::texify(uc($string))."\n";
		} else {
			print TEXOUT "\\fontsize{".$fontsize."pt}{".$fontsize."pt}\\selectfont ";
			print TEXOUT Tab::texify(uc($string))."\n";
		}
		print TEXOUT "\\hfill\n";
		print TEXOUT "\\smallskip\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\end{minipage}\n";
		print TEXOUT "\\bigskip\n";
		print TEXOUT "\\newline\n";

		print TEXOUT "\\begin{minipage}[t][1in][t]{9.35in}\n";

			print TEXOUT "\\strut \\hfill\n";
			unless ($event_settings{"congress_placard_noschools"}) {
				print TEXOUT "\\fontsize{32pt}{32pt}\\selectfont\n";
				print TEXOUT "\\color{black!48}\n";
				print TEXOUT Tab::texify($ref->{school_name})."\n";
				print TEXOUT "\\hfill\n";
				print TEXOUT "\\strut\n";
			}

		print TEXOUT "\\end{minipage}\n";

		print TEXOUT "\\smallskip\n";
		print TEXOUT "\\newline\n";
		print TEXOUT "\\end{minipage}}\n";
		print TEXOUT "\\newpage\n";
		print TEXOUT "\\color{black!100}\n";
	}

	$sth->finish();

	close TEXOUT;

	$m->comp("/funclib/printout.mas",
		tourn     => $tourn,
		filename  => $filename,
		tail      => 1,
		landscape => 1
	);

</%init>
