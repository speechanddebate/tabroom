<%args>
	$tourn
	$person
	$perms
	$dbh
</%args>
<%init>

	my $scope = substr($ARGS{"scope"}, 0, 3);

	my %events = $m->comp("/funclib/perms/events.mas",
		tourn   => $tourn,
		perms   => $perms,
		limited => 1
	);

	my %timeslots = $m->comp("/funclib/perms/timeslots.mas",
		tourn => $tourn,
		perms => $perms
	);

	if ($scope eq "cat") {

		my @oe = keys %events;

		my $cat_id = $ARGS{"scope"};
		$cat_id =~ s/[\D_]//g;

		foreach my $event (keys %events) {
			unless ($events{$event}{"category"} eq $cat_id) {
				delete $events{$event};
			}
		}

	} elsif ($ARGS{"scope"} eq "all") {

	} elsif ($ARGS{"scope"}) {

		my $type = $ARGS{"scope"};
		$type =~ s/typ_//g;

		foreach my $event (keys %events) {
			if ($events{$event}{"type"} ne $type) {
				delete $events{$event};
			}
		}
	}

	my $msg;
	my $last_event;
	my $limit;
	my $timeslot = $timeslots{$ARGS{timeslot_id}};

	if ($timeslot) {
		$limit = " and round.timeslot = ".$timeslot->{id};
	}

	my $event_ids;

	foreach my $event_id (keys %events) {
		$event_ids .= "," if $event_ids;
		$event_ids .= $event_id;
		$msg .= ", " if $msg;
		$msg .= $events{$event_id}{"abbr"};
	}

	if ($event_ids) {

		my $level_msg;
		my @levels;

		foreach my $tag ("schematics", "primary", "secondary", "feedback") {
			push @levels, $ARGS{$tag} || 0;
			$level_msg .= "$tag value is ".$ARGS{$tag};
		}

		my $publish_sth = $dbh->prepare("
			update round
				set published = ?, post_primary = ?, post_secondary = ?, post_feedback = ?
			where 1=1
				and round.event IN (".$event_ids.")
			$limit
		");

		$publish_sth->execute(@levels);

		$m->comp("/funclib/log.mas",
			type        => 'tabbing',
			tourn       => $tourn->id,
			person      => $person,
			description => "Publish everything for $msg invoked with levels $level_msg",
		);
	}

	$msg .= "Rounds in ".$msg." have been mass published";

	if ($timeslot) {
		$msg .= " in timeslot ".$timeslot->{name};
	}

	$m->redirect("index.mhtml?event_id=".$last_event."&msg=$msg");

</%init>
