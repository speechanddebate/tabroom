<%args>
	$person
	$perms
	$round_id       => undef
	$property_name  => undef
	$setting_name   => undef
	$property_value => 0
	$flag           => undef
	$tourn_settings
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($round_id) {
		$m->print('{ "error": true, "message": "No round ID sent"}');
		$m->abort();
	}

	unless ($property_name || $setting_name) {
		$m->print('{ "error": true, "message": "No property to change sent"}');
		$m->abort();
	}

	my $round = Tab::Round->retrieve($round_id);

	unless ($round) {
		$m->print('{ "error": true, "message": "No round found for ID '.$round_id.'"}');
		$m->abort();
	}

	my $message;
	my @replace;

	if ($setting_name) {

		$round->setting($setting_name, $property_value);
		$message = "Setting $setting_name changed to $property_value";

	} elsif ($property_name) {

		$round->$property_name($property_value);
		$round->update();

		if ($property_name eq "published") {

			$m->comp('/funclib/online_usage.mas',
				round    => $round,
				env      => \%ENV,
				district => $tourn_settings->{"nsda_district"}
			);

			$m->comp('/funclib/publish_flips.mas', round => $round);
		}

		$message = "Property $property_name changed to $property_value";

	}

    my %response = (
		error   => 0,
		message => $message
    );

    $m->print(JSON::encode_json(\%response));
	$m->abort();

</%init>

