<%args>
	$dbh
	$person
	$round
	$round_settings
	$tourn
	$tourn_settings
	$event
	$event_settings
	$category
	$category_settings
	$entered => undef
	$nowarn  => undef
</%args>
<%init>

	use Math::Round qw(round);

	my $round_type = $round->type;
	my $round_id = $round->id;

	my $panel_sth = $dbh->prepare("
		select count(panel.id)
		from (panel, ballot)
			where panel.round = ?
			and panel.id = ballot.panel
	");

	$panel_sth->execute($round_id);
	my ($count) = $panel_sth->fetch();

	if ($count < 1) {
		return;
	}

	my $round_robin++ if $event_settings->{"round_robin"};
	my $winloss_type;
	my $event_id = $event->id;

	if ($tourn_settings->{"nsda_nats"}
		&& (not defined $event_settings->{"not_nats"})
	) {
		if ($round_type eq "elim"
			|| $round_type eq "final"
			|| $round_type eq "runoff"
		) {
			$winloss_type = "elim";
		} else {
			$event_settings->{"bracket_by_ballots"}++;
		}

	} elsif ($round && $round->protocol > 0) {

		my $ok;

		foreach my $tb ($round->protocol->tiebreaks) {
			next if $ok;
			$ok++ if $tb->name eq "winloss";
		}

		unless ($ok) {
			$event_settings->{"bracket_by_ballots"}++;
		}
	}

	if ($event_settings->{"online_mode"}
		&& $round->setting("use_normal_rooms")
	) {
		$event_settings->{"online_mode"} = "sync";
	}

	unless ($event_settings->{"online_mode"}) {
		undef $event_settings->{"online_hybrid"};
	}

	my $tab_ratings   = $category_settings->{"tab_ratings"};
	my $coach_ratings = $category_settings->{"coach_ratings"};
	my $diversity     = $category_settings->{"track_diversity"};
	my $no_codes      = $category_settings->{"no_codes"};
	my $rounds_per    = $category_settings->{"rounds_per"};

	if ($round_type eq "elim" || $round_type eq "final") {
		undef $rounds_per;
	}

	my %round_merge;
	my %all_rounds;

	if ($round_settings->{"timeslot_merge"}) {

		my $sth = $dbh->prepare("
			select
				panel.id panel,
				round.id round, round.name, round.label,
				event.abbr, event.id event

			from (panel, round, event, entry, ballot, round r2)
			where r2.id = ?
				and panel.round = r2.id
				and panel.id = ballot.panel
				and ballot.entry = entry.id
				and entry.event = event.id
				and event.id = round.event
				and round.timeslot = r2.timeslot
			group by panel.id
		");

		$sth->execute($round_id);
		my $results = $sth->fetchall_hash();

		foreach my $res (@{$results}) {
			$round_merge{$res->{panel}}{"round"} = substr($res->{label},0,3) || "R".$res->{name};
			$round_merge{$res->{panel}}{"event"} = $res->{abbr};

			if ($res->{event} != $event->id) {
				$all_rounds{$res->{event}} = $res->{name};
			}
		}
	}

	my %warning;
	my $judge_use_ref = ({});

	if ($round->timeslot > 0) {
		$judge_use_ref = $m->comp(
			"/funclib/judge_use.mas",
			round => $round,
			event => $event
		);
	} else {
		$warning{"no_timeslot"} = "This round is not assigned to a timeslot.  That will lead to room ";
		$warning{"no_timeslot"} .= "and judge double booking issues.  Correct this error under the Settings button";
	}

	my %judge_use  = %{$judge_use_ref};
	my $flighted   = $round->flighted;
	my $published  = $round->published;
	my $aff_string = $event_settings->{"aff_label"};
	my $neg_string = $event_settings->{"neg_label"};

	my $blind_mode++
		if $event_settings->{"blind_mode"}
		&& $published < 1;

	my %anonymize = $m->comp("/funclib/blind_mode.mas", round => $round)
		if $blind_mode;

	my $district = $tourn_settings->{"nsda_district"};
	my $all++ if $tourn_settings->{"nsda_nats"} && $event_settings->{"supp"};

	$aff_string = "Aff" unless $aff_string;
	$neg_string = "Neg" unless $neg_string;

	my $last_round_name = $round->name - 1;

	my $last_round = Tab::Round->search(
		event => $event_id,
		name => $last_round_name
	)->first;

	my %entry_byes = $m->comp(
		"/funclib/entry_byes.mas",
			event => $event,
			round => $last_round
	);

	my %entry_wins = $m->comp(
		"/funclib/entry_wins.mas",
			event    => $event,
			round    => $last_round,
			all      => $all,
			type     => $winloss_type,
			first_tb => $event_settings->{"bracket_by_ballots"}
	);

	my %entry_losses = ();
	unless ($event_settings->{"bracket_by_ballots"} > 0) {
		%entry_losses = $m->comp("/funclib/entry_losses.mas",
				event => $event,
				type  => $winloss_type,
				all   => $all,
				round => $last_round
		);
	}

	foreach my $ar_event (keys %all_rounds) {

		next if $ar_event == $event->id;

		my $last_round_name = $all_rounds{$ar_event} - 1;

		my $last_round = Tab::Round->search(
			event => $ar_event,
			name  => $last_round_name
		)->first;

		my %alt_byes = $m->comp(
			"/funclib/entry_byes.mas",
				event => $ar_event,
				round => $last_round
		);

		my %alt_wins = $m->comp(
			"/funclib/entry_wins.mas",
				event_id => $ar_event,
				round    => $last_round,
				all      => $all,
				type     => $winloss_type,
				first_tb => $event_settings->{"bracket_by_ballots"}
		);

		my %alt_losses = $m->comp(
			"/funclib/entry_losses.mas",
				event_id => $ar_event,
				type     => $winloss_type,
				all      => $all,
				round    => $last_round
		) unless ($event_settings->{"bracket_by_ballots"});

		%entry_wins   = (%entry_wins, %alt_wins);
		%entry_losses = (%entry_losses, %alt_losses);
		%entry_byes   = (%entry_byes, %alt_byes);
	}

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $sidelocks++
		if ($round_type eq "elim"
			|| $round_type eq "final"
			|| $round_type eq "runoff"
		)
		&& not defined $event_settings->{'no_side_constraints'};

	undef $sidelocks
		if $tourn_settings->{"nsda_nats"}
		&& (not defined $event_settings->{"not_nats"});


	my $rr_pods;
	my $dio_regions = $event_settings->{"diocese_regions"};

	my $side_sql;

	if ($category_settings->{"side_based_prefs"}) {
		$side_sql = " and prefs.side = ballot.side ";
	}

	my $sth = $dbh->prepare("

        select panel.id, panel.letter, panel.bracket,
			room.name, room.url,
			school.name, school.code,
			entry.id, entry.name, entry.code, entry.dropped,
			seed.value, ballot.side,
            judge.id, judge.code, judge.first, judge.last, judge_school.name, judge_school.code,
			judge_hybrid.value,
			tab_rating.value tab_rating, ROUND(prefs.percentile, 1) percentile, prefs_tier.name tier, coach_tier.name coach_rating,
			panel.bye panel_bye, pod.value pod,
			ballot.audit, ballot.bye, ballot.forfeit, ballot.chair,
				ballot.judge_started start,
			winner.value, panel.flight, diverse.value,
			panel.publish, online_hybrid.value,
			entry_hybrid.value,
			strike.id, state.value setting_stage,
			noprefs.value noprefs


        from (panel, ballot)

		left join entry on ballot.entry = entry.id
		left join school on entry.school = school.id
		left join judge on ballot.judge = judge.id
		left join school judge_school on judge.school = judge_school.id
		left join room on panel.room = room.id
		left join person on judge.person = person.id

		left join panel_setting online_hybrid
			on online_hybrid.panel = panel.id
			and online_hybrid.tag = 'online_hybrid'

        left join entry_setting seed
			on seed.entry = entry.id
			and seed.tag = 'pairing_seed'

        left join entry_setting entry_hybrid
			on entry_hybrid.entry = entry.id
			and entry_hybrid.tag = 'online_hybrid'

        left join judge_setting tab_rating
			on tab_rating.judge = judge.id
			and tab_rating.tag = 'tab_rating'

        left join rating prefs on prefs.judge = judge.id and prefs.entry = entry.id $side_sql
        left join rating_tier prefs_tier on prefs.rating_tier = prefs_tier.id
        left join rating coach on coach.judge = judge.id and coach.type = 'coach'
        left join rating_tier coach_tier on coach.rating_tier = coach_tier.id
        left join entry_setting pod on pod.entry = entry.id and pod.tag = 'pod'
        left join school_setting state on state.school = school.id and state.tag = 'state'

		left join score strike
			on strike.ballot = ballot.id
			and (strike.tag = 'strike' or strike.tag = 'no_strike')

        left join score winner
			on winner.ballot = ballot.id
			and winner.tag = 'winloss'
			and winner.value > 0

        left join judge_setting diverse
			on diverse.judge = judge.id and diverse.tag = 'diverse'

        left join judge_setting judge_hybrid
			on judge_hybrid.judge = judge.id
			and judge_hybrid.tag = 'online_hybrid'

		left join school_setting noprefs on noprefs.school = school.id and noprefs.tag = 'noprefs'

        where panel.round = ?
			and panel.id = ballot.panel
        order by panel.bracket DESC, panel.letter

	");

	$sth->execute($round_id);

	my %panels = ();
	my %entries = ();
	my %judges = ();
	my @pods;

	while (
		my (
			$id, $letter, $bracket, $room, $room_url,
			$school_name, $school_code,
			$entry_id, $entry_name, $entry_code, $dropped,
			$entry_seed, $side,
			$judge_id, $judge_code, $judge_first, $judge_last, $judge_school, $judge_school_code,
			$judge_hybrid,
			$tab_rating, $percentile, $tier, $coach_rating,
			$bye, $pod,
			$done, $bbye, $fft, $chair, $judge_start,
			$winner, $flight, $diverse,
			$publish, $panel_hybrid,
			$entry_hybrid,
			$strike_id, $setting_state, $noprefs
		) = $sth->fetchrow_array()
	) {

		my $int_start = $judge_start;
		$int_start =~ s/[\D_]//g;

		if ($judge_start) {

			$panels{$id}{$judge_id}{"started"} = $judge_start;
			$panels{$id}{"start_count"}++;

			if (not defined $panels{$id}{"started"}) {
				$panels{$id}{"started"} = $judge_start;
				$panels{$id}{"int_started"} = $int_start;
			} elsif ($panels{$id}{"int_started"} < $int_start) {
				$panels{$id}{"started"} = $judge_start;
				$panels{$id}{"int_started"} = $int_start;
			}

		} else {
			$panels{$id}{$judge_id}{"started"}  = 0;
		}

		$panels{$id}{"bracket"}  = $bracket;
		$panels{$id}{"letter"}   = $letter;
		$panels{$id}{"bracket"}  = 0 unless $bracket;
		$panels{$id}{"room"}     = "NO ROOM" unless $room;
		$panels{$id}{"room"}     = $room;
		$panels{$id}{"room_url"} = $room_url;
		$panels{$id}{"publish"}  = $publish;
		$panels{$id}{"flight"}   = $flight;

		if ($event_settings->{"online_hybrid"}) {
			$panels{$id}{"online_hybrid"} = $panel_hybrid;
		}

		$panels{$id}{"winner"}{$entry_id}++ if $winner;

		if ($pod) {
			$panels{$id}{"pod"}  = $pod;
			$rr_pods++;
			push @pods, $pod;
		}

		push @{$panels{$id}{"entries"}}, $entry_id if $entry_id;

		if ($bye) {
			$panels{$id}{"bye"} = 1;
		} elsif ($bbye || $fft) {
			$panels{$id}{"someone_bailed"} = 1;
		}

		$entries{$entry_id}{"side"}   = $side;
		$entries{$entry_id}{"seed"}   = $entry_seed;
		$entries{$entry_id}{"strike"} = $strike_id if $strike_id;

		if ($blind_mode) {

			$entries{$entry_id}{"code"} = $anonymize{"entry"}{$entry_id};
			$entries{$entry_id}{"name"} = $anonymize{"entry"}{$entry_id};

		} else {

			$entries{$entry_id}{"code"}        = $entry_code;
			$entries{$entry_id}{"dropped"}     = $dropped;
			$entries{$entry_id}{"name"}        = $entry_name;
			$entries{$entry_id}{"school"}      = $school_name;
			$entries{$entry_id}{"school_code"} = $school_code;
			$entries{$entry_id}{"state"}       = $setting_state;
		}

		$entries{$entry_id}{"online"} = $entry_hybrid;

		if ($winner) {
			$entries{$entry_id}{$judge_id}{"won"} = 1;
			$panels{$id}{$judge_id}{"winner"}{$side}++;
		}

		$panels{$id}{"judgecount"}++;
		if ($done) {
			$entries{$entry_id}{$judge_id}{"done"} = 1;
			$panels{$id}{$judge_id}{"done"} = 1;
			$panels{$id}{"done"}++;
		} else {
			$panels{$id}{"undone"}++;
		}

		$entries{$entry_id}{"forfeit"} = $fft;
		$entries{$entry_id}{"bye"} = $bbye;

		unless ($noprefs > 0) {
			$percentile = 1 if $percentile < 1 && $percentile > 0;
			$entries{$entry_id}{"percentiles"} += round($percentile) if $percentile;
			$entries{$entry_id}{"tiers"} += $tier if $tier;
			$judges{$judge_id}{$entry_id}{"percentile"} = round($percentile);
			$judges{$judge_id}{$entry_id}{"tier"} = $tier;
		}

		$panels{$id}{"preftotal"}  += $percentile if $percentile;
		$panels{$id}{"preftotal"}  += $tier if $tier;
		$panels{$id}{"judgenames"} .= $judge_last." ";
		$panels{$id}{"judgecodes"} .= $judge_last." ";

		push @{$panels{$id}{"judges"}}, $judge_id if $judge_id;
		$judges{$judge_id}{"coach"} = $coach_rating;

		if ($blind_mode) {

			$judges{$judge_id}{"code"} = $anonymize{"judge"}{$judge_id};
			$judges{$judge_id}{"name"} = $anonymize{"judge"}{$judge_id};

		} else {

			$judges{$judge_id}{"code"} = $judge_code unless $no_codes;
			$judges{$judge_id}{"first"} = $judge_first;
			$judges{$judge_id}{"last"} = $judge_last;
			$judges{$judge_id}{"school"} = $judge_school;
			$judges{$judge_id}{"school_code"} = $judge_school_code;
		}

		$judges{$judge_id}{"online"}        = $judge_hybrid;
		$judges{$judge_id}{"tab"}           = $tab_rating;
		$judges{$judge_id}{"person"}        = $person;
		$judges{$judge_id}{"diverse"}       = $diverse;
		$judges{$judge_id}{"chair"}         = $chair;
	}

	if ($tourn_settings->{nsda_nats}) {

		my $entry_sth = $dbh->prepare("
			select
				entry.id, district.id district, district.code, district.name, chapter.state,
				region.code as region_code
			from (entry, school, chapter, district)
				left join region on region.id = school.region
			where entry.event = ?
				and entry.school = school.id
				and school.chapter = chapter.id
				and school.district = district.id
		");

		$entry_sth->execute($event->id);
		my $entries = $entry_sth->fetchall_hash();
		foreach my $entry (@{$entries}) {

			$entries{$entry->{id}}{"state"}       = $entry->{region_code};
			$entries{$entry->{id}}{"region_code"} = $entry->{region_code};

			unless ($entries{$entry->{id}}{"state"}) {
				$entries{$entry->{id}}{"state"} = $entry->{state};
			}

			$entries{$entry->{id}}{"district"}      = $entry->{district};
			$entries{$entry->{id}}{"district_name"} = $entry->{name};
		}

		my $judge_sth = $dbh->prepare("
			select
				judge.id, district.id district, district.code, district.name, chapter.state,
				region.code as region_code
			from (ballot, panel, judge, school, chapter, district)
				left join region on region.id = school.region
			where panel.round = ?
				and ballot.panel = panel.id
				and ballot.judge = judge.id
				and judge.school = school.id
				and school.chapter = chapter.id
				and school.district = district.id
		");

		$judge_sth->execute($round_id);
		my $judges = $judge_sth->fetchall_hash();
		foreach my $judge (@{$judges}) {

			$judges{$judge->{id}}{"state"} = $judge->{region_code};
			$judges{$judge->{id}}{"region_code"} = $judge->{region_code};

			unless ($judges{$judge->{id}}{"state"}) {
				$judges{$judge->{id}}{"state"} = $judge->{state};
			}

			$judges{$judge->{id}}{"district"}      = $judge->{district};
			$judges{$judge->{id}}{"district_name"} = $judge->{name};
		}


	} elsif (
		$tourn_settings->{ncfl}
		|| $tourn_settings->{regions}
	)  {

		my $entry_sth = $dbh->prepare("
			select
				entry.id, region.id region, region.code region_code, region.name region_name,
				chapter.state, area.value area
			from (entry, school, chapter, region)
				left join region_setting area on area.region = region.id and area.tag = 'area'
			where entry.event = ?
				and entry.school = school.id
				and school.chapter = chapter.id
				and school.region = region.id
		");

		$entry_sth->execute($event->id);
		my $entries = $entry_sth->fetchall_hash();

		foreach my $entry (@{$entries}) {
			foreach my $key (keys %{$entry}) {
				if ($key eq "state" && $entries{$entry->{id}}{"state"}) {
					next;
				}
				$entries{$entry->{id}}{$key} = $entry->{$key};
			}

			if ($dio_regions->{$entry->{region}}) {
				$entries{$entry->{id}}{"area"}  = $dio_regions->{$entry->{region}};
			}
		}

		my $judge_sth = $dbh->prepare("
			select
				judge.id, region.id region, region.code region_code, region.name region_name,
				chapter.state, area.value area
			from (ballot, panel, judge, school, chapter, region)
				left join region_setting area on area.region = region.id and area.tag = 'area'
			where panel.round = ?
				and ballot.panel = panel.id
				and ballot.judge = judge.id
				and judge.school = school.id
				and school.chapter = chapter.id
				and school.region = region.id
		");

		$judge_sth->execute($round_id);
		my $judges = $judge_sth->fetchall_hash();
		foreach my $judge (@{$judges}) {

			foreach my $key (keys %{$judge}) {
				if ($key eq "state" && $judges{$judge->{id}}{"state"}) {
					next;
				}
				$judges{$judge->{id}}{$key} = $judge->{$key};
			}

			if ($dio_regions->{$judge->{region}}) {
				$judges{$judge->{id}}{"area"}  = $dio_regions->{$judge->{region}};
			}
		}
	}

	if ($round_settings->{"showrooms_from"}) {

		$sth = $dbh->prepare("
			select room.id, room.name, entry.id
				from room, panel, entry, ballot
			where panel.round = ?
				and panel.id = ballot.panel
				and panel.room = room.id
				and ballot.entry = entry.id
		");

		$sth->execute($round_settings->{"showrooms_from"});

		while (
			my (
				$room_id, $room_name, $entry_id
			) = $sth->fetchrow_array()
		) {
			$entries{$entry_id}{"other_room_id"} = $room_id;
			$entries{$entry_id}{"other_room_name"} = $room_name;
		}
	}

	my %pods;

	if ($round_robin && $rr_pods) {
		foreach my $pod (@pods) {
			$pods{$pod}{"name"} = $event_settings->{"pod_".$pod};
		}
	}

	my $prefs = $category_settings->{"prefs"};

	if ($prefs eq "ndt") {
		$prefs = "ordinals";
		$prefs = "tiers" if $round_type eq "final";
		$prefs = "tiers" if $round_type eq "elim";
		$prefs = "tiers" if $round_type eq "runoff";
		$prefs = "ordinals" if $round->name == 9;
	}

	my @missing;

 	unless ($entered || $nowarn) {

		Tab::Entry->set_sql( missing =>  "
			select distinct entry.id
			from entry
			where entry.active = 1
			and entry.event = ?
			and not exists (
				select distinct ballot.id
				from ballot, panel
				where ballot.panel = panel.id
				and ballot.entry = entry.id
				and panel.round = ?
			)
		" );

		@missing = Tab::Entry->search_missing( $event_id, $round_id )
			unless ($round_type eq "elim"
				|| $round_type eq "final"
				|| $round_type eq "runoff"
				|| $round->setting("dontcare_aboutmissing")
			);

		unless( $round_type eq "elim"
			|| $round_type eq "final"
			|| $round_type eq "runoff"
		) {
			$warning{"sides_not_set"} = $round_settings->{"sides_not_set"};
		}

		if ($event_settings->{"online_ballots"}) {

			my $now = DateTime->now();

			if ($now > $tourn->end) {
				my $time_string = $m->comp("/funclib/showdt.mas",
					dt     => $tourn->end,
					tz     => $tourn->tz,
					return => 1,
					length => "longcasual"
				);
				$warning{"tournament_over"} = $time_string;
			}
		}
	}

	my $norecord;
	$norecord++ if $round->name == 1;
	$norecord++ if $round_type eq "elim";
	$norecord++ if $round_type eq "final";
	$norecord++ if $round_type eq "runoff";
	$norecord = "hidden" if $norecord;

	my @keys = keys %panels;

	foreach my $key (@keys) {

		if ($round_type eq "highlow" || $round_type eq "highhigh") {

			my $correct_sth = $dbh->prepare('update panel set bracket = ? where id = ?');
			my $best_bracket = 0;

			foreach my $entry (@{$panels{$key}{"entries"}}) {
				if ($best_bracket < $entry_wins{$entry}) {
					$best_bracket = $entry_wins{$entry}
				}
			}

			if ($best_bracket != $panels{$key}{"bracket"}) {

				$m->comp("/funclib/log.mas",
					type        => 'tabbing',
					event       => $event->id,
					tourn       => $tourn->id,
					round       => $round,
					panel       => $key,
					person      => $person,
					description => "Bracket mismatch corrected for $round_type round.  Section should be in bracket ".$best_bracket,
				);

				$panels{$key}{"bracket"} = $best_bracket;
				$correct_sth->execute($best_bracket, $key);
			}
		}
	}

</%init>

	<& "/funclib/tablesorter.mas",
		table     => "round_schematic",
		nobuttons => 1
	&>

% 	unless ($entered || $nowarn) {
%		if ( @missing ) {
			<div class="row centeralign padmore marbottommore martopmore">
				<h2 class="redtext">Drat!</h2>
%				if (@missing) {
					<h5><% scalar @missing %> entries left off pairing</h5>
%					foreach my $miss (@missing) {
						<a
							class="buttonwhite third nowrap redtext hover"
							title="<% $miss->name %>"
							href="/panel/manipulate/debate_round_edit.mhtml?entry_id=<% $miss->id %>&round_id=<% $round_id %>"
						>Schedule <% $miss->code ? $miss->code : $miss->name %></a>
%					}
%				}
			</div>
%		}
%	}

%	if ($warning{"no_timeslot"}) {
		<div class="redbordertop full centeralign odd padbottommore">
			<h5 class="redtext centeralign">Warning: Round Lacks a Timeslot</h5>
			<% $warning{'no_timeslot'} %>
		</div>
%	}

%	if ($warning{"tournament_over"}) {
		<div class="redbordertop full centeralign odd">
			<h5 class="bluetext centeralign">Warning: Your tournament has ended</h5>

			<p class="semibold redtext bigger">
				The end time of your tournament, set to <% $warning{"tournament_over"} %>,
				is now past.  <br />Judges will no longer be able to access online ballots
				<% $event_settings->{"online_mode"} ? " or links to online rooms": "" %>.
			</p>

			<a
				class  = "buttonwhite third nowrap bluetext invert hover"
				href   = "/setup/tourn/dates.mhtml"
				target = "_blank"
			>Adjust Schedule</a>
		</div>
%	}

%	if ($warning{"sides_not_set"}) {
		<div class="lirdrow full centeralign">
			<h5>Warning: You have not set sides for this debate:</h5>
			<a
				class = "dkblue martop padtop padbottom limit2"
				href  = "/panel/manipulate/snake_sides.mhtml?from=schemat&round_id=<% $round_id %>"
			>Snake Sides</a>
		</div>
%	}

	<table id="round_schematic">
		<thead>
			<tr class="yellowrow smaller">

%				if ($round_type eq "highlow" || $round_type eq "highhigh" || $round_type eq "elim") {
					<th class="bracket centeralign smallcell" title="Bracket">
						B
					</th>
%				}  elsif ($rr_pods) {
					<th class="pod">
						Pod
					</th>
%				}

%				if ($round->flighted > 1) {
					<th class="flight centeralign" title="Flight">
						F
					</th>
<%perl>
				}

				if (
					$event_settings->{"online_mode"} eq "nsda_campus"
					|| $event_settings->{"online_mode"} eq "nsda_campus_observers"
				) {
</%perl>
					<th title="Section View" class="centeralign rooms">
%						if ($event_settings->{"online_hybrid"}) {
							Room
%						} else {
							Sect
%						}
					</th>

					<th title="Online Meeting Room" class="centeralign rooms">
%						if ($event_settings->{"online_hybrid"}) {
							Vid
%						} else {
							Rm
%						}
					</th>

%				} elsif ($event_settings->{"online_mode"} eq "async") {

					<th class="centeralign rooms">
						Sect
					</th>
%				} else {

					<th class="centeralign rooms">
						Room
					</th>
%					if ($event_settings->{"online_hybrid"}) {
						<th class="centeralign rooms">
							Vid
						</th>
<%perl>
					}
				}
				foreach my $side_string ($aff_string, $neg_string) {
					if ($event_settings->{'seed_presets'}) {
</%perl>
						<th class="centeralign nowrap seeds hidden">
							<% substr($side_string,0,1) %> Sd
						</th>
%					}

%					if ($round_settings->{"showrooms_from"}) {
						<th class="centeralign nowrap showrooms_from hidden">
							<% substr($side_string,0,1) %> OtherRoom
						</th>
%					}

					<th class="centeralign nowrap records smallhide <% $norecord %>">
						<% substr($side_string,0,1) %>
						<% $event_settings->{"bracket_by_ballots"}  ? "Bals" : "W/L" %>
					</th>

					<th class="centeralign schoolnames hidden">
						<% $side_string %> School
					</th>

					<th class="centeralign schoolcodes hidden">
						<% $side_string %> School
					</th>

%					if ($tourn_settings->{"nsda_nats"}) {

						<td class="states nospace padleft hidden">
							<% substr($side_string,0,1) %> State
						</td>

						<td class="districtcodes nospace padleft hidden centeralign">
							<% substr($side_string,0,1) %> District
						</td>

						<td class="districtnames nospace padleft hidden">
							<% substr($side_string,0,1) %> Dist
						</td>

%					} elsif ($tourn_settings->{"regions"} )  {

						<th class="centeralign regionnames hidden">
							<% $side_string %> Region
						</th>

						<th class="centeralign regioncodes hidden">
							<% $side_string %> RegCode
						</th>

%						if ($tourn_settings->{region_areas}) {
							<th class="centeralign areas hidden">
								<% $side_string %> Area
							</th>
%						}

%					} elsif ($tourn_settings->{"ncfl"}) {

						<th class="centeralign regionnames hidden">
							<% $side_string %> Diocese
						</th>

						<th class="centeralign regioncodes hidden">
							<% $side_string %> Dio
						</th>

						<th class="centeralign areas hidden">
							<% $side_string %> Area
						</th>
%					}

					<th class="centeralign entries">
						<% $event_settings->{'no_side_constraints'} ? "Flip" : $side_string  %>
					</th>

%				}

				<th
					class = "centeralign judgeuse smallhide"
					title = "Numbers preceding name are rounds left/used/owed format.  Number following are ratings.">
					Use
				</th>

				<th class="centeralign judges sorter-text">
					Judge<% $round_settings->{"num_judges"} > 1 ? "s" : "" %>
				</th>

%				if ($prefs || $tab_ratings || $coach_ratings) {
					<th class="centeralign smallcell prefs {sorter: 'digit'}">
						<span class="smallshow">
							Prf
						</span>
						<span class="smallhide">
							Rating
						</span>
					</th>
%				}

%				if ($event_settings->{"judge_publish_results"}) {
					<th
						title = "Published Online"
						class = "centeralign publish padless smallhide"
					> Pub </th>
%				}

				<th class="smallcell">
				</th>
			</tr>
		</thead>

		<tbody>
<%perl>

        @keys =
            map  { $_->[0] }
            sort { $a->[1] <=> $b->[1] }
            map  { [$_, $panels{$_}{"room"} =~/(\d+)/] }
            @keys;

        @keys =
            map  { $_->[0] }
            sort { uc($a->[1]) cmp uc($b->[1]) }
            map  { [$_, $panels{$_}{"room"} =~ /(\D+)/] }
            @keys;

		@keys =
			sort {
				$panels{$a}{"bye"} <=> $panels{$b}{"bye"}
				|| $panels{$a}{"someone_bailed"} <=> $panels{$b}{"someone_bailed"}
				|| $panels{$a}{"done"} <=> $panels{$b}{"done"}
				|| $panels{$a}{"start_count"} <=> $panels{$b}{"start_count"}
				|| $panels{$b}{"int_started"} <=> $panels{$a}{"int_started"}
				|| $panels{$b}{"bracket"} <=> $panels{$a}{"bracket"}
			} @keys;

		foreach my $key (@keys) {

			my $locked_aff =  $m->comp(
				"/funclib/round_elim_dueaff.mas",
				panel_id => $key
			) if $sidelocks;

</%perl>
			<tr class="smallish">

<%perl>
				if (
					$round_type eq "highlow"
					|| $round_type eq "highhigh"
					|| $round_type eq "elim"
				) {
</%perl>
					<td class="<% $round_robin ? "" : "smallcell" %> centeralign padno bracket">

%						if ($round_type eq "elim") {
							<% $round_merge{$key} && $round_merge{$key}{"event"}
								? '<p class="marless padno">'.$round_merge{$key}{"event"}.'</p>'
								: ""
							%><% $round_merge{$key} && $round_merge{$key}{"round"}
								? '<p class="marless padno">'.$round_merge{$key}{"round"}.'</p>'
								: ""
							%>
							<% $panels{$key}{"bracket"} %>
%						} else {
							<%
								$panels{$key}{"bracket"}
							%><% $round_merge{$key} && $round_merge{$key}{"event"}
								? "<br />".$round_merge{$key}{"event"}
								: ""
							%><% $round_merge{$key} && $round_merge{$key}{"round"}
								? "<br />".$round_merge{$key}{"round"}
								: ""
							%>
%						}
					</td>

%				} elsif ($rr_pods) {
					<td class="centeralign padless pod">
						<% $pods{$panels{$key}{"pod"}}{"name"} %>
					</td>
%				}

%				if ($round->flighted > 1) {
					<td class="centeralign padno flight">
						<% $panels{$key}{"flight"} %>
					</td>
%				}

%				if ($panels{$key}{"bye"}) {

					<td
						class = "nospace rooms centeralign"
						title = "BYE"
					>
						<span title="Sort this, nitwit" class="hidden">ZZZ999</span>
						<a
							href  = "panel_view.mhtml?panel_id=<% $key %>"
							class = "padvertical redtext semibold"
						>BYE</a>
					</td>
<%perl>
					if (
						$event_settings->{"online_hybrid"}
						|| $event_settings->{"online_mode"} eq "nsda_campus"
						|| $event_settings->{"online_mode"} eq "nsda_campus_observers"
					) {
</%perl>
						<td>
						</td>
<%perl>
					}

				} elsif (
					$event_settings->{"online_mode"} eq "public_jitsi"
					|| $event_settings->{"online_mode"} eq "public_jitsi_observers"
					|| $event_settings->{"online_mode"} eq "nsda_campus"
					|| $event_settings->{"online_mode"} eq "nsda_campus_observers"
				) {
</%perl>
					<td
						class = "nospace rooms"
						title = "Section View"
					>
%						if ($event_settings->{"online_hybrid"}) {
							<span class="hidden"><% $panels{$key}{"room"} %></span>
							<a
								href  = "panel_view.mhtml?panel_id=<% $key %>"
								class = "padvertical white"
							><% $panels{$key}{"room"} %></a>


%						} else {
							<span class="hidden"><% $panels{$key}{"letter"} %></span>
							<a
								href  = "panel_view.mhtml?panel_id=<% $key %>"
								class = "padvertical white"
							><% $event->abbr." ".$panels{$key}{"letter"} %></a>
%						}
					</td>

%					my $publish_warn = "Online rooms will be enabled when the round ";
%					$publish_warn .= "is published and the tournament start time is reached";

					<td
						class = "nospace rooms centeralign"
						title = "<% $round->published ? "Online Room" : $publish_warn %>"
					>
<%perl>
						if ($round->published) {
							unless ($panels{$key}{"done"} == $panels{$key}{"judgecount"}) {
</%perl>
								<& "/funclib/online_room.mas",
									panel   => $key,
									person  => $person,
									dbh     => $dbh,
									no_name => 1,
									sort    => 1,
									class   => "twothirds fa-tiny"
								&>
<%perl>
							}
						} elsif (
							($panels{$key}{"done"} != $panels{$key}{"judgecount"})
							&& (($panels{$key}{"online_hybrid"}) || (not defined $event_settings->{"online_hybrid"}))
						) {
</%perl>
							<a
								target        = "_blank"
								class         = "invert fa fa-video-camera buttonwhite graytext marno full fa-tiny"
								onClick       = "alertify.warning('<% $publish_warn %>')";
							></a>
%						}
					</td>

%				} elsif ($event_settings->{"online_mode"} eq "async") {

					<td
						class = "nospace rooms"
						title = "Section View"
					>
						<span class="hidden">000</span>
						<a
							href  = "panel_view.mhtml?panel_id=<% $key %>"
							class = "padvertical white"
						><% $event->abbr." ".$panels{$key}{"letter"} %></a>
					</td>

%				} elsif ($panels{$key}{"room"} eq "NO ROOM") {

					<td
						class = "nospace rooms centeralign"
						title = "BYE"
					>
						<span class="hidden">000</span>
						<a
							href  = "panel_view.mhtml?panel_id=<% $key %>"
							class = "padvertical dkred centeralign padleftmore padrightmore"
						>NO ROOM</a>
					</td>

%				} else {

%					my $space_room = $panels{$key}{"room"};
%					$space_room =~ s/\s+//g;
					<td
						class     = "nospace rooms"
						title     = "<% $panels{$key}{"room"} %>"
						data-text = "<% $space_room || "ZZZ" %><% $panels{$key}{"flight"} || 1 %>"
					>
						<a
							href  = "panel_view.mhtml?panel_id=<% $key %>"
							class = "padvertical white noroom padleft"
						>
							<% $panels{$key}{"room"} %>
						</a>
					</td>

%					if ($event_settings->{"online_hybrid"}) {
						<td
							class = "nospace rooms centeralign"
							title = "Video Link to Section <% $panels{$key}{"letter"} %>"
						>
<%perl>
							if (
								$round->published
								&& $panels{$key}{"undone"}
								&& $panels{$key}{"online_hybrid"}
							) {
</%perl>
								<& "/funclib/online_room.mas",
									panel   => $key,
									person  => $person,
									dbh     => $dbh,
									no_name => 1,
									sort    => 1,
									class   => " fa-tiny"
								&>
%							}
						</td>
<%perl>
					}
				}

				eval {
					@{$panels{$key}{"entries"}} =
						sort {$entries{$a}{"side"} <=> $entries{$b}{"side"}}
						@{$panels{$key}{"entries"}}
				};

				my %seen = ();
				@{$panels{$key}{"judges"}} =
					grep { ! $seen{$_} ++ }
					@{$panels{$key}{"judges"}};

				undef(%seen);

				@{$panels{$key}{"entries"}} =
					grep { ! $seen{$_} ++ }
					@{$panels{$key}{"entries"}};

				@{$panels{$key}{"judges"}} =
					sort {$judges{$a}{"last"} cmp $judges{$b}{"last"}}
					@{$panels{$key}{"judges"}};

				@{$panels{$key}{"judges"}} =
					sort {$judges{$b}{"chair"} <=> $judges{$a}{"chair"}}
					@{$panels{$key}{"judges"}};

				foreach my $entry (@{$panels{$key}{"entries"}}) {

					my $pullup;
					my $warn;

					if ($round_type ne "elim"
						&& $round_type ne "final"
						&& $round_type ne "prelim"
						&& $round_type ne "runoff"
					) {
						if ($entry_wins{$entry} < $panels{$key}{"bracket"}) {
							$pullup = $panels{$key}{"bracket"} - $entry_wins{$entry};
						}
					}

					if ($published && (not defined $entered)) {
						my $warn = "This round is published and you are about to move an entry.   This seems suspicious.  Are you sure?";
					}
</%perl>
%					if ($event_settings->{'seed_presets'}) {
						<td class="hidden seeds centeralign nowrap nospace">
							<% $entries{$entry}{"seed"}
								?  $entries{$entry}{"seed"}
								: $entry
							%>
						</td>
%					}

%					if ($round_settings->{"showrooms_from"}) {
						<td class="hidden showrooms_from centeralign nowrap nospace">
							<% $entries{$entry}{"other_room_name"} %>
						</td>
%					}

					<td
						class="<% $norecord %> smallhide records centeralign nowrap nospace <%
							$pullup > 1 ? "lird semibold" : $pullup ? "libl semibold" : ""
						%>"
						title="<% $pullup ? "ENTRY IS PULLED UP ".$pullup." BRACKET(S)" : "" %>"
					>

%						if ($event_settings->{"bracket_by_ballots"}) {
							<% $entry_wins{$entry} ? $entry_wins{$entry} : 0 %>
%						} else {
							<%
								$entry_wins{$entry} ? $entry_wins{$entry} : 0
							%>-<%
								$entry_losses{$entry} ? $entry_losses{$entry} : 0
							%>
%						}
					</td>

					<td class="schoolnames nospace padleft hidden">
						<% $entries{$entry}{"school"} %>
					</td>

					<td class="schoolcodes nospace padleft hidden">
						<% $entries{$entry}{"school_code"} %>
					</td>

%					if ($tourn_settings->{"nsda_nats"}) {

						<td class="states nospace padleft hidden centeralign">
							<% $entries{$entry}{"region_code"} %>
						</td>

						<td class="districtcodes nospace padleft hidden centeralign">
							<% $entries{$entry}{"district"} %>
						</td>

						<td class="districtnames nospace padleft hidden">
							<% $entries{$entry}{"district_name"} %>
						</td>

%					} elsif ($tourn_settings->{"ncfl"} || $tourn_settings->{"regions"} )  {

						<td class="regionnames nospace padleft hidden">
							<% $entries{$entry}{"region_name"} %>
						</td>

						<td class="regioncodes nospace padleft hidden centeralign">
							<% $entries{$entry}{"region_code"} %>
						</td>

%						if ($tourn_settings->{"ncfl"} || $tourn_settings->{region_areas}) {
							<td class="areas nospace padleft hidden centeralign">
								<% $entries{$entry}{"area"} %>
							</td>
%						}
%					}

					<td
						class="nospace entries
							<% $pullup > 1 ? "lird" : $pullup ? "libl" : "" %>
							<% $entries{$entry}{"dropped"} ? "semibold redtext" : "" %>
						"
						title="<% $entries{$entry}{"name"} %> <% $pullup ? " IS PULLED UP ".$pullup." BRACKET(S)" : "" %>"
						data-text="<% $entries{$entry}{"code"} %> <% $entries{$entry}{"name"} %>"
					>
%						if ($round->published < 1) {
							<a
								class="leftalign button white"
								href="/panel/manipulate/entry_edit.mhtml?round_id=<% $round_id %>&entry_id=<% $entry %>"
								<& "/funclib/confirm.mas", warn => $warn &>
							>
%						} else {
							<a
								class="leftalign button white"
								href="panel_view.mhtml?panel_id=<% $key %>"
							>
%						}

							<div class="identities">
								<span class="entrycodes nospace <% $entries{$entry}{"dropped"} ? "redtext underline" : "" %>">
%									if ($event_settings->{"online_hybrid"} && $entries{$entry}{"online"}) {
										<span class="fa-tiny fa greentext nospace semibold fa-laptop">
										</span>
%									}
									<% $entries{$entry}{"code"} || '<span class="inline semibold redtext">ENTRY WITHOUT CODE</span>' %>
									<% $round_settings->{"strikes_published"}
										?  $entries{$entry}{"strike"}
											?  '<span class="semibold redtext full">Strikes In</span>'
											: ""
										: ""
									%>
								</span>

								<span class="entrynames nospace hidden">
									<% $entries{$entry}{"name"} %>
								</span>

								<span class="sixth hidden nospace regions top">
									<% $entries{$entry}{"region_code"} %>
								</span>
							</div>

							<div class="anonymize hidden centeralign">
								<% $entry %>
							</div>
						</a>

					</td>

%				}

%				if (scalar @{$panels{$key}{"entries"}} < 2) {

					<td class="seeds centeralign nowrap nospace hidden">
					</td>

					<td class="showrooms_from centeralign nowrap nospace hidden">
					</td>
					<td class="byes centeralign nowrap nospace hidden">
					</td>

					<td class="<% $norecord %> smallhide records centeralign nowrap nospace">
					</td>

					<td class="schoolnames nospace padleft hidden">
					</td>

					<td class="schoolcodes nospace padleft hidden">
					</td>

					<td class="nospace entries">
					</td>

%					if ($tourn_settings->{"nsda_nats"}) {

						<td class="states nospace padleft hidden centeralign">
						</td>

						<td class="districtcodes nospace padleft hidden centeralign">
						</td>

						<td class="districtnames nospace padleft hidden">
						</td>

%					} elsif ($tourn_settings->{"ncfl"} || $tourn_settings->{"regions"} )  {

						<td class="regionnames nospace padleft hidden">
						</td>

						<td class="regioncodes nospace padleft hidden centeralign">
						</td>

%						if ($tourn_settings->{"ncfl"} || $tourn_settings->{region_areas}) {
							<td class="areas nospace padleft hidden centeralign">
							</td>
<%perl>
						}
					}
				}

				$m->print('<td class="smallhide judgeuse nospace centeralign">');

					if ($panels{$key}{"judges"}) {

						foreach my $judge (
							@{$panels{$key}{"judges"}}
						) {
</%perl>
							<span
								class = "full judgeheight obligation"
								title = "<% $judge_use{$judge}{"percentage"}."% obligated " %>"
%								if ($rounds_per) {
									style = "min-width: 7em;"
%								}
							>
								<span class="hidden">
									<% $judge_use{$judge}{"percentage"} %>
								</span>

%								if ($rounds_per) {
									<span class="third nospace" style="min-width: 2.5em;">
										<% $judge_use{$judge}{"percentage"} %>
									</span>
									<span class="threefifths nospace" style="min-width: 3.5em;">
										<%
											$judge_use{$judge}{'left'}
											."/".
												($judge_use{$judge}{'judged_already'}
												+ $judge_use{$judge}{'will_judge'})
											."/".
											$judge_use{$judge}{'oblig'}
										%>
									</span>
%								} else {
									<% $judge_use{$judge}{'judged_all'}
										? $judge_use{$judge}{'judged_all'}
										: "0"
									%>
%								}
							</span>
%						}
%					}

				</td>

%				if ($panels{$key}{"judges"} && scalar @{$panels{$key}{"judges"}} > 0) {
					<td
						class = "judges nospace nowrap"
						title = "<% $panels{$key}{"judgecodes"} %> <% $panels{$key}{"judgenames"} %>"
					>

%					foreach my $judge (
%						@{$panels{$key}{"judges"}}
%					) {

						<span class="hidden">
							<% $judges{$judge}{"last"} %> <% $judges{$judge}{"first"} %>
							<% $judges{$judge}{"code"} ? $judges{$judge}{"code"} : "" %>
						</span>

						<a class=" <% $judges{$judge}{"chair"}
								? "semibold"
								: "" %> hover full white judgeheight nospace debatejudge flexrow"
							title="<%
								$judges{$judge}{"last"}.", ".$judges{$judge}{"first"}
							%> <%
									$event_settings->{'online_ballots'}
									? $judges{$judge}{"person"}
									? ""
									: " - LUDDITE ALERT: Judge is not linked for online ballots"
									: ""
								%><%
									$event_settings->{"online_hybrid"} && $judges{$judge}{"online"}
									? "Judge is online remotely"
									: ""
								%>"
							href="flight_judge_swap.mhtml?round_id=<% $round_id."&judge_id=".$judge %>"
							id="<% $judge %>_<% $panels{$key}{"flight"} %>_name"
						>
%							if ($diversity) {
								<span
									class = "diversity tenth padleft nospace semibold greentext"
									title = "Judge tagged as diversity-enhancing"
								> <% $judges{$judge}{"diverse"} ? "D" : ""  %> </span>
%							}

%							if ($event_settings->{'online_ballots'} && $judges{$judge}{"person"} < 1) {
								<span class="tenth redtext semibold">
									<% $judges{$judge}{"person"} > 0
										? ""
										: "L"
									%>
								</span>
%							}

%							if ($event_settings->{"online_hybrid"} && $judges{$judge}{"online"}) {
								<span class="fa-tiny fa greentext nospace semibold fa-laptop">
								</span>
%							}

							<span class="schoolnames hidden twothirds nospace nowrap ">
								<% $judges{$judge}{"school"} %>
							</span>

							<span class="schoolcodes hidden fifth nospace nowrap ">
								<% $judges{$judge}{"school_code"} %>
							</span>

%							if ($tourn_settings->{"nsda_nats"}) {

								<span class="districtcodes hidden eighth nospace ">
									<% $judges{$judge}{"district"} %>
								</span>

								<span class="districtnames hidden half nospace nowrap">
									<% $judges{$judge}{"district_name"} %>
								</span>

								<span class="states hidden eighth nospace ">
									<% $judges{$judge}{"region_code"} %>
								</span>

%							}

%							if ($tourn_settings->{"ncfl"} || $tourn_settings->{"regions"} )  {
								<span class="regioncodes hidden fifth nospace ">
									<% $judges{$judge}{"region_code"} %>
								</span>

								<span class="regionnames hidden half nospace nowrap">
									<% $judges{$judge}{"region_name"} %>
								</span>

								<span class="areas hidden eighth nospace ">
									<% $judges{$judge}{"area"} %>
								</span>
%							}

							<span class="anonymize hidden centeralign nospace">
								<% $judge %>
							</span>

%							if ($judges{$judge}{"code"}) {
								<span class="identities judgecodes">
									<% $judges{$judge}{"code"} %>
								</span>
%							}

							<span class="identities judgenames nospace grow">
								<div class="flexrow nospace nowrap">
%								if ($judges{$judge}{"chair"}) {
									<span class="padleft centeralign fa fa-sm fa-gavel padleftless bluetext"></span>
%								}
									<span class='grow padleftless'>
										<% $judges{$judge}{"last"}.", ".$judges{$judge}{"first"} %>
									</span>
								</div>
							</span>

						</a>
% 					}

					<span class="hidden">0</span>

					</td>

% 				} elsif ($panels{$key}{"bye"}) {

					<td class="judges nospace padleft padrightless nowrap" data-text="99999">
						<a class="hover full white centeralign redtext semibold">
							BYE
						</a>
					</td>

% 				} elsif ($panels{$key}{"someone_bailed"}) {

					<td class="judges nospace padleft padrightless nowrap" data-text="99999">
						<a class="hover full white centeralign redtext semibold">
							BYE/FFT
						</a>
					</td>

%				} else {

					<td class="judges nospace centeralign">
						<span class="hidden">ZZZZZZZZZ</span>  <!-- adventures in dumb sorting -->
						<a
							class="dkred button nowrap padvertical"
							href="panel_view.mhtml?panel_id=<% $key %>"
						> NO JUDGE </a>
					</td>
% 				}

%				if ($prefs || $tab_ratings || $coach_ratings) {
					<td class="prefs nospace centeralign smaller lessheight smallcell">

%						if ($prefs) {
							<span class="hidden"><% int($panels{$key}{"preftotal"}) %></span>
<%perl>
						}

						foreach my $judge (
							@{$panels{$key}{"judges"}}
						) {
</%perl>
							<span class="full judgeheight debateprefs">

%								if ($prefs) {
%									my $notfirst;
%									foreach my $entry (@{$panels{$key}{"entries"}}) {

										<span class="twofifth centeralign nospace">
											<% $prefs eq "ordinals"
												? $judges{$judge}{$entry}{"percentile"}
													? $judges{$judge}{$entry}{"percentile"} : "-"
												: ""
											%>
											<% $prefs ne "ordinals"
												? $judges{$judge}{$entry}{"tier"}
													? $judges{$judge}{$entry}{"tier"}
													: "-"
												: ""
											%>
										</span>
%									}
%								} else {
									<% $tab_ratings ? $judges{$judge}{"tab"} : "&nbsp;" %>
									<% $coach_ratings ? $judges{$judge}{"coach"} : "&nbsp;" %>
%								}
							</span>
%						}
					</td>
%				}

%				if ($event_settings->{"judge_publish_results"}) {
					<td class = "centeralign publish nospace smallhide semibold">
%						if ($panels{$key}{"publish"}) {
							<span class="greentext fa fa-check padless"></span>
%						} else {
							<span class="redtext fa fa-ellipsis-h padless"></span>
%						}
					</td>
%				}

					<td
						class     = "centeralign nospace smaller graytext semibold"
						data-text = "1"
						id        = "<% $key %>_sort"
					>

%					if ($panels{$key}{"bye"}) {
						BYE
<%perl>
					} else {

						my $judge_ids;
						foreach my $judge ( @{$panels{$key}{"judges"}}) {
							$judge_ids .= " ".$judge."_".$panels{$key}{"flight"};
</%perl>
							<div
								class = 'full judgeheight centeralign hidden <% $key %>_result ballots'
								id    = "<% $judge %>_<% $key %>_result"
							>&ndash;</div>
<%perl>
						}

						if ($prefs && $prefs ne "floooogle") {

							my $diff;
							foreach my $entry (@{$panels{$key}{"entries"}}) {
								my $pref_value;
								if ($prefs eq "ordinals") {
									$pref_value = $entries{$entry}{"percentiles"};
								} else {
									$pref_value = $entries{$entry}{"tiers"};
								}

								unless ($pref_value) {
									$pref_value = $category_settings->{"default_mjp"};
								}

								if ($diff) {
									$diff = abs($diff - $pref_value);
								} else {
									$diff = $pref_value;
								}
							}
</%perl>
							<div
								class = "prefs judgeheight full <% $key %>_prefs allprefs"
								id    = "<% $key %>_prefs"
								key   = <% $key %>
								prefs = "<% $diff %>"
								title = "Preferences Differential"
							><% $diff %></div>
%						}
%					}
					</td>
				</tr>
%			}

		</tbody>
	</table>

