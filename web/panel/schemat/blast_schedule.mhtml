<%args>
	$tourn
	$tourn_settings
	$round_id
	$person
	$message   => undef
	$blastdate => undef
	$blasttime => undef
</%args>
<%init>

	my $oround = Tab::Round->retrieve($round_id);

	unless ($oround) {
		$m->comp("/funclib/abort.mas",
			message => "No round was found for ID $round_id"
		);
	}

	unless ($oround->event->tourn->id == $tourn->id) {
		$m->comp("/funclib/abort.mas",
			message => "Round's event & tournament do not match tournament ".$tourn->id
		);
	}

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $blast_dt = $m->comp("/funclib/showdt.mas",
        date   => $blastdate,
        time   => $blasttime,
        tz     => $tz,
        object => 1
    );

	unless ($blast_dt) {
		my $err = "Invalid date: $blastdate $blasttime";
		$m->redirect("show.mhtml?round_id=$round_id&err=$err");
	}

	my $now = DateTime->now(time_zone => $tz);

	unless ($person->id == 1) {
		if ($Tab::hostname eq "www.tabroom.com") {
			if ($blast_dt < $now) {
				my $err = "Scheduled time is in the past: ".$blast_dt->mdy('/')." ".$blast_dt->hms(':');
				$m->redirect("show.mhtml?round_id=$round_id&err=$err");
			}
		}
	}

	my @rounds;
	if ($ARGS{all_timeslot}) {
		push @rounds, $oround->timeslot->rounds();
	} else {
		push @rounds, $oround;
	}


	my $msg;
	my $style;

	if ($ARGS{"publish"} && $ARGS{"blast"}) {
		$style = "blast_publish";
	} elsif ($ARGS{"publish"}) {
		$style = "publish";
	} elsif ($ARGS{"blast"}) {
		$style = "blast";
	} else {
		my $err = "No publication action selected. You have to choose either publish or blast, or both";
		$m->redirect("blast.mhtml?round_id=$round_id&err=$err");
	}

	foreach my $round (@rounds) {

		my $err = $m->comp('/funclib/online_usage.mas',
			tourn    => $tourn,
			round    => $round,
			env      => \%ENV,
			district => $tourn_settings->{"nsda_district"}
		);

		my $aq = Tab::Autoqueue->search(
			round => $round->id,
			tag   => $style
		)->first;

		if ($aq) {

			$aq->active_at($blast_dt) if $blast_dt;
			$aq->message($message);
			$aq->created_by($person->id);
			$aq->update;

		} else {

			my $aq = Tab::Autoqueue->create({
				round      => $round->id,
				event      => $round->event,
				tag        => $style,
				active_at  => $blast_dt,
				message    => $message,
				created_by => $person->id
			});
		}

		$blast_dt->set_time_zone($tourn->tz);

		my $description .= "Round ".$round->realname." scheduled for blast at ".Tab::csvdt($blast_dt)." ".Tab::tzname($tourn->tz);

		$m->comp("/funclib/log.mas",
			type        => 'tabbing',
			event       => $round->event->id,
			round       => $round->id,
			tourn       => $tourn->id,
			person      => $person->id,
			description => $description
		);

		$m->comp("/funclib/auto_backups.mas",
			subject => "Publish Scheduled",
			person  => $person,
			round   => $round,
		);

		$msg .= "<br />" if $msg;

		$msg .= "Round has been scheduled to blast texts & emails at ".Tab::niceshortdt($blast_dt)
			if $style eq "both";

		$msg .= "Round has been scheduled to blast texts & emails at ".Tab::niceshortdt($blast_dt)
			if $style eq "blast";

		$msg .= "Round has been scheduled to blast texts & emails at ".Tab::niceshortdt($blast_dt)
			if $style eq "publish";
	}

	$m->redirect("show.mhtml?round_id=$round_id&msg=$msg");

</%init>
