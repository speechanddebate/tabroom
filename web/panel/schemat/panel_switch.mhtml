<%args>
	$person
	$perms
	$panel_id      => undef
	$property_name  => undef
	$setting_name   => undef
	$property_value => 0
	$flag           => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($panel_id) {
		$m->print('{ "error": true, "message": "No section ID sent"}');
		$m->abort();
	}

	unless ($property_name || $setting_name) {
		$m->print('{ "error": true, "message": "No property to change sent"}');
		$m->abort();
	}

	my $section = Tab::Panel->retrieve($panel_id);

	unless ($section) {
		$m->print('{ "error": true, "message": "No section found for ID '.$panel_id.'"}');
		$m->abort();
	}

	my $message;

	if ($property_name eq "letter") {

		my $round = $section->round;
		my @already = $round->panels(letter => $property_value);

		if (@already) {
			$m->print('{
				"error"   : true,
				"message" : "Section label '.$property_name.' already exists"
			}');

			$m->abort();
		}

	}

	if ($setting_name) {

		$section->setting($setting_name, $property_value);
		$message .= "not a " if $property_value == 0;
		$message .= " $setting_name ";

	} else {

		$message .= "not a " if $property_value == 0;
		$message .= $property_name;
		$section->$property_name($property_value);
		$section->update;
	}

	if ($property_name eq "publish" && $property_value == 1) {

	    $m->comp("/funclib/blast_results.mas",
	        panel  => $section
	    );

	}

	$m->print('{
		"error"   : false,
		"message" : "Section '.$section->letter.' marked as '.$message.'"
	}');

	$m->abort();

</%init>

