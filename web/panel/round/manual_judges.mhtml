<%args>
	$tourn
	$tourn_settings
	$round_id
	$flight => 1
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();

	my $round          = Tab::Round->retrieve($round_id);
	my $event          = $round->event;
	my $category       = $event->category;
	my %event_settings = $event->all_settings;
	my $flights        = $round->flighted;
	my $online_ballots = $event_settings{"online_ballots"};
	my $rounds_per     = $category->setting("rounds_per");
	my $prefs          = $category->setting("prefs");

	undef $rounds_per if $round->type eq "elim" || $round->type eq "final";

	my $wudc++ if $event->type eq "wudc";
	undef $prefs if $prefs eq "none";

	my $jpool_limit;
	my $jpool_table;

	my @jpools = $round->jpools;

	if (@jpools) {
		$jpool_table = "jpool_judge, jpool_round, ";
		$jpool_limit = " and jpool_judge.judge = judge.id
						and jpool_judge.jpool = jpool_round.jpool
						and jpool_round.round = round.id";
	} else {
		$jpool_limit = " and judge.category = event.category ";
	}

	my $aff_string = substr($event_settings{"aff_label"}, 0, 3);
	my $neg_string = substr($event_settings{"neg_label"}, 0, 3);

	$aff_string = "Aff" unless $aff_string;
	$neg_string = "Neg" unless $neg_string;

	my %entry_wins = $m->comp("/funclib/entry_wins.mas",
		event => $event,
		round => $round,
		notme => 1,
	);

	my %entry_losses = $m->comp("/funclib/entry_losses.mas",
		event => $event,
		round => $round,
		notme => 1,
	);

	Tab::Judge->columns(TEMP => "tab_rating");
	Tab::Judge->columns(TEMP => "coach_rating");
	Tab::Judge->columns(TEMP => "generic_rating");
	Tab::Judge->columns(TEMP => "parli");
	Tab::Judge->columns(TEMP => "online_hybrid");
	Tab::Judge->columns(TEMP => "neutral");
	Tab::Judge->columns(TEMP => "regioncode");
	Tab::Judge->columns(TEMP => "schoolcode");

	Tab::Judge->set_sql( available_judges => "

		select distinct judge.id, judge.first, judge.last, judge.obligation, judge.hired,
			tab_rating.value tab_rating,
			coach_rating_tier.name coach_rating,
			generic_rating_tier.name generic_rating,
			region.code regioncode,
			school.code schoolcode,
			parli.value parli,
			online_hybrid.value online_hybrid,
			neutral.value neutral

		from (judge, event, round, $jpool_table timeslot)
		left join judge_setting tab_rating
			on tab_rating.tag = 'tab_rating'
			and tab_rating.judge = judge.id

		left join judge_setting online_hybrid
			on online_hybrid.tag = 'online_hybrid'
			and online_hybrid.judge = judge.id

		left join judge_setting parli
			on parli.tag = 'parli'
			and parli.judge = judge.id

		left join judge_setting neutral
			on neutral.tag = 'neutral'
			and neutral.judge = judge.id

		left join rating coach_rating
			on coach_rating.type = 'coach'
			and coach_rating.judge = judge.id
			and (coach_rating.rating_subset = event.rating_subset OR coach_rating.rating_subset IS NULL)

		left join rating_tier coach_rating_tier
			on coach_rating_tier.id = coach_rating.rating_tier

		left join rating generic_rating
			on generic_rating.type = 'coach'
			and generic_rating.judge = judge.id
			and (generic_rating.rating_subset = event.rating_subset OR generic_rating.rating_subset IS NULL)

		left join rating_tier generic_rating_tier
			on generic_rating_tier.id = generic_rating.rating_tier


		left join school on judge.school = school.id
		left join region on school.region = region.id

		where judge.active = 1
		and judge.active = 1
		and event.id = round.event
		and round.timeslot = timeslot.id
		$jpool_limit
		and round.id = ?

		and not exists (
			select strike.id from strike
			where strike.type = 'event'
			and strike.event = event.id
			and strike.judge = judge.id
		)

		and not exists (
			select strike.id from strike
			where (strike.type = 'time' or strike.type = 'departure')
			and strike.judge = judge.id
			and strike.start < timeslot.end
			and strike.end > timeslot.start
		)

		and not exists (
			select panel.id
			from panel, ballot, round otherround, timeslot othertimeslot
			where ballot.judge = judge.id
			and ballot.panel = panel.id
			and panel.round = otherround.id
			and otherround.id != round.id
			and otherround.timeslot = othertimeslot.id
			and othertimeslot.start < timeslot.end
			and othertimeslot.end > timeslot.start
		)

		order by tab_rating.value, coach_rating_tier.name, judge.last
	");

	my @all_judges = Tab::Judge->search_available_judges($round->id);

	my @round_judges = $m->comp(
		"/funclib/round_judges.mas",
		round => $round
	);

	push (@all_judges, @round_judges);

	my %judge_by_id = map {$_->id => $_} @all_judges;

	my $use_ref = $m->comp(
		"/funclib/judge_use.mas",
		round_id => $round->id
	);

	my $panel_sth = $dbh->prepare("
		select
			panel.id, panel.bye, panel.letter, panel.bracket,
			room.name room_name
		from panel
			left join room on room.id = panel.room
		where panel.round = ?
			and panel.flight = ?
		order by panel.bye DESC, panel.bracket DESC
	");

	$panel_sth->execute($round->id, $flight);
	my $panels = $panel_sth->fetchall_hash();


	Tab::Entry->columns(TEMP => "regioncode");
	Tab::Entry->set_sql(all => "
		select entry.*, region.code as regioncode
		from entry
		left join school on entry.school  = school.id
		left join region on school.region = region.id
			where entry.active = 1
			and entry.event = ?
	");

	my %entry_by_id = map {$_->id => $_} Tab::Entry->search_all($event->id);


	my $this_round_sth = $dbh->prepare("
		select distinct panel.id, ballot.chair, ballot.judge,
			ballot.entry, ballot.side, ballot.speakerorder
		from panel, ballot
		where panel.round = ?
		and panel.flight  = ?
		and panel.id      = ballot.panel
		group by ballot.id
	");

	my %panel_chair;
	my %panel_judge;
	my %panel_entry;
	my %entry_side;
	my %entry_order;
	my %used_judge;

	$this_round_sth->execute($round->id, $flight);

	while (
		my ($panel, $chair, $judge, $entry, $side, $order)
		= $this_round_sth->fetchrow_array()
	) {
		push @{$panel_chair{$panel}}, $judge if $chair;
		push @{$panel_judge{$panel}}, $judge unless $chair;
		push @{$panel_entry{$panel}}, $entry;
		$entry_side{$entry} = $side;
		$entry_order{$entry} = $order;
	}

	my %judge_constraints = $m->comp(
		"/funclib/judge_cannotsee.mas",
			category       => $category,
			round          => $round,
			event          => $event,
			event_settings => \%event_settings,
			tourn          => $tourn,
			tourn_settings => $tourn_settings
	);

	my %judge_ratings = $m->comp(
		"/funclib/event_judgeprefs.mas",
		event => $round->event
	);

	my $blind_mode = $event_settings{'blind_mode'};
	undef $blind_mode if $round->published > 0;

	my %anonymize = $m->comp(
		"/funclib/blind_mode.mas",
		round => $round
	) if $blind_mode;

	my $code_style = $event_settings{'code_style'};

	my $code_size = "threetenths";

	$code_size = "half marno"
		if $code_style eq "last_names"
		|| $code_style eq "code_name"
		|| $code_style eq "names_lastfirst";

	$code_size = "full marno"
		if $code_style eq "school_names"
		|| $code_style eq "school_first_names"
		|| $code_style eq "full_names"
		|| $code_style eq "names"
		|| $code_style eq "school_last_names"
		|| ($tourn_settings->{'school_codes'} eq "shortname");

	my $no_school_code++
		if $code_style eq "code_name"
		|| $code_style eq "full_names"
		|| $code_style eq "full_initials"
		|| $code_style eq "school_names"
		|| $code_style eq "school_first_names"
		|| $code_style eq "school_last_names"
		|| (not defined $tourn_settings->{'school_codes'});

</%init>

	<script>

	 	$(function() {

			$( ".droppable" ).droppable({

				hoverClass  	 : "ltyellow",
				accept			 : ":not(.ui-sortable-helper)",
				disableSelection : "true",
				drop			 : function( event, ui) {

					var draggableId = ui.draggable.attr("id");
					var droppableId = this.id;
					var isChair = $(this).attr("chair");

					$.post("manual_judge_save.mhtml", {
						round_id : <% $round_id %>,
						flight   : <% $flight %>,
						judge_id : draggableId,
						panel_id : droppableId,
						chair    : isChair
                    }).done(function(data) {
                        if (data.error) {
                            alertify.warning(data.message);
                        } else {
                            alertify.set('notifier','delay', 2);
							alertify.notify(data.message, "custom")
                            alertify.set('notifier','delay', 5);
                        }
                    });

					// remove the original element from its origin to this
					// location, and make it visible again while destroying the
					// clone.  this is necessary because the default jquery
					// draggable behavior does not play well with scrollable
					// windows.

					ui.draggable.show();
					$(this).prepend(ui.draggable);
					$( this ).find( ".placeholder" ).remove();

				}

			}).sortable({
				items: ":not(.placeholder)",
				sort: function() {

					// gets added unintentionally by droppable interacting with
					// sortable using connectWithSortable fixes this, but
					// doesn't allow you to customize active/hoverClass options

					$( this ).removeClass( "ui-state-default" );
				}
			});

<%perl>

			foreach my $judge (@all_judges) {

				my $judge_id = $judge->id;
</%perl>

					$( "#<% $judge_id %>" ).draggable({
						drag: function( event, ui ) {
							$(".<% $judge_id %>").show();
						},

						stop: function( event, ui ) {
							$(".<% $judge_id %>").hide();
%							foreach my $entry_id (keys %{$judge_constraints{$judge_id}}) {
								$('.<% $entry_id %>').removeClass('redrow');
%							}
						},

                        start: function(event, ui) {
							$('#<% $judge_id %>').hide();
%							foreach my $entry_id (keys %{$judge_constraints{$judge_id}}) {
								$('.<% $entry_id %>').addClass('redrow');
%							}
                        },

						disableSelection : "true",
						revert           : "invalid",
						containment      : '#wrapper',
						snap             : "true",
						snapMode         : "inner",
						helper           : "clone"
					});

%				}
		});

	</script>

	<div class="main">

		<div class="flexrow">
			<span class="threequarters">
				<h4><% $round->realname %> Manual Judge Placement</h4>
			</span>
			<span
				id    = "judgeme_buttonarea"
				class = "quarter rightalign">
			</span>
		</div>

%		if ($round->published == 1) {

			<p class='redtext semibold centeralign bigger'>
				This round is published!  Your changes will be visible in real time!
			</p>
%		}

%       if ($flights > 1) {
            <ul id="tabnav" class="rightalign">
%               foreach my $other_flight (1 .. $flights) {
                    <li class="<% ($flight == $other_flight) ? "selected" : "" %>">
                        <a href="manual_judges.mhtml?round_id=<% $round_id %>&flight=<% $other_flight %>">
                            Flight <% $other_flight %>
                        </a>
                    </li>
%               }
            </ul>
%       }

		<& "/funclib/tablesorter.mas",
			table  => "judgeme",
			resize => 'true'
		&>

		<div class='yscroll'>

		<table id="judgeme">
			<thead>

				<tr class="yellowrow">

%					if ($event->type ne "speech" && $event->type ne "congress") {
						<th class="smaller">
							B
						</th>
%					}

					<th class="smaller">
						Room
					</th>

					<th class="smallish limit">
						Entries
					</th>

					<th class = "smallish limit" >
%						if ($event->type eq "congress")  {
							Parliamentarian
%						} elsif ($event->type eq "mock_trial")  {
							Presiding Judge
%						} else {
							Chair Judge
%						}
					</th>

					<th class="smallish">
						Other Judges
					</th>

%					if ($prefs) {
						<th class="smallish">
							Prefs
						</th>
%					}
				</tr>

			</thead>

			<tbody>
<%perl>
			my %bracket;

			foreach my $panel (@{$panels}) {

				my $id = $panel->{id};
				my %used;

				my @entries =
					sort {$entry_side{$a} <=> $entry_side{$b}}
					@{$panel_entry{$id}}
					if $panel_entry{$id};

				@entries = sort {$entry_order{$a} <=> $entry_order{$b}} @entries;

				my %seen = ();

				@entries = grep { ! $seen{$_} ++ } @entries;

				my @judges = @{$panel_judge{$id}} if $panel_judge{$id};
				my @chairs = @{$panel_chair{$id}} if $panel_chair{$id};

				my $total_wins;
				foreach my $entry (@entries) {
					$total_wins += $entry_wins{$entry};
				}
</%perl>
				<tr class="<% join(' ', @entries) %>">

%					if ($event->type ne "speech" && $event->type ne "congress") {
						<td class="centeralign smaller" data-text=" <% $panel->{bye} ? "99999999" : "" %>">
							<% $panel->{bye} ? "BYE" : $panel->{bracket} %>
						</td>
%					}

					<td class="smallish halflimit">
						<% $panel->{room_name} || $panel->{letter} %>
					</td>

					<td
						class     = "limit smallish padno"
						style     = "white-space: normal; overflow-x: visible;"
						data-text = "<% $total_wins %>"
					>
<%perl>
						foreach my $entry (@entries) {

							next if $used{$entry}++;

							my $entry_name;
							my $entry_code;

							if ($blind_mode) {

								$entry_name = $anonymize{"entry"}{$entry};
								$entry_code = $anonymize{"entry"}{$entry};

							} elsif ($entry_by_id{$entry}) {

								$entry_name = $entry_by_id{$entry}->name;
								$entry_code = $entry_by_id{$entry}->code;

								if ($tourn_settings->{"nsda_nats"} || $tourn_settings->{"ncfl"}) {
									$entry_code = $entry_by_id{$entry}->regioncode." ".$entry_code;
								}
							}

							if ($event->type eq "wudc") {
</%perl>
								<div
									title = "<% $entry_name %>"
									class = "nospsace padleft"
								>
									<span class="quarter">
										<% $entry_order{$entry} == 1 ? "1G" : "" %>
										<% $entry_order{$entry} == 2 ? "1O" : "" %>
										<% $entry_order{$entry} == 3 ? "2G" : "" %>
										<% $entry_order{$entry} == 4 ? "2O" : "" %>
									</span>

									<span class="threequarters">
										<% $entry_code ? $entry_code : $entry_name %>
									</span>

								</div>

%							} elsif ($event->type eq "congress" || $event->type eq "speech") {

%								if ($entry_by_id{$entry} > 0) {

									<div
										title = "<% $entry_name %> <% $entry_code %>"
										class = "<% $code_size %> padleftless flexrow smallish nowrap hover"
									>

%										unless ($no_school_code) {
%											if ($entry_by_id{$entry}->school->code) {
												<span class="quarter">
													<% $entry_by_id{$entry}->school->code %>
												</span>
%											}
%										}

%										if ( (not defined $no_school_code) && $entry_by_id{$entry}->school->code) {
											<span class="fifth">
												<% $entry_by_id{$entry}->school->code %>
											</span>
%										}
										<span class="threequarters grow">
											<% $entry_code ? $entry_code : $entry_name %>
										</span>
									</div>
%								}

%							} else {

								<div
									title = "<% $entry_name %>"
									class = "nospsace padleftless flexrow"
								>
									<span class="quarter nowrap padvertno">
										<% $entry_wins{$entry}."-".$entry_losses{$entry} %>
									</span>

									<span class="quarter nowrap padvertno">
										<% $entry_side{$entry} == 1 ? ucfirst($aff_string) : "" %>
										<% $entry_side{$entry} == 2 ? ucfirst($neg_string) : "" %>
									</span>

									<span class="half nowrap padvertno">
										<% $entry_code %>
									</span>
								</div>
%							}
							</div>
%						}

					</td>

					<td class="blueborderright padvertno">

						<div
							class = "ui-droppable droppable smallerdrop chair flexrow padno centeralign"
							style = "min-height: 40px;"
							id    = "<% $id %>"
							chair = 1
						>
<%perl>
						foreach my $chair (@chairs) {

							next if $used_judge{$chair}++;
							my $judge = $judge_by_id{$chair};
							next unless $judge;

							my $judge_name;

							if ($tourn_settings->{"nsda_nats"} || $tourn_settings->{"ncfl"}) {
								$judge_name = $judge->regioncode." ";
							}

							if ($blind_mode) {
								$judge_name .= $anonymize{"judge"}{$judge->id};
							} else {
								$judge_name .= $judge->last.". ".$judge->first;
							}
</%perl>
							<span
								class = "leftalign draggable flexrow padvertless
										<% $judge && $judge->parli ? "parli " : "" %>"
								id    = "<% $judge->id %>"
								title = "<% $judge->schoolcode %> <% $judge_name %>"
							>

%								if ($rounds_per) {
									<span
										class = "padleftless"
										title = "<%
									${$use_ref}{$judge}{"left"}
								%>/<%
									${$use_ref}{$judge}{"judged_already"}
								%>/<%
									${$use_ref}{$judge}{"oblig"}
								%>"><%
										${$use_ref}{$judge}{"percentage"}
									%></span>
%								} else {
									<span class="padleftless"><%
										${$use_ref}{$judge}{"judged_already"}
									%></span>
%								}

%								if ($online_ballots &! ($judge->person > 0)) {
									<span
										class = "redtext semibold invert"
										style = "padding: 1px; line-height: 10px;"
									>
										L
									</span>
%								}

%								if (
%									($event->type eq "mock_trial" || $event->type eq "congress")
%									&& $judge->parli
%								) {
									<span class="lightgreentext semibold centeralign fa fa-xs fa-gavel padleftless padrightless">
									</span>
%								}

%								if ($judge->online_hybrid) {
									<span class="bluetext semibold centeralign fa fa-xs fa-laptop">
									</span>
%								}

								<span class="blueborderright padright nowrap"><%
									$judge && $judge->tab_rating ? $judge->tab_rating  : ""
								%><%
									$judge && $judge->coach_rating ? ' '.$judge->coach_rating  : ""
								%><%
									$no_school_code ? "" : $judge->schoolcode
								%></span>

								<span class="grow nowrap padleftless">
									<% $judge_name %>
								</span>
							</span>
%						}

						</div>
					</td>

					<td class="padvertno">

						<div
							class = "ui-droppable droppable smallerdrop flexrow wrap full centeralign padvert"
							style = "justify-content: center; min-height: 40px;"
							id    = "<% $id %>"
						>
<%perl>
	   					foreach my $judge_id (@judges) {

							my $judge = $judge_by_id{$judge_id};
							next unless $judge;
							next if $used_judge{$judge}++;

							my $judge_name;

							if ($tourn_settings->{"nsda_nats"} || $tourn_settings->{"ncfl"}) {
								$judge_name = $judge->regioncode." ";
							}

							if ($blind_mode) {
								$judge_name .= $anonymize{"judge"}{$judge->id};
							} else {
								$judge_name .= $judge->last.". ".$judge->first;
							}

</%perl>
							<span
								class = "leftalign draggable flexrow martopless marleft marright
									<% $judge && $judge->parli ? "parli " : "" %>
								"
								id    = "<% $judge->id %>"
								title = "<% $judge->schoolname %> <% $judge_name %>"
								style = "width: 140px;"
							>

								<span class="half flexrow marno blueborderright">

%								if ($rounds_per) {
									<span
										class = "padleftless"
										title = "<%
									${$use_ref}{$judge}{"left"}
								%>/<%
									${$use_ref}{$judge}{"judged_already"}
								%>/<%
									${$use_ref}{$judge}{"oblig"}
								%>"><%
										${$use_ref}{$judge}{"percentage"}
									%></span>
%								} else {
									<span class="padleftless padrightless">
										<%
											${$use_ref}{$judge}{"judged_already"}
										%>
									</span>
%								}

%								if ($online_ballots &! ($judge->person > 0)) {
									<span class="redtext semibold padright">
										L
									</span>
%								}

%								if (
%									($event->type eq "mock_trial" || $event->type eq "congress")
%									&& $judge->parli
%								) {
									<span class="lightgreentext semibold centeralign fa fa-xs fa-gavel padrightless">
									</span>
%								}

%								if ($judge->online_hybrid) {
									<span class="bluetext semibold centeralign fa fa-xs fa-laptop padright">
									</span>
%								}

								<span class="padright nowrap"><%
									$judge && $judge->tab_rating ? $judge->tab_rating  : ""
								%><%
									$judge && $judge->coach_rating ? ' '.$judge->coach_rating  : ""
								%><%
									$no_school_code ? "" : $judge->schoolcode
								%></span>

								</span>

								<span class="grow nowrap padleftless half">
									<% $judge_name %>
								</span>
							</span>

%						}

						</div>

					</td>

%					if ($prefs) {
						<td>
%							foreach my $entry (@entries) {
%								foreach my $judge (keys %{$judge_ratings{$entry}}) {
									<span
										class="<% $judge %> smallish inline padless marno"
										style="display: none;"
									> <% $judge_ratings{$entry}{$judge} %> </span>
%								}
%							}
						</td>
%					}
				</tr>
%			}

			</tbody>
		</table>
		</div>

	</div>

	<div class="menu">

		<div class="sidenote">

			<h4>Round</h4>

			<a class="blue full"
				href="/panel/schemat/show.mhtml?round_id=<% $round_id %>"
			>
				Return to <% $round->realname %>
			</a>

			<h4>Unused Judges</h4>

			<div class='yscroll sticky'>
			<div
				class = "centeralign bordergrey full droppable yscroll padleft padright flexrow wrap top ltbluebordertop"
				id    = "out"
			>
<%perl>
				if ($rounds_per) {

					@all_judges = sort {
						${$use_ref}{$b}{"left"} <=> ${$use_ref}{$a}{"left"}
					} @all_judges;

				} elsif ($category->setting("tab_ratings") ){

					@all_judges = sort {
						$a->tab_rating <=> $b->tab_rating
					} @all_judges;
				}

				foreach my $judge (@all_judges) {

					next if $used_judge{$judge->id}++;

					my $judge_name;

					if ($tourn_settings->{"nsda_nats"} || $tourn_settings->{"ncfl"}) {
						$judge_name = $judge->regioncode." ";
					}

					if ($blind_mode) {
						$judge_name .= $anonymize{"judge"}{$judge->id};
					} else {
						$judge_name .= $judge->last.". ".$judge->first;
					}

</%perl>
					<span
						class = "leftalign draggable flexrow padvertless
							<% $judge && $judge->parli ? "parli " : "" %>
						"
						id    = "<% $judge->id %>"
						title = "<% $judge->schoolcode %> <% $judge_name %>"
					>

%							if ($rounds_per) {
								<span
									class = "padleftless"
									title = "<%
								${$use_ref}{$judge}{"left"}
							%>/<%
								${$use_ref}{$judge}{"judged_already"}
							%>/<%
								${$use_ref}{$judge}{"oblig"}
							%>"><%
									${$use_ref}{$judge}{"percentage"}
								%></span>
%							} else {
								<span class="nospace"><%
									${$use_ref}{$judge}{"judged_already"}
									? ${$use_ref}{$judge}{"judged_already"}
									: ""
								%></span>
%							}

%							if ($online_ballots &! ($judge->person > 0)) {
								<span class="redtext semibold">
									L
								</span>
%							}
<%perl>
							if (
								($event->type eq "mock_trial" || $event->type eq "congress")
								&& $judge->parli
							) {
</%perl>
								<span class="lightgreentext semibold centeralign fa fa-xs fa-gavel marno">
								</span>
%							}

%							if ($judge->online_hybrid) {
								<span class="bluetext semibold centeralign fa-xs fa-laptop marno">
								</span>
%							}

							<span class="blueborderright padright nowrap"><%
								$judge && $judge->tab_rating ? $judge->tab_rating  : ""
							%><%
								$judge && $judge->coach_rating ? ' '.$judge->coach_rating  : ""
							%><%
								$no_school_code ? "" : $judge->schoolcode
							%></span>

							<span class="grow nowrap padleftless">
								<% $judge_name %>
							</span>
					</span>
%				}

			</div>
			</div>


%			my $warn = "Danger! This will ERASE existing judge assignments and re do the entire round.  Proceed?";

% 			if ($event->type eq "speech" || $event->type eq "congress") {
				<a
					class="yellow martop full"
					href="/panel/round/judges.mhtml?round_id=<% $round->id %>"
					<& "/funclib/confirm.mas", warn => $warn &>
				>
%			} else {

				<a
					class="yellow martop full"
					href="/panel/round/debate_judge_assign.mhtml?round_id=<% $round->id %>"
					<& "/funclib/confirm.mas", warn => $warn &>
				>
%           }
				Redo Auto-paired judges
        	</a>

		</div>

	</div>

