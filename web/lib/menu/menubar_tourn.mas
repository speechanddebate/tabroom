<%args>
	$session
	$tourn
	$person
	$tourn_settings
	$person_settings
	$perms => undef
</%args>
<%init>

	unless ($session && $session->person) {
		my $msg = "You no longer have an active login session.  Please log in again";
		$m->redirect("/index/index.mhtml?msg=$msg");
	}

	my $dbh = Tab::DBI->db_Main();

	return unless $perms->{"tourn"}{$tourn->id} || $person->site_admin;

	my %admin_events;
	my %admin_categories;

	my %check_events;
	my %check_categories;
	my $yo_admin;
	my $yo_event;
	my $yo_category;

	if (
		$perms->{tourn}{$tourn} eq "owner"
		|| $perms->{tourn}{$tourn} eq "tabber"
	) {
		$yo_admin++;

	} else {

		if ($perms->{"event"}) {
			foreach my $event_id (keys %{$perms->{"event"}}) {
				if ($perms->{"event"}{$event_id} eq "tabber") {
					$admin_events{$event_id}++;
					$yo_admin++;
					$yo_event++;
				}
				if ($perms->{"event"}{$event_id} eq "checker") {
					$check_events{$event_id}++;
				}
			}
		}

		if ($perms->{"category"}) {

			foreach my $category_id (keys %{$perms->{"category"}}) {
				if ($perms->{"category"}{$category_id} eq "tabber") {
					$admin_categories{$category_id}++;
					$yo_admin++;
					$yo_category++;
				}
				if ($perms->{"category"}{$category_id} eq "checker") {
					$check_categories{$category_id}++;
				}
			}
		}

		if ($perms->{checker}) {
			$yo_category++;
		}
	}

	if (not defined $yo_admin) {

</%init>

		<ul id="nav" class="checker">
			<li class="top" title="Round Starts">
				<a class="top_link" href="/tabbing/status/status.mhtml">
					<span class="down text">
						Round Starts
					</span>
					<span class="down icon fa fa-star">
					</span>
				</a>
			</li>

			<li class="top" title="Event Status">
				<a class="top_link" href="/tabbing/status/dashboard.mhtml">
					<span class="down text">
						Event Status
					</span>
					<span class="down icon fa fa-flag-checkered">
					</span>
				</a>
			</li>

			<li class="top" title="Ballot Entry">
				<a class="top_link" href="/tabbing/entry/index.mhtml">
					<span class="down text">
						Ballot Entry
					</span>
					<span class="down icon fa fa-database">
					</span>
				</a>
			</li>

%			if ($yo_category) {
				<li class="top">
					<a class="top_link" href="/register/judge/activate.mhtml">
						<span class="down text">
							Judge Rollcall
						</span>
						<span class="down icon fa fa-gavel">
						</span>
					</a>
				</li>
%			}

			<li class="top">
				<a class="top_link" href="/register/event/activate.mhtml">
					<span class="down text">
						Entry Rollcall
					</span>
					<span class="down icon fa fa-users">
					</span>
				</a>
			</li>
		</ul>

<%perl>
		return;
	}

	my $full_permissions++ if $perms->{tourn}{$tourn} eq "owner";
	$full_permissions++ if $perms->{tourn}{$tourn} eq "tabber";

	# Get the listing of events I want to access

	my %events;

	my $sth = $dbh->prepare("
		select
			event.id, event.abbr, event.name, event.type, event.category, event.level, event.pattern,
			menu_pattern.value menu_pattern,
			nsda_event_category.value nsda_category,
			supp.value supp, stefan.value stefan,
			leadership.value leadership, student_vote_protocol.value student_vote, student_online_ballots.value student_online,
			weekend.id weekend, weekend.start weekend_start, weekend.end weekend_end

		from event

			left join event_setting menu_pattern
				on menu_pattern.tag = 'menu_pattern'
				and menu_pattern.event = event.id

			left join event_setting nsda_event_category
				on nsda_event_category.tag = 'nsda_event_category'
				and nsda_event_category.event = event.id

			left join event_setting supp
				on supp.tag = 'supp'
				and supp.event = event.id

			left join event_setting stefan
				on stefan.tag = 'stefan'
				and stefan.event = event.id

			left join event_setting leadership
				on leadership.tag = 'leadership'
				and leadership.event = event.id

			left join event_setting student_vote_protocol
				on student_vote_protocol.tag = 'student_vote_protocol'
				and student_vote_protocol.event = event.id

			left join event_setting student_online_ballots
				on student_online_ballots.tag = 'student_online_ballots'
				and student_online_ballots.event = event.id

			left join event_setting weekend_set
				on weekend_set.tag = 'weekend'
				and weekend_set.event = event.id

			left join weekend
				on weekend.tourn = event.tourn
				and weekend.id = weekend_set.value

		where event.tourn = ?
			and event.type != 'attendee'

		and exists (
			select round.id
			from round
			where round.event = event.id
		)

		order by event.abbr
	");

	$sth->execute($tourn->id);

	my $results = $sth->fetchall_hash();
	my $sv;

	my $event_count;
	my %event_types;

	foreach my $event (@{$results}) {

		unless (
			$perms->{tourn}{$tourn} eq "owner"
			|| $perms->{tourn}{$tourn} eq "tabber"
			|| $admin_events{$event->{id}}
		) {
			next;
		}

		$event_count++;

		my $event_type = $event->{type};
		$event_type = "debate" if $event_type eq 'wsdc';

		$events{$event->{id}}{"name"}  = $event->{name};
		$events{$event->{id}}{"abbr"}  = $event->{abbr};
		$events{$event->{id}}{"level"} = $event->{level};

		if ($event->{level} eq "champ") {
			$events{$event->{id}}{"level_sort"} = 1;
			$event->{"level_sort"} = 1;
		} elsif ($event->{level} eq "open" || $event->{level} eq "es-open") {
			$events{$event->{id}}{"level_sort"} = 2;
			$event->{"level_sort"} = 2;
		} elsif ($event->{level} eq "jv" || $event->{level} eq "es-jv") {
			$events{$event->{id}}{"level_sort"} = 3;
			$event->{"level_sort"} = 3;
		} elsif ($event->{level} eq "novice" || $event->{level} eq "es-novice") {
			$events{$event->{id}}{"level_sort"} = 4;
			$event->{"level_sort"} = 4;
		} elsif ($event->{level} eq "middle" || $event->{level} eq "es-middle") {
			$events{$event->{id}}{"level_sort"} = 5;
			$event->{"level_sort"} = 5;
		}

		$events{$event->{id}}{"abbr_text"}   = $event->{abbr};
		$events{$event->{id}}{"abbr_digits"} = $event->{abbr};
		$events{$event->{id}}{"type"}        = $event_type;
		$event_types{$event_type}++;

		if ($event->{menu_pattern}) {

			$event_types{$event->{type}}--;
			$event_types{"pattern_".$event->{menu_pattern}}++;
			$events{$event->{id}}{"type"} = "pattern_".$event->{menu_pattern};

		} elsif ($event_type eq "speech") {

			if (substr($event->{abbr}, 1, 1) eq " ") {
				my $pattern = "pattern_".substr($event->{abbr}, 0, 1);
				$event_types{$event->{type}}--;
				$event_types{$pattern}++;
				$events{$event->{id}}{"type"} = $pattern;
			} elsif ($event->{level}) {
				$event_types{$event->{type}}--;
				$event_types{"speech_".$event->{level_sort}}++;
				$events{$event->{id}}{"type"} = "speech_".$event->{level_sort};
			}
		}

		$events{$event->{id}}{"abbr_text"}   =~ s/[\d_]//g;
		$events{$event->{id}}{"abbr_digits"} =~ s/[\D_]//g;

		$event->{real_category}           = $event->{nsda_category} || 50 || 500;
		$event->{nsda_category}           = 200 if $event->{nsda_category} > 200; # Don't shuffle sort within speech
		$events{$event->{id}}{"code"}     = $event->{nsda_category} || 500;
		$events{$event->{id}}{"category"} = $event->{category};

		$events{$event->{id}}{"supp"}   = $event->{supp};
		$events{$event->{id}}{"stefan"} = $event->{stefan};

		if ($event->{weekend}) {

			$events{$event->{id}}{"weekend_start"} = eval {
				my $dt = DateTime::Format::MySQL->parse_datetime($event->{weekend_start});
				$dt->set_time_zone("UTC");
				return $dt;
			};

			$events{$event->{id}}{"weekend_end"} = eval {
				my $dt = DateTime::Format::MySQL->parse_datetime($event->{weekend_end});
				$dt->set_time_zone("UTC");
				return $dt;
			};
		}

		if (
			$event->{leadership}
			|| $event->{student_vote}
			|| $event->{student_ballot}
		) {
			$sv++;
		}
	}


	if ($tourn_settings->{"nsda_district"}) {

		unless (
			$perms->{"owner"}
			|| $person->site_admin
			|| $person_settings->{"nsda_admin"}
		) {

			my $now = DateTime->now();
			my $then = $now->clone();
			$then->add(days => 7);
			$now->subtract(days => 7);

			foreach my $event_id (keys %events) {
				unless (
					$events{$event_id}{"weekend_start"} < $then
					&& $events{$event_id}{"weekend_end"} > $now
				) {
					delete $events{$event_id};
				}
			}
		}
	}

	unless (
		keys %events
		|| keys %admin_categories
		|| $full_permissions
	) {
		return;
	}

	my @events = sort {
		$events{$a}{"supp"} cmp $events{$b}{"supp"}
		|| $events{$a}{"type"} cmp $events{$b}{"type"}
		|| $events{$a}{"code"} cmp $events{$b}{"code"}
		|| $events{$a}{"abbr_text"} cmp $events{$b}{"abbr_text"}
		|| $events{$a}{"abbr_digits"} <=> $events{$b}{"abbr_digits"}
		|| $events{$a}{"name"} cmp $events{$b}{"name"}
	} keys %events;

	my %menu = ();

	if ($full_permissions || keys %admin_events || keys %admin_categories ) {

		$menu{"settings"} = ({
			order => 1,
			icon  => "fa-cog",
			links => {
				1 => {name => "Tournament"        , url => "/setup/tourn/main.mhtml"}      ,
				2 => {name => "Rules & Results"   , url => "/setup/rules/tiebreaks.mhtml"} ,
				3 => {name => "Judges"            , url => "/setup/judges/edit.mhtml"}     ,
				4 => {name => "Events"            , url => "/setup/events/edit.mhtml"}     ,
				5 => {name => "Schedule"          , url => "/setup/schedule/sked.mhtml"}   ,
				6 => {name => "Sites &amp; Rooms" , url => "/setup/rooms/list.mhtml"}      ,
				7 => {name => "Money"             , url => "/setup/money/edit.mhtml"}      ,
				8 => {name => "Website"           , url => "/setup/web/edit.mhtml"}        ,
			}
		});

		if (not defined $full_permissions) {

			delete $menu{"settings"}{"links"}{1};
			delete $menu{"settings"}{"links"}{2};
			delete $menu{"settings"}{"links"}{6};
			delete $menu{"settings"}{"links"}{7};
			delete $menu{"settings"}{"links"}{8};

			unless (keys %admin_events) {
				delete $menu{"settings"}{"links"}{4};
				delete $menu{"settings"}{"links"}{5};
			}


			unless (keys %admin_categories) {
				delete $menu{"settings"}{"links"}{3};
			}
		}

		delete $menu{"settings"}{"links"}{2}
			if ($tourn_settings->{"nsda_district"})
			&& (not defined $person_settings->{"nsda_admin"})
			&& ($person->site_admin != 1);

		$menu{"entries"} = ({
			order => 2,
			icon  => "fa-users",
			links => {
				1 => {name => "Schools"    , url => "/register/index.mhtml"}         ,
				2 => {name => "Events"     , url => "/register/event/index.mhtml"}   ,
				3 => {name => "Judges"     , url => "/register/judge/index.mhtml"}   ,
				4 => {name => "Reports"    , url => "/register/reports/index.mhtml"} ,
				5 => {name => "Change Log" , url => "/register/changes/index.mhtml"} ,
				6 => {name => "Data"       , url => "/register/data/index.mhtml"}    ,
				7 => {name => "Emails"     , url => "/register/emails/index.mhtml"}
			}
		});

		if (not defined $full_permissions) {

			delete $menu{"entries"}{"links"}{1};
			delete $menu{"entries"}{"links"}{4};
			delete $menu{"entries"}{"links"}{6};
			delete $menu{"entries"}{"links"}{8};

			unless (keys %admin_events) {
				delete $menu{"entries"}{"links"}{2};
			}

			if (keys %check_events) {
				$menu{"entries"}{"links"}{5} =({
					name => "Entry Rollcall",
					url => "/register/event/activate.mhtml"
				});
			}

			unless (keys %admin_categories) {
				delete $menu{"entries"}{"links"}{3};
			}
			if (keys %check_categories) {
				$menu{"entries"}{"links"}{5} =({
					name => "Judge Rollcall",
					url => "/register/judge/activate.mhtml"
				});
			}

		} else {

			if ($tourn_settings->{"ncfl"}) {
				$menu{"entries"}{"links"}{0} = ({
					name => "Dioceses",
					url  => "/register/region/index.mhtml"
				});
			} elsif ($tourn_settings->{"nsda_nats"}) {
				$menu{"entries"}{"links"}{0} = ({
					name => "Districts",
					url  => "/register/district/index.mhtml"
				});
			}
		}

		$menu{"paneling"} = ({
			order => 3,
			icon  => "fa-pencil",
			links => {
				1 => {name => "Reports"     , url => "/panel/report/index.mhtml"}  ,
				2 => {name => "Rounds"      , url => "/panel/round/index.mhtml"}    ,
				3 => {name => "Judges"      , url => "/panel/judge/index.mhtml"}   ,
				4 => {name => "Rooms"       , url => "/panel/room/index.mhtml"}    ,
				5 => {name => "Web Publish" , url => "/panel/publish/index.mhtml"} ,
			}
		});

		if ($tourn_settings->{"nsda_district"}
			&& (not defined $person_settings->{"nsda_admin"})
			&& (not defined $person->site_admin)
		) {
			delete $menu{"paneling"}{"links"}{2};
		}

		if (not defined $full_permissions) {
			unless (keys %admin_events) {
				delete $menu{"paneling"}{"links"}{2};
				delete $menu{"paneling"}{"links"}{4};
				delete $menu{"paneling"}{"links"}{5};
			}

			unless (keys %admin_categories) {
				delete $menu{"settings"}{"links"}{3};
			}
		}


		$menu{"tabbing"} = ({
			order => 5,
			icon  => "fa-keyboard-o",
			links => {
				1 => {name => "Enter Ballots" , url => "/tabbing/entry/index.mhtml"}        ,
				2 => {name => "Status"        , url => "/tabbing/status/dashboard.mhtml"}   ,
				3 => {name => "Codebreaker"   , url => "/tabbing/report/codebreaker.mhtml"} ,
				4 => {name => "Breaks"        , url => "/tabbing/break/index.mhtml"}        ,
				5 => {name => "Entry Cards"   , url => "/tabbing/entry/card.mhtml"}         ,
				6 => {name => "Sweepstakes"   , url => "/tabbing/entry/sweeps.mhtml"}       ,
			}
		});

		if ($sv) {
			$menu{"tabbing"}{"links"}{7} = ({
				name => "Student Vote",
				url  => "/tabbing/entry/student_vote.mhtml"
			});
		}

		if (not defined $full_permissions) {
			unless (keys %admin_events) {
				delete $menu{"tabbing"}{"links"}{3};
				delete $menu{"tabbing"}{"links"}{4};
				delete $menu{"tabbing"}{"links"}{5};
				delete $menu{"tabbing"}{"links"}{6};
				delete $menu{"tabbing"}{"links"}{7};
			}
		}


		$menu{"results"} = ({
			order => 6,
			icon  => "fa-trophy",
			links => {
				1 => {name => "Event Display" , url => "/tabbing/results/index.mhtml"} ,
				5 => {name => "Reports"       , url => "/tabbing/report/index.mhtml"}  ,
				6 => {name => "Web Publish"   , url => "/tabbing/publish/index.mhtml"} ,
			}
		});

		if ($tourn_settings->{"nsda_district"}) {

			$menu{"results"}{"links"}{2} = ({
				name => "Qualifiers",
				url  => "/tabbing/results/nsda_qualifiers.mhtml"
			});

			$menu{"results"}{"links"}{3} = ({
				name => "Sweepstakes",
				url  => "/tabbing/results/nsda_sweepstakes.mhtml"
			});

			if ($tourn_settings->{"nsda_district_questions"}{"nsda_tabbing_software"} eq "speechwire") {
				$menu{"results"}{"links"}{4} = ({
					name => "SW Data Upload",
					url  => "/tabbing/publish/swdistrict.mhtml"
				});
			}
			delete $menu{"results"}{"links"}{5};

		} elsif ($tourn_settings->{"nsda_nats"}) {

			$menu{"results"}{"links"}{2} = ({
				name => "Placement",
				url  => "/tabbing/results/nsda_qualifiers.mhtml"
			});
		}

		$menu{"results"}{"links"}{7} = ({
			name => "NSDA Points",
			url  => "/tabbing/results/nsda_points.mhtml"
		});

		if (not defined $full_permissions) {
			unless (keys %admin_events) {
				delete $menu{"results"}{"links"}{1};
				delete $menu{"results"}{"links"}{6};
				delete $menu{"results"}{"links"}{3};
				delete $menu{"results"}{"links"}{2};
				delete $menu{"results"}{"links"}{4};
				delete $menu{"results"}{"links"}{7};
			}
		}
	}

	my $last_type;
	my $last_code;
	my $last_supp = 0;
	my $last_conn = 0;
	my $counter;

	$menu{"schemats"} = ({
		icon  => "fa-table",
		order => 4,
	});

	if (@events) {

		foreach my $event_id (@events) {
			my $class;
			$counter++;
			$menu{"schemats"}{"links"}{$counter}{"url"} = "/panel/schemat/show.mhtml?event_id=".$event_id;
			$menu{"schemats"}{"links"}{$counter}{"name"} = uc($events{$event_id}{"abbr"});
			$menu{"schemats"}{"links"}{$counter}{"type"} = $events{$event_id}{"type"};
			$menu{"schemats"}{"links"}{$counter}{"title"} = $events{$event_id}{"name"};
			$menu{"schemats"}{"links"}{$counter}{"class"} = $class;

		}
	}

	my $tid = "?tourn_id=".$tourn->id;

</%perl>

	<ul id="nav" class="navbartop">

%		foreach my $column (sort {$menu{$a}{"order"} <=> $menu{$b}{"order"}} keys %menu) {
			<li class="top">

				<a class="top_link">
					<span class="down text"><% ucfirst($column) %> </span>
					<span class="down icon fa <% $menu{$column}{"icon"} %>"></span>
				</a>
<%perl>
				foreach my $type (keys %event_types) {
					unless ($event_types{$type} > 0) {
						delete $event_types{$type};
					}
				}
				my @types = keys %event_types;

				if ($column eq "schemats" && (scalar @types > 1)) {

					my $width = "width: ".((scalar @types) * 100)."px; left: -".((scalar @types - 1) * 48)."px;";
</%perl>

					<div class="sub megamenu" style="<% $width %>">
%						foreach my $type (sort {$a cmp $b} keys %event_types) {
							<span class="grow">
%								foreach my $link (sort {$a <=> $b} keys %{$menu{$column}{"links"}}) {
%									next if $menu{$column}{"links"}{$link}{"type"} ne $type;
									<a
										class="<% $menu{$column}{"links"}{$link}{"class"} %>"
										title="<% $menu{$column}{"links"}{$link}{"title"} %>"
										href="<% $menu{$column}{"links"}{$link}{"url"} %><% $column ne "schemats" ? $tid : "" %>"
									><% $menu{$column}{"links"}{$link}{"name"} %></a>
%								}
							</span>
%						}
					</div>
%				} else {

		        	<ul class="sub <% $menu{$column}{"class"} %>">
%					foreach my $link (sort {$a <=> $b} keys %{$menu{$column}{"links"}}) {
						<li>
							<a
								class="<% $menu{$column}{"links"}{$link}{"class"} %>"
								title="<% $menu{$column}{"links"}{$link}{"title"} %>"
								href="<% $menu{$column}{"links"}{$link}{"url"} %><% $column ne "schemats" ? $tid : "" %>"
							><% $menu{$column}{"links"}{$link}{"name"} %></a>
						</li>
%					}
					</ul>
%				}
			</li>
%		}
	</ul>

