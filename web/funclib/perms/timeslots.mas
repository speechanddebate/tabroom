<%args>
	$perms
	$tourn
	$category => undef
	$checker  => undef
</%args>
<%init>

	my $dbh = Tab::DBI->db_Main();
	my $sth;

	my $ids;
	my $limit;

	if ($category) {
		$limit = " and event.category = ".int($category);
	}

	my $query =	"
		select timeslot.id, timeslot.name, timeslot.start, timeslot.end,
			tourn.tz, count(distinct round.id) as rounds
		from (timeslot, round, event, tourn)
		where tourn.id = ?
			and timeslot.tourn = tourn.id
			and timeslot.id = round.timeslot
			and round.event = event.id
			$limit
	";

	if ($perms->{tourn}{$tourn} eq "owner"
		|| $perms->{tourn}{$tourn} eq "tabber"
		|| ($checker && $perms->{tourn}{$tourn} eq "checker")
	) {

		unless ($limit) {
			$query = "
				select timeslot.id, timeslot.name, timeslot.start, timeslot.end,
					tourn.tz, count(distinct round.id) as rounds
				from (timeslot, tourn)
					left join round on round.timeslot = timeslot.id
				where tourn.id = ?
					and timeslot.tourn = tourn.id
			";
		}

	} elsif ($ARGS{"by_both"}) {

		my $cat_ids;

		foreach my $category_id (keys %{$perms->{'category'}}) {
			if (
				($perms->{category}{$category_id} eq "checker" && $checker)
				|| ($perms->{category}{$category_id} eq "tabber")
			) {
				$cat_ids .= ',' if $cat_ids;
				$cat_ids .= int($category_id);
			}
		}

		my $ev_ids;

		foreach my $event_id (keys %{$perms->{'event'}}) {
			if (
				($perms->{event}{$event_id} eq "checker" && $checker)
				|| ($perms->{event}{$event_id} eq "tabber")
			) {
				$ev_ids .= ',' if $ev_ids;
				$ev_ids .= int($event_id);
			}
		}

		if ($cat_ids && $ev_ids) {
			$query .= ' and (event.id IN ('.$ev_ids.') OR event.category IN ('.$cat_ids.') ) ';
		} elsif ($cat_ids) {
			$query .= " and event.category IN ($cat_ids) ";
		} elsif ($ev_ids) {
			$query .= " and event.id IN ($ev_ids) ";
		} else {
			return;
		}

	} elsif ($ARGS{"by_category"}) {

		foreach my $category_id (keys %{$perms->{'category'}}) {
			if (
				($perms->{category}{$category_id} eq "checker" && $checker)
				|| ($perms->{category}{$category_id} eq "tabber")
			) {
				$ids .= ',' if $ids;
				$ids .= int($category_id);
			}
		}

		$query .= " and event.category IN ($ids) ";

		unless ($ids) {
			return;
		}

	} else {

		foreach my $event_id (keys %{$perms->{'event'}}) {
			if (
				($perms->{event}{$event_id} eq "checker" && $checker)
				|| ($perms->{event}{$event_id} eq "tabber")
			) {
				$ids .= ',' if $ids;
				$ids .= int($event_id);
			}
		}

		unless ($ids) {
			return;
		}

		$query .= " and event.id IN ($ids) ";
	}

	$query .= " group by timeslot.id order by timeslot.start, timeslot.name ";

	$sth = $dbh->prepare($query);
	$sth->execute($tourn->id);

	my $results = $sth->fetchall_hash();
	my %timeslots;

	foreach my $result (@{$results}) {
		$timeslots{$result->{id}}{'id'}        = $result->{id};
		$timeslots{$result->{id}}{'tz'}        = $result->{tz};
		$timeslots{$result->{id}}{'name'}      = $result->{name};
		$timeslots{$result->{id}}{'rounds'}    = $result->{rounds};
		$timeslots{$result->{id}}{'start'}     = $m->comp('/funclib/dtme.mas', string   => $result->{start}, tz => $result->{tz});
		$timeslots{$result->{id}}{'end'}       = $m->comp('/funclib/dtme.mas', string   => $result->{end}  , tz => $result->{tz});
		$timeslots{$result->{id}}{'startsort'} = $m->comp('/funclib/showdt.mas',
			string => $result->{start} ,
			tz     => $result->{tz},
			format => 'rawsort',
			return => 1
		);
		$timeslots{$result->{id}}{'startstring'} = $m->comp('/funclib/showtime.mas',
			string => $result->{start} ,
			tz     => $result->{tz},
			format => 'murica_short',
			return => 1
		);
	}

	return %timeslots;

</%init>
