<%args>
	$person   => undef
	$entry    => undef
	$event    => undef
	$region   => undef
	$district => undef
</%args>
<%init>

	return unless $entry && $event;

	my $origin = $entry->school->tourn;
	my $chapter = $entry->school->chapter;

	my $now = DateTime->now();
	my $dest =  $event->tourn;
	my %dest_settings = $dest->all_settings();

	my $school = $dest->schools(
		chapter => $chapter->id
	)->first;

	my $err;
	my $unconfirmed = 0;

	unless ($school) {

		if ($dest_settings{"nsda_nats"}) {

			$unconfirmed = 1;

			if ($district) {
				($school, $err) = $m->comp(
					"/funclib/school_create.mas",
						person         => $person,
						chapter        => $chapter,
						tourn          => $dest,
						nodeadlines    => 1,
						district       => $district,
						tourn_settings => \%dest_settings
				);
			} elsif ($chapter->district) {

				($school, $err) = $m->comp(
					"/funclib/school_create.mas",
						person         => $person,
						chapter        => $chapter,
						tourn          => $dest,
						nodeadlines    => 1,
						district       => $chapter->district,
						tourn_settings => \%dest_settings
				);

			} else {
				$err .= "No district found for district ID $district";
			}

		} elsif ($dest_settings{"ncfl"}) {

			if ($region) {
				($school, $err) = $m->comp(
					"/funclib/school_create.mas",
						person         => $person,
						chapter        => $chapter,
						tourn          => $dest,
						region         => $region,
						tourn_settings => \%dest_settings
				);

			} else {
				$err .= "No diocese found for diocese ID $region";
			}

		} else {

			($school, $err) = $m->comp(
				"/funclib/school_create.mas",
					person         => $person,
					chapter        => $chapter,
					tourn          => $dest,
					region         => $region,
					tourn_settings => \%dest_settings
			);
		}
	}

	unless ($school) {
		$err .= "<br />" if $err;
		$err .= "Could not create a school in the tournament for ".$chapter->name;
	}

	return 0, $err if $err;

	if ($dest_settings{"ncfl"}) {

		my @existings = $m->comp(
			"/funclib/region_entries.mas",
			region => $region,
			event  => $event
		);

		if (scalar @existings >= $region->setting("quota")) {
			return 0, "Your diocese has already reached its entry quota of ".$region->setting("quota");
		}

	}

	my @students = $entry->students();

	return 0, "No students are part of that entry!" unless @students;

	if ($dest_settings{"nsda_nats"}) {

		foreach my $student (@students)  {

			my %ok_events = $m->comp(
				"/funclib/student_clear_events.mas",
				school      => $school,
				student     => $student,
				unconfirmed => $unconfirmed
			);

			$err .= $student->first." ".$student->last." is not eligible to enter ".$event->abbr."<br />"
				unless $ok_events{$event->id};
		}
	}

	return 0, $err if $err;

    my $waitlist = $m->comp(
		"/funclib/waitlist_status.mas",
            event  => $event,
            school => $school
        );

	if ($waitlist) {
		$waitlist = 1;
	} else {
		$waitlist = 0;
	}

	if ($dest_settings{"nsda_nats"}) {
		$unconfirmed = 1;
		$waitlist    = 0;
	}

	my $new_entry = Tab::Entry->create({
		code          => "",
		name          => "PENDING!",
		event         => $event->id,
		school        => $school->id,
		unconfirmed   => $unconfirmed,
		waitlist      => $waitlist,
		registered_by => $person->id,
	});

	if ($dest_settings{"nsda_nats"} && (not defined $district)) {
		$new_entry->setting("lastchance", 1);
	}

	foreach my $student (@students) {
		Tab::EntryStudent->create({
			entry   => $new_entry->id,
			student => $student->id
		});
	}

	unless (
		$dest_settings{"nsda_nats"}
		|| $dest_settings{"ncfl"}
	) {
		$new_entry->code($m->comp(
			"/funclib/entry_code.mas",
				entry => $new_entry
			)
		);
	}

	if ($district && $district == 999) {
		$new_entry->setting("lastchance", 1);
	}

	$new_entry->name($m->comp("/funclib/entry_name.mas", entry => $new_entry));
	$new_entry->update();
	$new_entry->setting("source_entry", $entry->id);

	return $new_entry;

</%init>
