<%args>
	$set => undef
</%args>
<%init>

	return unless $set;
	my @rules = $set->rules;
	my @actual_rules;

	foreach my $rule (sort {$a->id <=> $b->id} @rules) {

		my $tag = $rule->tag;

		next if $tag eq "novice_only";
		next if $tag eq "multiply_entrysize";
		next if $tag eq "one_per_person";
		next if $tag eq "by_person";
		next if $tag eq "events";
		next if $tag eq "multiplier";
		next if $tag eq "exclude_breakouts";
		next if $tag eq "entries";
		next if $tag eq "event_entries";
		next if $tag eq "set_limit";
		next if $tag eq "set_event_limit";
		next if $tag eq "wildcards";
		next if $tag eq "print_limit";
		next if $tag eq "ignore_round";
		next if $tag eq "max_entry_persons";

		push @actual_rules, $rule;
	};

	@rules = @actual_rules;
	return unless @rules;

	my $counter = 1;

	$m->print("<h5>Rules in ruleset</h5>");

	foreach my $rule (sort {$a->id <=> $b->id} @rules) {

		my $tag = $rule->tag;

		my $index = index($tag, 'rev_');
		my $count = $rule->count;

</%init>

		<div id="<% $rule->id %>" class="row">

			<span class="twenty semibold bluetext padvert centeralign">
				<% $counter++ %>.
			</span>

			<span class="smallish tenth">
%			   if ($rule->value && $rule->value eq int($rule->value) && $index != 0 ) {
					<% $rule->value %> point<% $rule->value == 1 ? "" : "s" %>
%			   }
			</span>

%		   if ($rule->tag eq "manual" || $rule->tag eq "nsda_place") {
				<span class="seventenths padsetting">
					<% tag_text($rule) %>
				</span>
%		   } else {

				<span class="smallish threetenths">
					<% tag_text($rule) %>
				</span>

				<span class="smallish quarter">
%				   if ($rule->protocol > 0) {
						Based on <% $rule->protocol->name %>
%				   }
				</span>

				<span class="smallish fifth">
<%perl>
					my $count_string;

					if ($count eq "specific") {
						$count_string = "in Round #".$rule->count_round;
					} elsif ($count eq "before_end") {
						$count_string = $rule->count_round." rounds before end"
					} elsif ($count eq "last_prelims") {
						$count_string = "Last ".$rule->count_round." prelim rounds"
					} elsif ($count eq "last_prelim") {
						$count_string = "in the last prelim round";
					} elsif ($count eq "all") {
						$count_string = "in all rounds";
					} elsif ($count) {
						$count_string = "in $count rounds";
					}
</%perl>
					<% $count_string %>
				</span>
%			}

			<span class="centeralign twenty padvertless">
				<a
					value      = "1"
					rule_id    = "<% $rule->id %>"
					onClick    = "postSwitch(this, 'sweep_rule_rm.mhtml');"
					on_success = "destroy"
					class      = "buttonwhite redtext fa-sm fa fa-trash"
					title      = "Delete Rule"
				>
				</a>
			</span>
		</div>

%	}

%	return 1;

<%perl>

	sub tag_text {

		my $rule = shift;
		my $tag = $rule->tag;

		if ($tag eq "points_per") {
			 return "Appearance ";

		} elsif ($tag eq "points_per_po_round") {
			 return "Elected PO ";

		} elsif ($tag eq "rev_per_rank") {
			 return $rule->place." minus each rank ";

		} elsif ($tag eq "points_per_comp_rank") {
			 return "Points per round rank of ".$rule->place." ";

		} elsif ($tag eq "points_per_comp_rank_above") {
			 return "Points per round rank equal/better than ".$rule->place." ";

		} elsif ($tag eq "rev_per_comp_rank") {

			if ($rule->protocol > 0) {
				return $rule->place." minus each round rank from ".$rule->protocol->name;
			} else {
				return $rule->place." minus each round rank from TIEBREAK SET UNDEFINED, THIS RULL WILL NOT WORK";
			}

		} elsif ($tag eq "points_per_rank") {
			 return "Each individual rank of ".$rule->place." ";

		} elsif ($tag eq "points_per_rank_above") {
			 return "Each individual rank equal or better than ".$rule->place." ";

		} elsif ($tag eq "rev_seed" && $rule->place) {
			 return $rule->place." minus placement overall ";

		} elsif ($tag eq "rev_seed") {
			 return "Number of entries, minus final placement ";

		} elsif ($tag eq "ballot_win") {
			 return "Ballot won";
	  } elsif ($tag eq "ballot_loss") {
			 return "Ballot lost";

		} elsif ($tag eq "round_win") {
			 return "Round won ";

		} elsif ($tag eq "round_loss") {
			 return "Round lost ";

		} elsif ($tag eq "round_bye") {
			 return "Round bye ";

		} elsif ($tag eq "proroated_records") {
			 return "Ballots won (prorated)";

		} elsif ($tag eq "coachover_advance") {
			 return "Advanced in coachover ";

		} elsif ($tag eq "seed") {
			 return Lingua::EN::Numbers::Ordinate::ordinate($rule->place)." place ";

		} elsif ($tag eq "seed_above") {
			 return Lingua::EN::Numbers::Ordinate::ordinate($rule->place)." place or better ";

		} elsif ($tag eq "seed_above_percent") {
			 return "Placing in the top ".$rule->place."%";

		} elsif ($tag eq "cume") {
			 return "Prelim cumulative ranks of ".$rule->place;

		} elsif ($tag eq "cume_above") {
			 return "Prelim cumulative ranks equal or better than ".$rule->place;

		} elsif ($tag eq "cumulative") {
			 return "Past points for the ".ucfirst($rule->value)." award ";

		} elsif ($tag eq "manual") {
			return "Use manually-entered points (enter at Tabbing : Sweepstakes)";

		} elsif ($tag eq "troll") {
			 return "Never gonna give you up, never gonna let you down";

		} elsif ($tag eq "troll2") {
			 return "Never gonna run around and desert you";
		} elsif ($tag eq "nsda_place") {
			 return "NSDA District Placement Points";

		} elsif ($tag eq "minimum") {
			return "Minimum points for participation";
		}
	}

</%perl>

