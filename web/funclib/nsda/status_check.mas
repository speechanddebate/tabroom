<%args>
	$student
	$school
	$tourn => undef
</%args>
<%init>

	unless ($tourn) {
		if ($school) {
			$tourn = $school->tourn();
		}
	}

	return unless $school;
	return unless $school->district;

	my $sth;
	my %incomplete;

#	my $vaccine = $tourn->setting('vaccines');

	#2 Entry Release Forms from the district

	# Marked as no longer necessary as of 2/23/21 but since I have trust issues
	# about this type of thing I am keeping the code -- CLP

#	my $dbh = Tab::DBI->db_Main();
#	$sth = $dbh->prepare("
#		select  school.id, school.chapter, rf.value_text, rf.id
#			from school, school_setting rf
#		where school.district = ?
#			and school.id = rf.school
#			and school.tourn = ?
#			and rf.tag = 'release_forms'
#	");

#	$sth->execute($school->district->id, $tourn->id);

#	my %release_forms;
#
#	while (
#		my ($school_id, $chapter_id, $rf_json, $rf_id) = $sth->fetchrow_array()
#	) {
#
#		my %school_forms = eval {
#			return %{JSON::decode_json($rf_json)};
#		};
#		%release_forms = (%release_forms, %school_forms);
#	}

	#4-6 Entry Details

	my %entries = $m->comp(
		"/funclib/nsda/nats_student_entries.mas",
		student => $student,
		tourn   => $tourn
	);

	my @settings = (
		"coach_points",
		"coach_script",
		"author",
		"title",
		"publisher",
		"topic",
		"publish_isbn",
		"publish_url",
		"publish_date"
	);

	my @date_settings = ("publish_print_date");

	my %used_events;
	my %checked;
	my $reasons;

	foreach my $type ("main", "supp", "conn") {

		next unless ($entries{$type});

		foreach my $entry (@{$entries{$type}}) {

			my $event = $entry->event;
			my %entry_settings = $entry->all_settings();
			my %event_settings = $event->all_settings();

			next if $entry_settings{"rejected_by"};

			my $abbr = $event->abbr;
			my %local_incomplete = ();
			my $local_reasons;

#			foreach my $student ($entry->students) {
#				unless ($checked{$student->id}++){
#					$local_incomplete{"$abbr : No release forms uploaded for ".$student->first." ".$student->last}++
#						unless $release_forms{$student->id};
#				}
#			}

			foreach my $student ($entry->students) {
				unless ($student->person > 0) {
					$local_incomplete{"$abbr : A tabroom account still required for ".$student->first." ".$student->last}++;
#				} elsif ($vaccine) {
#					my $vax = $student->person->setting('vaccine_'.$tourn->id);
#					if ($vax ne "confirmed") {
#						$local_incomplete{"$abbr : Vaccine check pending for ".$student->first." ".$student->last}++;
#					}
				}
			}

			unless ($event_settings{'usa_wsdc'}) {
				$local_incomplete{"$abbr : No coach for points listed"}++
					unless $entry_settings{"coach_points"};
			}

			if ($event_settings{"ask_for_videos"} && (not defined $event_settings{"video_link_optional"})) {
				$local_incomplete{"$abbr : Video link was not tested"}++
					unless $entry_settings{"video_link_tested"};
			}

			my $piece_issues;

			if ($event_settings{"ask_for_titles"}) {
				unless ($entry_settings{"title"}) {
					$piece_issues = &piece_header($piece_issues);
					$piece_issues .= "title";
				}
			}

			if ($event_settings{"ask_for_manuscript"}) {
				unless ($entry_settings{"script_file"}) {
					$piece_issues = &piece_header($piece_issues);
					$piece_issues .= "manuscript or cutting";
				}
			}

			if ($event_settings{"ask_for_topic"}) {
				unless ($entry_settings{"topic"}) {
					$piece_issues = &piece_header($piece_issues);
					$piece_issues .= "topic";
				}
			}

			if ($event_settings{'ask_for_bibliography'}) {
				unless ($entry_settings{"bibliography"}) {
					$piece_issues = &piece_header($piece_issues);
					$piece_issues .= "bibliography";
				}
			}

			if ($event_settings{"ask_for_authors"}) {
				unless ($entry_settings{"author"}) {
					$piece_issues = &piece_header($piece_issues);
					$piece_issues .= "author"
				}

				unless (
					( $entry_settings{"publisher"}
					  && $entry_settings{"publish_date"}
					  && $entry_settings{"publish_isbn"}
					) || (
					  $entry_settings{"publish_url"}
					  && $entry_settings{"publish_print_date"}
					)
				) {
					$piece_issues = &piece_header($piece_issues);
					$piece_issues .= " publication date incomplete"
				}
			}

			if ($piece_issues) {
				$local_incomplete{"$abbr : $piece_issues"}++;
			}

			if (keys %local_incomplete) {

				$entry->setting("status", "incomplete");

				foreach my $key (sort {$a cmp $b} keys %local_incomplete) {
					$local_reasons .= " - " if $local_reasons;
					$local_reasons .= $key;
				}

				$entry->setting("incomplete_reasons", "text", $local_reasons);

				$reasons .= " - " if $reasons;
				$reasons .= $local_reasons;

			} else {
				$entry->setting("status", "complete");
				$entry->setting("incomplete_reasons", 0);
			}
		}
	}

	return $reasons;

	sub piece_header {
		my $header = shift;
		if ($header) {
			$header .= " &ndash; ";
		} else {
			$header = "Speech/Piece Missing: ";
		}
		return $header;
	};

</%init>
