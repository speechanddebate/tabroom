<%args>
	$person => undef
	$nsda   => undef
	$tourn  => undef
	$dbh    => undef
	$year   => undef
</%args>
<%init>

	return unless $nsda;

	unless ($year) {
		my $start = $tourn->start;
		$year = $start->year;
		$year-- if $start->month < 7;
	}

	my $limit = $year."-07-01 00:00:00";

	# Check if they competed in Tabroom last year
	unless ($dbh) {
		$dbh = Tab::DBI->db_Main();
	}

	if ($person && (not defined $ARGS{"bulk"})) {

		my $sth = $dbh->prepare("
			select student.id, student.grad_year, student.first, student.last, chapter.name
				from student, chapter
			where student.person = ?
				and student.chapter = chapter.id
				and student.retired != 1
				and chapter.level != 'university'
		");

		$sth->execute($person);

		my $err;

		while (
			my ($id, $tyear, $first, $last, $chapter) = $sth->fetchrow_array()
		) {
			next if $tyear < $year;
			$err .=  " Linked to $first $last from school $chapter who graduates in $tyear";
		}

		if ($err) {
			return $err;
		}
	}

	if ($nsda) {


		if (not defined $ARGS{"bulk"}) {

			# Check if Tabroom believes they are a FYO based on NSDA number
			my $sth = $dbh->prepare("
				select student.id, student.grad_year, student.first, student.last
					from student, chapter
				where student.nsda = ?
					and student.chapter = chapter.id
					and chapter.level != 'university'
			");

			$sth->execute($person);

			my $err;

			while (
				my ($id, $tyear, $first, $last) = $sth->fetchrow_array()
			) {
				next if $tyear < $year;
				$err .=  "Graduation date is $tyear.  ID $id ";
			}

			if ($err) {
				return $err;
			}
		}

		# Check if the NSDA Database believes they are a FYO

		my ($roles_ref, $roles_raw) = $m->comp("/funclib/nsda/api_client.mas",
			path => "/members/$nsda/roles"
		);

		if ($roles_ref) {
			foreach my $role (@{$roles_ref}) {
				next if $role->{"grad_year"} < $year;
				my $err .=  "Graduate date is ".$role->{"grad_year"}.". ID ".$role->{role_id};
				return $err;
			}
		}
	}

	return;

</%init>
