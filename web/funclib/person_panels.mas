<%args>
	$person
	$done     => undef
	$judge    => undef
	$listonly => undef
	$reverse  => undef
</%args>
<%init>

	my $now = DateTime->now;
	my $grace = $now->clone;
	$grace->subtract(days => 1);

	my $desc = " DESC " if $reverse;

	if ($judge) {

		return unless $judge->person->id == $person->id;

		Tab::Panel->set_sql( open_by_judge => "
			select distinct panel.id, judge.id as judge
				from panel, round, ballot, event_setting, judge, entry
			where judge.id = ?
				and ballot.judge = judge.id
				and ballot.panel = panel.id
				and panel.round = round.id
				and ( round.published = 1
					or exists ( select balloted.id
						from round_setting balloted
						where balloted.round = round.id
						and balloted.tag = 'judges_ballots_visible'
						and balloted.value = 1
					)
				)
				and round.event = event_setting.event
				and ballot.entry = entry.id
				and event_setting.tag = 'online_ballots'
				and event_setting.value = 1
			order by round.name $desc, panel.flight, panel.letter
		");

		return Tab::Panel->search_open_by_judge($judge->id);

	} elsif ($done) {

		Tab::Panel->set_sql( done_by_person => "
			select distinct panel.id, judge.id as judge
				from (panel, round, ballot, judge, event, tourn, entry)
			where judge.person = ?
				and ballot.judge = judge.id
				and ballot.audit = 1
				and ballot.panel = panel.id
				and panel.round = round.id
				and round.event = event.id
				and event.tourn = tourn.id
				and ballot.entry = entry.id
				and tourn.end > ?
			order by round.name $desc, panel.flight, panel.letter
		");

		return Tab::Panel->search_done_by_person($person->id, DateTime::Format::MySQL->format_datetime($grace));

 	} elsif ($listonly) {

		Tab::Panel->set_sql( list_by_person => "
			select distinct panel.id, judge.id as judge
			from panel, round, ballot, judge, event, tourn
			where judge.person = ?
			and ballot.judge = judge.id
			and ballot.panel = panel.id
			and panel.round = round.id
			and round.event = event.id
			and ( round.published = 1
				or exists ( select balloted.id
					from round_setting balloted
					where balloted.round = round.id
					and balloted.tag = 'judges_ballots_visible'
					and balloted.value = 1
				)
			)
			and event.tourn = tourn.id
			and tourn.end > ?
			and not exists (
				select id from event_setting
				where event_setting.event = event.id
				and event_setting.value = 1
				and event_setting.tag = 'online_ballots'
			)
			order by round.name $desc, panel.flight, panel.letter
		");

		return Tab::Panel->search_list_by_person($person->id, DateTime::Format::MySQL->format_datetime($grace));

	} else {

		Tab::Panel->set_sql( open_by_person => "
			select distinct panel.*, judge.id as judge
				from panel, round, ballot, event, event_setting, judge, tourn, entry
			where judge.person = ?
				and ballot.judge = judge.id
				and ballot.panel = panel.id
				and ballot.entry = entry.id
				and panel.round = round.id
				and round.event = event_setting.event
				and (
					round.published = 1
					or exists ( select balloted.id
						from round_setting balloted
						where balloted.round = round.id
						and balloted.tag = 'judges_ballots_visible'
						and balloted.value = 1
					)
				)
				and event_setting.tag = 'online_ballots'
				and event_setting.value = 1
				and event_setting.event = event.id
				and event.tourn = tourn.id
				and tourn.end > ?

				and (
					exists (
						select weekend.id
							from weekend, category_setting cws
						where weekend.tourn = tourn.id
							and cws.tag = 'weekend'
							and cws.value = weekend.id
							and cws.category = judge.category
							and weekend.end > ?
					) or not exists (
						select weekend.id
						from weekend
						where weekend.tourn = tourn.id
					)
				)

			order by round.name $desc, panel.flight, panel.letter
		");

		return Tab::Panel->search_open_by_person(
			$person->id,
			DateTime::Format::MySQL->format_datetime($grace),
			DateTime::Format::MySQL->format_datetime($grace)
		);

	}

	return;

</%init>

