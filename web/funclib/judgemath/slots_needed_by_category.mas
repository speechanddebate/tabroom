<%args>
	$category
	$category_settings
	$tourn_settings
	$school_settings => undef
	$event_settings  => undef
	$school          => undef
	$region          => undef
	$confirmed       => undef
	$waitlist        => undef
	$bulk            => undef
</%args>
<%init>

	use POSIX;

	my $slots;
	my @entries;

	%{$category_settings} = $category->all_settings() unless $category_settings;
	my $drop_limit = " and entry.dropped != 1 " if $category_settings->{"drops_no_burden"};

	my $waitlist_limit;

	if ($tourn_settings) {

		$waitlist_limit .= " and entry.waitlist != 1 "
			unless $tourn_settings->{"judges_waitlist"};

	} elsif ($category->tourn->setting("judges_waitlist")) {
		$waitlist_limit .= " and entry.waitlist != 1 ";
		$tourn_settings->{"judges_waitlist"}++;
	}

	if ($bulk) {

		push @entries, @{$confirmed} if $confirmed;
		push @entries, @{$waitlist} if $waitlist && $tourn_settings->{"judges_waitlist"};

	} elsif ($school) {

		Tab::Entry->set_sql(by_category_school=> "
			select distinct entry.*, event.id as eventid
			   from entry,event
			   where entry.school = ?

			   and entry.event = event.id
			   ".$waitlist_limit."
			   ".$drop_limit."
			   and entry.unconfirmed = 0
			   and event.category = ?
				and not exists (
					select id from event_setting
					where event_setting.event = event.id
					and event_setting.tag = 'no_judge_burden'
					and event_setting.value = 1 )
				order by entry.code
		");

		@entries = Tab::Entry->search_by_category_school($school->id, $category->id);

	} elsif ($region) {

		Tab::Entry->set_sql(by_category_region => "
			select distinct entry.*, event.id as eventid
			   from entry,event,school
			   where entry.school = school.id
			   and school.region = ?
			   and entry.event = event.id
			   ".$waitlist_limit."
			   ".$drop_limit."
			   and entry.unconfirmed = 0
			   and event.category = ?
				and not exists (
					select id from event_setting
					where event_setting.event = event.id
					and event_setting.tag = 'no_judge_burden'
					and event_setting.value = 1 )
				order by entry.code
		");

		@entries = Tab::Entry->search_by_category_region($region->id, $category->id);
	}

	my %entries_in_event;

	foreach my $entry (@entries) {

		if ($entry->eventid) {
			$entries_in_event{$entry->eventid}++;
		} else {
			$entries_in_event{$entry->event}++;
		}
	}

	EVENT:
	foreach my $event_id (keys %entries_in_event) {

		# Event specific event adjustments
		unless ($event_settings->{$event_id}) {
			my $event = Tab::Event->retrieve($event_id);
			next EVENT unless $event;
			%{$event_settings->{$event_id}} = $event->all_settings();
		}

		$event_settings->{$event_id}{"adjust_judges_owed"} = 100
			unless $event_settings->{$event_id}{"adjust_judges_owed"};

		$slots += ($event_settings->{$event_id}{"adjust_judges_owed"} / 100)
			* $entries_in_event{$event_id};
	}

	$slots -= $category_settings->{"free"} * $category_settings->{"judge_per"} if @entries;

	if ($category_settings->{"min_burden"}
		&& @entries
		&& $category_settings->{"judge_per"}
	) {

		$slots = $category_settings->{"min_burden"} * $category_settings->{"judge_per"}
			if ($category_settings->{"min_burden"} * $category_settings->{"judge_per"}
			) > $slots;
	}

	if ($category_settings->{"max_burden"} && @entries) {
		$slots = $category_settings->{"max_burden"} * $category_settings->{"judge_per"}
			if (
				$category_settings->{"max_burden"} * $category_settings->{"judge_per"}
			) < $slots;
	}

	$slots = ceil($slots);
	$slots = 0 if $slots < 0;

	unless ($ARGS{"no_surcharge"}) {
		if ($school_settings) {
			if (defined $school_settings->{"judge_surcharge"}) {
				$slots = $slots * ($school_settings->{"judge_surcharge"} / 100);
			}

		} elsif ($school && $school->setting("judge_surcharge")) {
			$slots = $slots * ($school->setting("judge_surcharge") / 100);
		}

		if ($tourn_settings->{regions} && $category_settings->{"regional_judge_adjustments"}) {
			my $adjustment = $category_settings->{regional_judge_adjustments}{$school->region->id};

			if ($adjustment) {
				$slots = $slots * ($adjustment / 100);
			}
		}
	}

	return $slots;

</%init>
