<%args>
	$quiz     => undef
	$person   => undef
	$response => undef
</%args>
<%init>

	use Switch;
	use Data::Dumper;

	return unless $quiz;

	my %form = eval {
		return %{JSON::decode_json($quiz->questions)};
	};

	return unless %form;

	my $pq = $person->answers( quiz => $quiz->id)->first;

	my %answers = eval {
		return %{JSON::decode_json($pq->answers)};
	};

	return unless %form;
	my $blanks = 0;

	foreach my $key (keys %{$form{"questions"}}) {

		my $answer;

		switch ($form{"questions"}{$key}{"type"}) {

			case "string" {
				$answers{$key} = $response->{$key};
			}

			case "textbox" {
				$answers{$key} = $response->{$key};
			}
			case "number" {
				$answers{$key} = $response->{$key};
			}

			case "radio" {
				$answers{$key} = $response->{$key};
			}

			case "boolean" {
				$answers{$key} = $response->{$key};
			}

			case "required" {
				$answers{$key} = $response->{$key};
			}

			case "checkbox" {
				foreach my $answer (@{$form{"questions"}{$key}{"answers"}}) {
					$answers{$key."_".$answer} = $response->{$key."_".$answer};
				}
			}
		}

		unless ( defined($answers{$key})
			|| $form{"questions"}{$key}{"type"} eq "boolean"
			|| $form{"questions"}{$key}{"type"} eq "checkbox"
			|| $form{"questions"}{$key}{"type"} eq "subtitle"
			|| $form{"questions"}{$key}{"type"} eq "title"
		) {
			$blanks++;
		}
	}

	my $json = eval {
		return JSON::encode_json(\%answers);
	};

	unless ($pq) {
		$pq = eval {
			return Tab::PersonQuiz->create({
				person => $person,
				quiz   => $quiz
			});
		};

		unless ($pq) {
			$m->comp("/funclib/abort.mas", 
				message => "Could not save answers for account $person quiz $quiz"
			);
		}
	}


	if ($json) {

		$pq->answers($json);

		if ($quiz->approval) {
			$pq->pending(1);
		} else {
			$pq->pending(0);
		}

		if ($response->{"hidden"}) {
			$pq->hidden(1);
		} else {
			$pq->hidden(0);
		}

		if ($blanks > 0) {
			$pq->completed(0);
		} else {
			$pq->completed(1);
		}

		$pq->updated_at(DateTime->now());
		$pq->update();
	}

	my $nationals = $m->comp("/funclib/current_nationals.mas");

	if ($nationals) {

		Tab::Judge->set_sql( jpnats => "
			select judge.*
			from judge, category
			where category.tourn = ?
			and category.id = judge.category
			and judge.person = ?
		");

		foreach my $judge (Tab::Judge->search_jpnats($nationals->id, $person->id)) {
			$m->comp("/funclib/nsda/judge_check.mas",
				tourn    => $tourn,
				judge_id => $judge
			);
		}
	}

	my $msg = "Answers saved for ".$form{'title'}."!";

	return $msg;

</%init>
