<%args>
	$tourn
	$tourn_settings
	$person
	$protocol_id => undef
</%args>
<%init>

	my $protocol = Tab::Protocol->retrieve($protocol_id)
		if $protocol_id;

	my %protocol_setting = $protocol->all_settings if $protocol;

</%init>

	<script>

		function showSpecificRound() {
			$(".countSelector").each(function() {

				var protocolID = $(this).attr("protocol");
				var count = $(this).find(":selected").val();

				if (count === "specific") {
					$(".specificbox_"+protocolID).removeClass("hidden");
				} else {
					$(".specificbox_"+protocolID).addClass("hidden");
				}

			});

			fixVisual();
		};

		function showComposites() {

			$(".tbSelector").each(function() {

		        var tiebreaker = $(this).find(":selected").val();
				var protocolID = $(this).attr("protocol");

				if (
					tiebreaker === "ranks"
					|| tiebreaker === "chair_ranks"
					|| tiebreaker === "non_chair_ranks"
					|| tiebreaker === "reciprocals"
					|| tiebreaker === "judgepref"
					|| tiebreaker === "student_rank"
					|| tiebreaker === "student_recip"
					|| tiebreaker === "downs"
				) {

					$(".ranksbox_"+protocolID).removeClass("hidden");
					$(".oppbox_"+protocolID).addClass("hidden");

				} else if (
					tiebreaker === "opp_seed"
					|| tiebreaker === "opp_ranks"
					|| tiebreaker === "opp_wins"
					|| tiebreaker === "opp_points"
				) {

					$(".oppbox_"+protocolID).removeClass("hidden");
					$(".ranksbox_"+protocolID).addClass("hidden");

				} else {

					$(".ranksbox_"+protocolID).addClass("hidden");
					$(".oppbox_"+protocolID).addClass("hidden");
				}
			});

			fixVisual();
		};

		function showCompositeTbs() {

			$(".compositeSelector").each(function() {
		        var checked = $(this).prop("checked");
				var protocolID = $(this).attr("protocol");

				if (checked) {
					$(".compositebox_"+protocolID).removeClass("hidden");
				} else {
					$(".compositebox_"+protocolID).addClass("hidden");
				}
			});

			fixVisual();
		};

		$(document).ready(function(){
			showSpecificRound();
			showComposites();
			showCompositeTbs();
			$(".compositebox").addClass('hidden');
			fixVisual();
		});

	</script>

	<div class="main">

		<h4><% $tourn->name %></h4>

%		unless ($tourn_settings->{mock_trial_registration}) {
			<& tabbar.mas,
				tourn => $tourn,
				whoami => "tiebreaks"
			&>
%		} else {
			<div class='full bluebordertop martop'>
			</div>
%		}

		<div class='pagefull nospace'>

			<span class="twothirds nospace semibold">
%				unless ($tourn_settings->{mock_trial_registration}) {
					<h4><% $protocol ? $protocol->name : "Create a New Tiebreak Set" %></h4>
%				} else {
					<h5><% $protocol ? $protocol->name : "Create a New Tiebreak Set" %></h5>
%				}
			</span>

			<span class="third rightalign">

%				if ($protocol) {

%					my $warn = "You are about to delete this tiebreaker set.  That may cause terrible, terrible damage.  Are you sure?";
					<a
						class = "redtext buttonwhite centeralign nowrap hover"
						href  = "protocol_rm.mhtml?set_id=<% $protocol->id %>"
						title = "Delete <% $protocol->name %> tiebreakers"
						<& "/funclib/confirm.mas", warn => $warn &>
					>
						<span class="inline fa fa-trash"></span>
					</a>
%				}
			</span>

		</div>

		<form
			action = "protocol_save.mhtml"
			method = "post"
		>

		<input
			type  = "hidden"
			name  = "protocol_id"
			value = "<% $protocol_id %>"
		>

		<div class="odd full flexrow">
			<span class="quarter semibold bluetext padvertmore padleftmore">
				Name of Tiebreaker Set
			</span>
			<span class="threequarters padright">
				<input
					type        = "text"
					name        = "name"
					value       = "<% $protocol ? $protocol->name : "" %>"
					placeholder = "Tiebreak set name"
				>
			</span>
		</div>

		<span class="pagehalf marright">
			<label for="equal_elims">
				<div class="row hover">
					<span class="seveneighth wrap padleft">
						Advance equal entries from each section

						<p class="smallish explain marno padless">
							Use only in IE Elims &amp; Congress
						</p>
					</span>

					<span class="eighth smallish">
						<input
							type  = "checkbox"
							id    = "equal_elims"
							name  = "equal_elims"
							value = "1"
							<% $protocol_setting{"equal_elims"}
								? 'checked="checked"'
								: ""
							%>
						>
					</span>
				</div>
			</label>

			<label for="forfeits_never_break">
				<div class="row hover">
					<span class="seveneighth">
						<span class="quarterspacer"></span>
						Forfeits cannot advance/place last in event
					</span>
					<span class="eighth">
						<input
							type  = "checkbox"
							id    = "forfeits_never_break"
							name  = "forfeits_never_break"
							value = "1"
							<% $protocol_setting{"forfeits_never_break"}
								? 'checked="checked"'
								: ""
							%>
						>
					</span>
				</div>
			</label>

			<label for="forfeits_rank_last">
				<div
					class = "row hover"
					title = "This setting will give forfeits the worst rank in the section.  Multiple forfeits mean multiple students will be tied for the last rank"
				>
					<span class="seveneighth">
						<span class="quarterspacer"></span>
						Forfeits place last in section
					</span>
					<span class="eighth">
						<input
							type  = "checkbox"
							id    = "forfeits_rank_last"
							name  = "forfeits_rank_last"
							value = "1"
							<% $protocol_setting{"forfeits_rank_last"}
								? 'checked="checked"'
								: ""
							%>
						>
					</span>
				</div>
			</label>
		</span>

		<span class="pagehalf">
			<label for="tie_middle_rank">
				<div class="row hover">
					<span class="seveneighth">
						<span class="quarterspacer"></span>
						3x Composite Ties get Middle Rank (CA)
					</span>

					<span class="eighth">
						<input
							type  = "checkbox"
							id    = "tie_middle_rank"
							name  = "tie_middle_rank"
							value = "1"
							<% $protocol_setting{"tie_middle_rank"}
								? 'checked="checked"'
								: ""
							%>
						>
					</span>
				</div>
			</label>
		</span>

		<div class="libl full rightalign">
			<span class="centeralign third">
			<input
				type  = "submit"
				value = "<% $protocol ? "Save Settings" : "Create Tiebreak Set" %>"
			>
			</span>
		</div>
		</form>


%		if ($protocol) {

			<h4 class="martopmore">Tiebreaks in order</h4>
<%perl>
			my $prime;

	   		foreach my $tiebreak (
				sort {$a->priority <=> $b->priority}
					Tab::Tiebreak->search(protocol => $protocol->id)
			) {

				$prime = $tiebreak->priority if $tiebreak->priority > $prime;
</%perl>
				<div class="flexrow row ltborder">

					<span class="twenty padleft">
						 <% $tiebreak->priority %>.
					</span>

					<span class="threefifths padleft grow">
						 <& "/funclib/tiebreak_name.mas", tiebreak => $tiebreak &>
					</span>

					<span class="eighth rightalign">
            	    	<a
							class="bluetext button hover buttonwhite fa fa-sm fa-edit"
							onClick="$('.<% $tiebreak->id %>').toggleClass('hidden'); fixVisual();"
						></a>
					</span>

					<span class="eighth rightalign">
            	    	<a
							class="redtext button hover buttonwhite fa fa-sm fa-trash"
							href="tiebreak_rm.mhtml?tiebreak_id=<% $tiebreak->id %>"
						></a>
					</span>

				</div>

				<div class="centeralign ltborder pagefull hidden <% $tiebreak->id %>">

					<h5 class="leftalign">Edit tiebreak <% $tiebreak->name %>:</h5>

					<& "tiebreak_edit.mas",
						tiebreak     => $tiebreak,
						protocol => $protocol
					&>
				</div>

%			}

%			$prime++;


			<h5 class="martopmore">Add new tiebreaker:</h5>

			<& "tiebreak_edit.mas",
				protocol => $protocol,
				prime        => $prime
			&>

%		}
	</div>

	<div class="menu">
<%perl>
		my @sets =
			sort {$a->name cmp $b->name}
			Tab::Protocol->search(tourn => $tourn->id);
</%perl>

		<div class="sidenote">

%			if ($tourn_settings->{"nsda_district"}) {
%				my $warn = "You are about to shift all your tiebreaker sets.  Are you sure?";
				<h4>Districts Reset</h4>
				<a
					class = "yellow full"
					href  = "refresh_districts.mhtml"
					<& "/funclib/confirm.mas", warn => $warn &>
				>
					Reset Districts Tiebreakers to Defaults
				</a>
%			}

			<h4>Tiebreak sets</h4>
				<a
					class = "yellow full marbottom"
					href  = "tiebreaks.mhtml"
				>
					Add a new set
				</a>

%				foreach my $protocol (@sets) {
					<a
						class = "<% $protocol_id == $protocol->id ? "dk" : "" %>blue full"
						href  = "tiebreaks.mhtml?protocol_id=<% $protocol->id %>"
					>
						<% $protocol->name %>
					</a>
%				}

			<br />

			<h4 class="martop">Explain, Please</h4>

			<p>
				Create a tiebreak set for each type of advancement you wish to
				have; for example, one set for Debate Prelims, one for Debate
				Elims, one for IE Prelims, one for IE Elims, and one for Debate
				Top Speakers.
			</p>

			<a
				href  = "tiebreaks_explain.mhtml"
				class = "yellow full"
			>
				Guide to Tiebreakers
			</a>
		</div>
	</div>
