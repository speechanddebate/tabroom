<%args>
	$tourn
	$property_name  => undef
	$property_value => undef
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	my $set = Tab::SweepSet->retrieve($ARGS{'sweep_set_id'});

	unless ($set) {
		$m->print('{ "error": true, "message": "No sweep set found for ID '.$ARGS{sweep_set_id}.'"}');
		$m->abort();
	}

	$tourn = $set->tourn;

	unless ($set->tourn == $tourn->id) {
		$m->print('{ "error": true, "message": "Sweep ruleset '.$set->name.' is not part of the tournament '.$tourn->id." ".$tourn->name.'"}');
		$m->abort();
	}

	my $msg;
	my $destroy;
	my $reply;

	my $dbh = Tab::DBI->db_Main();

	if ($property_name eq "child") {

		my $child = Tab::SweepSet->retrieve($property_value);

		unless ($child) {
			$m->print('{ "error": true, "message": "No sweep set found for child ID '.$property_value.'"}');
			$m->abort();
		}

		if ($set->id == $child->id) {
			$m->print('{ "error": true, "message": "A set cannot include itself"}');
			$m->abort();
		}

		if (Tab::SweepInclude->search( child => $set->id, parent => $child->id)) {
			$m->print('{ "error": true, "message": "A set cannot include another set that includes it."}');
			$m->abort();
		}

		if (Tab::SweepInclude->search(parent => $set->id, child => $child->id)) {
			$m->print('{ "error": true, "message": "'.$child->name.' is already included in '.$set->name.'"}');
			$m->abort();
		}

		Tab::SweepInclude->create({
			parent => $set->id,
			child  => $child->id
		});

		$msg = $child->name." rule set added to ".$set->name;

		# I ritually apologized to Alan Turing Himself for this.

		$reply = '<span
				 class = \'hover third padvert semibold bluetext\'
				 child_set_id = \''.$child->id.'\'
				 property_name = \'child\'
				 sweep_set_id = \''.$set->id.'\'
				 onclick = \'postSwitch(this, \"sweep_rm.mhtml\");\'
				 id = \'child_'.$child->id.'\'
			>'.$child->name.'</span>';

	} elsif ($property_name eq "round") {

		my $round = Tab::Round->retrieve($property_value);

		unless ($round) {
			$m->print('{ "error": true, "message": "No sweep set found for round ID '.$property_value.'"}');
			$m->abort();
		}

		if (
			Tab::SweepRule->search(
				sweep_set => $set->id,
				tag       => "ignore_round",
				value     => $round->id)
		) {
			$m->print('{ "error": true, "message": "'.$round->name.' is already excluded from '.$set->name.'"}');
			$m->abort();
		}

		Tab::SweepRule->create({
			sweep_set => $set->id,
			tag       => "ignore_round",
			value     => $round->id
		});

		$msg = $round->realname." was excluded from ".$set->name;

		$reply = '<span
			 class = \'hover sixth padvert semibold redtext\'
			 round_id = \''.$round->id.'\'
			 property_name = \'round\'
			 sweep_set_id = \''.$set->id.'\'
			 onclick = \'postSwitch(this, \"sweep_rm.mhtml\");\'
			 id = \'round_'.$round->id.'\'
		>'.$round->event->abbr." ".$round->realname.'</span>';

	} elsif ($property_name eq "event") {

		my @events;

		if ($property_value eq "all") {
			push @events, $tourn->events();
		} elsif ($property_value eq int($property_value)) {
			push @events, Tab::Event->retrieve($property_value);
		} else {
			push @events, Tab::Event->search(tourn => $tourn->id, type => $property_value);
		}

		unless (scalar @events) {
			$m->print('{ "error": true, "message": "No event found for event ID '.$property_value.'"}');
			$m->abort();
		}


		my $already_sth = $dbh->prepare("
			select
				event.id
			from sweep_event se, event
			where 1=1
				and se.sweep_set = ?
				and se.event = event.id
		");

		$already_sth->execute($set->id);
		my $alreadies = $already_sth->fetchall_hash();
		my %already = map { $_->{id} => 1 } @{$alreadies};

		my $sth = $dbh->prepare("
			delete from sweep_event
			where sweep_event.event = ?
			and sweep_event.sweep_set = ?
		");

		foreach my $event (@events) {
			unless ($already{$event->id}) {
				Tab::SweepEvent->create({
					sweep_set => $set->id,
					event     => $event->id
				});

				$msg = $event->abbr." added to ".$set->name;

				$reply .= ' <span
					 class = \'hover sixth padvert semibold bluetext\'
					 event_id = \''.$event->id.'\'
					 property_name = \'event\'
			 		 sweep_set_id = \''.$set->id.'\'
					 onclick = \'postSwitch(this, \"sweep_rm.mhtml\");\'
					 id = \'event_'.$event->id.'\'
				>'.$event->abbr.'</span>';
			}
		}
	}

	$reply =~ s/\t//g;
	$reply =~ s/\n//g;

	$m->print('{
		"error"   : false,
		"message" : "'.$msg.'",
		"destroy" : "'.$destroy.'",
		"reply"   : "'.$reply.'"
	}');

	$m->abort();

</%init>
