<%args>
	$person
	$tourn
	$tourn_settings
	$perms
</%args>
<%init>

	$m->abort if $perms->{"by_event"} || $perms->{"checker"};

	my $dbh = Tab::DBI->db_Main();
	my $sth = $dbh->prepare("
		select
			permission.id, permission.tag, permission.details,
			person.id person, person.email, person.first, person.last, person.middle,
			event.id event, event.abbr event_abbr, event.name event_name,
			category.id category, category.abbr category_abbr, category.name category_name
		from (permission, person)
			left join event on event.id = permission.event
			left join category on category.id = permission.category
		where permission.tourn = ?
			and permission.person = person.id
		group by permission.id
	");

	my %admins = ();
	$sth->execute($tourn->id);
	my $results = $sth->fetchall_hash();

	my $wipe_sth = $dbh->prepare("
		update permission set details = NULL where id = ?
	");

	foreach my $result (@{$results}) {

		unless ($admins{$result->{person}}{"first"}) {
			$admins{$result->{person}}{"first"}  = $result->{first};
			$admins{$result->{person}}{"middle"} = $result->{middle};
			$admins{$result->{person}}{"last"}   = $result->{last};
			$admins{$result->{person}}{"email"}  = $result->{email};
		}

		if ($result->{"tag"} eq "contact") {
			$admins{$result->{person}}{"contact"} = 1;
		} elsif ($result->{"event"}) {
			$admins{$result->{person}}{"event"}{$result->{event}} = $result->{tag};
		} elsif ($result->{'category'}) {
			$admins{$result->{person}}{"category"}{$result->{category}} = $result->{tag};
		} else {
			$admins{$result->{person}}{"tag"} = $result->{'tag'};
		}
	}

	foreach my $id (keys %admins) {
		if ($admins{$id}{'contact'}) {
			$admins{$id}{'sort'} = 1;
		} elsif ($admins{$id}{'tag'} eq "owner") {
			$admins{$id}{'sort'} = 2;
		} elsif ($admins{$id}{'tag'} eq "tabber") {
			$admins{$id}{'sort'} = 3;
		} elsif ($admins{$id}{'tag'} eq "checker") {
			$admins{$id}{'sort'} = 4;
		} elsif ($admins{$id}{'category'}) {
			my @keys = sort keys %{$admins{$id}{"category"}};
			$admins{$id}{'sort'} = $keys[0];
		} elsif ($admins{$id}{'event'}) {
			my @keys = sort keys %{$admins{$id}{"event"}};
			$admins{$id}{'sort'} = $keys[0];
		} else {
			delete $admins{$id};
		}
	}

	# These will check against permissions to limit what I can grant
	my @categories = $m->comp('/funclib/tourn_categories.mas',
		tourn => $tourn,
		perms => $perms
	);

	my @events = $m->comp('/funclib/tourn_events.mas',
		tourn => $tourn,
		perms => $perms
	);

	my $warning;

	my %events;
	my %categories;
	my %types;

	$sth = $dbh->prepare("
		select
			event.id, event.abbr, event.name, event.type,
			category.id, category.abbr
		from event, category
			where event.tourn = ?
			and event.category = category.id
	");

	$sth->execute($tourn->id);

	while (
		my (
			$id, $abbr, $name, $type,
			$cat_id, $cat_abbr
		) = $sth->fetchrow_array()
	) {
		$events{$id}{"name"} = $name;
		$events{$id}{"abbr"} = $abbr;
		$events{$id}{"type"} = $type;
		$types{$type}++;
		$categories{$cat_id}{"abbr"} = $cat_abbr;
	}

</%init>

	<script type="text/javascript">

		function checkPermLimits() {

			$("#categoryPicker").removeClass('hidden');
			$("#eventPicker").removeClass('hidden');
			$("#catEvents").addClass('hidden');

			$("#category_id").prop("disabled", false);
			$("#event_id").prop("disabled", false);

			if ($('#permLevel').val() === 'owner') {
				$("#categoryPicker").addClass('hidden');
				$("#eventPicker").addClass('hidden');
				$("#category_id").prop("disabled", true);
				$("#event_id").prop("disabled", true);
			}

			if ($('#category_id').val()) {

				const catName = $('#category_id').find('option:selected').text();
				$('#catEventName').text(catName);

				$("#eventPicker").addClass('hidden');
				$("#catEvents").removeClass('hidden');
				$("#event_id").prop("disabled", true);
				$("#owner").prop("disabled", true);
				fixVisual();
				return;
			}

			if ($('#event_id').val()) {
				$("#categoryPicker").addClass('hidden');
				$("#catEvents").addClass('hidden');
				$("#category_id").prop("disabled", true);
				$("#owner").prop("disabled", true);
			}

			fixVisual();
		}

		$(document).ready(function() {
			checkPermLimits();
		});

    </script>

	<div class="main">

		<h3><% $tourn->name %></h3>

		<& "tabbar.mas",
			tourn          => $tourn,
			tourn_settings => $tourn_settings,
			whoami         => "access"
		&>

%		if ($warning) {
			<p class="warning">
				<% $warning %>
			</p>
%		}

		<div class="full flexrow">
			<span class="fourfifths">
				<h4>Access</h4>
			</span>

			<span
				id    = "access_buttonarea"
				class = "fifth rightalign marno"
			></span>
		</div>

		<&
			"/funclib/tablesorter.mas",
			table => "access"
		&>

		<table id="access">

%			if (keys %admins) {
				<thead>
					<tr class="yellowrow">
						<th class="smallish limithalf">
							Person
						</th>

						<th
							title = "Accounts marked as contact will have their email on the tourn website"
							class = "smaller"
						>Contact</th>

						<th class="smallish padleft padright">
							Tournwide
						</th>

						<th class="smallish nowrap">
							Judge Category Access
						</th>

						<th class="smallish">
							Event Level Access
						</th>

						<th class="smaller">
						</th>
					</tr>
				</thead>

				<tbody>
<%perl>
					foreach my $id (
						sort {
							$admins{$a}{"sort"} <=> $admins{$b}{"sort"}
						} keys %admins
					) {
</%perl>
						<tr id="<% $id %>" class="admins">

							<td
								title = "<% $admins{$id}{"email"} %>"
								class = "limit smallish"
							>
								<% $admins{$id}{"first"} %>
								<% $admins{$id}{"middle"} %>
								<% $admins{$id}{"last"} %>

								<span class="full padtopless nospace smaller">
									<% $admins{$id}{"email"} %>
								</span>
							</td>

							<label for="<% $id %>_contact">
								<td class="centeralign nospace">
									<span class="hidden">
										<% $admins{$id}{"contact"} ? '1' : "" %>
									</span>
<%perl>
									if ($person->site_admin
										|| $admins{$person->id}{"tag"} eq "owner"
										|| ($id == $person->id && $admins{$person->id}{"contact"})
									) {
</%perl>
										<label for="<% $id %>_contact">
											<span class="padvertless full marno hover">
												<input
													type         = "checkbox"
													id           = "<% $id %>_contact"
													access_level = "contact"
													post_method  = "put"
													value        = "1"
													onChange     = "postSwitch(
														this,
														'<% $Tab::indexcards_url %>/tab/<% $tourn->id %>/access/<% $id %>'
													);"
													<% $admins{$id}{"contact"} ? 'checked="checked"' : "" %>
												>
											</span>
										</label>
%									} else {
										<span class="padvertless full marno centeralign greentext
												<% $admins{$id}{"contact"}
													? 'fa fa-check'
													: ""
												%>">
										</span>
%									}
								</td>
							</label>

							<td class="centeralign smallish">
								<span class="hidden">  <!-- for sorting -->
									<% $admins{$id}{"sort"} %>
								</span>
<%perl>
								if (
									$admins{$id}{tag} eq "owner"
									&& (not defined $perms->{owner})
									&& (not defined $person->site_admin)
								) {
</%perl>
									<span class="centeralign semibold bluetext">
										Owner
									</span>

%								} else {

									<select
										name         = "level"
										id           = "level_<% $id %>"
										access_level = "choose"
										post_method  = "put"
										onChange     = "postSwitch(
											this,
											'<% $Tab::indexcards_url %>/tab/<% $tourn->id %>/access/<% $id %>'
										);"
									>
										<option
											value="none"
											<% $admins{$id}{"tag"} eq "by_event" ? "selected" : "" %>
										>None</option>

%										if ($perms->{owner} || $person->site_admin) {
											<option
												value="owner"
												<% $admins{$id}{"tag"} eq "owner" ? "selected" : "" %>
											>Owner</option>
%										}

										<option
											value="tabber"
											<% $admins{$id}{"tag"} eq "tabber" ? "selected" : "" %>
										>Tabber</option>

										<option
											value="checker"
											<% $admins{$id}{"tag"} eq "checker" ? "selected" : "" %>
										>Checker</option>
									</select>
%								}
							</td>

							<td class="leftalign nospace smallish">
<%perl>
								my $notfirst;

								foreach my $category_id (
									sort { $categories{$a}{"abbr"} cmp $categories{$b}{"abbr"} }
									keys %{$admins{$id}{"category"}}
								) {
</%perl>
									<div
										class = "full nospace <% $notfirst++ ? "ltbordertop" : "" %>"
										id    = "category_<% $category_id %>_<% $id %>"
									>
										<span class="twofifths marno leftalign padvert padleft">
											<% $categories{$category_id}{"abbr"} %>
										</span>
										<span
											id          = "category_<% $category_id %>_<% $id %>_role"
											class       = "twofifths nospace padvertless padleftless centeralign hover ucfirst"
											title       = "Click to change access level"
											post_method = "put"
											onClick     = "postSwitch(
												this,
												'<% $Tab::indexcards_url %>/tab/<% $tourn->id %>/category/<% $category_id %>/access/<% $id %>'
											);"
										>
											<% ucfirst($admins{$id}{'category'}{$category_id}) %>
										</span>
										<span class="sixth centeralign yellowhover nospace">
											<span
												class       = "full nospace smaller fa fa-trash redtext"
												title       = "Click to remove access to this category"
												post_method = "delete"
												onClick     = "postSwitch(
													this,
													'<% $Tab::indexcards_url %>/tab/<% $tourn->id %>/category/<% $category_id %>/access/<% $id %>'
												);"
											>
											</span>
										</span>
									</div>
%								}
							</td>

							<td class="leftalign nospace flexrow wrap smallish" id="events_<% $id %>">
<%perl>
								undef $notfirst;

								foreach my $event_id (
									sort {$events{$a}{"abbr"} cmp $events{$b}{"abbr"}}
									keys %{$admins{$id}{"event"}}
								) {
</%perl>
									<div
										class = "half nospace <% $notfirst++ ? "ltbordertop" : "" %>"
										id    = "event_<% $event_id %>_<% $id %>"
									>
										<span class="twofifths marno padvertless padleft leftalign">
											<% $events{$event_id}{"abbr"} %>
										</span>

										<span
											id          = "event_<% $event_id %>_<% $id %>_role"
											class       = "twofifths padvertless leftalign hover centeralign ucfirst"
											title       = "Click to toggle event access level"
											post_method = "put"
											onClick     = "postSwitch(
												this,
												'<% $Tab::indexcards_url %>/tab/<% $tourn->id %>/event/<% $event_id %>/access/<% $id %>'
											);"
										>
											<% ucfirst($admins{$id}{'event'}{$event_id}) %>
										</span>

										<span class="sixth centeralign yellowhover">
											<span
												class       = "full padtopless nospace smaller fa fa-trash redtext centeralign"
												title       = "Click to remove access to this event"
												post_method = "delete"
												onClick     = "postSwitch(
													this,
													'<% $Tab::indexcards_url %>/tab/<% $tourn->id %>/event/<% $event_id %>/access/<% $id %>'
												);"
											>
											</span>
										</span>
									</div>
%								}
							</td>

							<td class="centeralign nospace smallish">
<%perl>
								unless (
									$admins{$id}{"tag"} eq "owner"
									&& (not defined $admins{$person->id}{"owner"})
									&& (not defined $person->site_admin)
								) {
</%perl>
									<a
										target_id   = "<% $id %>"
										personId    = "<% $id %>"
										post_method = "delete"
										class       = "padless redtext buttonwhite fa fa-trash"
										onClick     = "postSwitch(
											this,
											'<% $Tab::indexcards_url %>/tab/<% $tourn->id %>/access/<% $id %>'
										);"
									></a>
%								}
							</td>
						</tr>
%					}
				</tbody>
%			}
		</table>
	</div>

<%perl>

	$sth = $dbh->prepare("
		select
			person.id, person.email, person.first, person.last, person.middle,
			count(distinct permission.tourn)
		from person, permission, permission mine
		where person.id = permission.person
			and permission.tourn = mine.tourn
			and mine.person = ?
			and mine.tag in ('owner', 'tabber')
		group by person.id
	");

	$sth->execute($person->id);

	my %peeps;

	while (
		my (
			$person_id, $email, $first, $last, $middle, $count
		) = $sth->fetchrow_array()
	) {
		$peeps{$person_id}{"first"}  = $first;
		$peeps{$person_id}{"middle"} = $middle;
		$peeps{$person_id}{"last"}   = $last;
		$peeps{$person_id}{"email"}  = $email;
		$peeps{$person_id}{"count"}  = $count;
	}

</%perl>

	<div class="menu">
		<div class="sidenote">
			<h4>Add Access</h4>

			<form
				action = "access_add.mhtml"
				method = "post"
			>
				<input
					type  = "hidden"
					name  = "tourn_id"
					value = "<% $tourn %>"
				>

				<div class="centeralign row">
					<span class="nineteen leftalign">
						<select
							id    = "new_person"
							name  = "person_id"
						>
							<option value="">Choose Person...</option>
<%perl>
						foreach my $peep_id (
							sort {
								$peeps{$b}{"count"} <=> $peeps{$a}{"count"}
								|| $peeps{$b}{"last"} cmp $peeps{$a}{"last"}
							} keys %peeps
						) {
</%perl>
							<option
								value="<% $peep_id %>"
							><% $peeps{$peep_id}{"first"}." ".$peeps{$peep_id}{"last"}.": ".$peeps{$peep_id}{"email"} %></option>
%						}
						</select>
					</span>
				</div>

				<div class="row centeralign">
					<span class="ninetenths leftalign">
						<input
							type        = "text"
							name        = "email"
							placeholder = "Or, search by email address"
						>
					</span>
				</div>

				<div id="categoryLevel" class="centeralign row">
					<span class="ninetenths leftalign flexrow">
						<span class="quarter semibold bluetext padleft">
							Level
						</span>

						<span class="threequarters leftalign">
							<select
								id       = "permLevel"
								name     = "tag"
								class    = "fixedmost"
								onChange = "checkPermLimits();"
							>
								<option value="checker">Checker</option>
								<option value="tabber">Tabber</option>
%								if ($perms->{owner} || $person->site_admin) {
									<option id="owner" value="owner">Owner</option>
%								}
							</select>
						</span>
					</span>
				</div>

				<div id="categoryPicker" class="centeralign row">
					<span class="ninetenths leftalign flexrow">
						<span class="quarter semibold bluetext padleft">
							Judges
						</span>

						<span class="threequarters leftalign">
							<select
								class    = "fixedmost"
								id       = "category_id"
								name     = "category_id"
								onChange = "checkPermLimits();"
							>
								<option value="">All Categories</option>
%								foreach my $category (@categories) {
									<option
										value="<% $category->id %>"
									><% $category->abbr %></option>
%								}
							</select>
						</span>
					</span>
				</div>

				<div id="catEvents" class="flexrow row">
					<label for="with_events">
						<span class="fourfifths leftalign">
							Include all events in <span id='catEventName' class="inline">CAT?</span>
						</span>

						<span class="fifth centeralign nospace">
							<input
								type  = "checkbox"
								id    = "with_events"
								name  = "with_events"
								value = "1"
							>
						</span>
					</label>
				</div>

				<div id="eventPicker" class="centeralign row">
					<span class="ninetenths leftalign flexrow">
						<span class="quarter semibold bluetext padleft">
							Events
						</span>

						<span class="threequarters nospace leftalign">
							<select
								class    = "fixedmost"
								id       = "event_id"
								name     = "event_id"
								onChange = "checkPermLimits();"
							>
								<option value="">All Events</option>
%								foreach my $event (@events) {
									<option
										value="<% $event->id %>"
									><% $event->abbr %></option>
%								}
							</select>
						</span>
					</span>
				</div>

				<div class="libl rightalign padvertless">
					<span class="half centeralign nospace true">
						<input
							type  = "submit"
							class = "thin"
							value = "Grant Access"
						>
					</span>
				</div>
			</form>
		</div>

		<div class="sidenote">
			<h4 title="These users will get data backups sent to them from all events and divisions">
				Auto backups
			</h4>
<%perl>
				my $follower_ids = $tourn_settings->{"backup_followers"};
				my @followers;

				eval {
					foreach my $id (@{$follower_ids}) {
						next unless $id;
						my $follower = Tab::Person->retrieve($id);
						push @followers, $follower;
					}
				};

				foreach my $follower (@followers) {
					next unless $follower;
</%perl>
					<div class="flexrow row" id="backups_<% $follower->id %>">
						<span class="fourfifths nowrap padleft" title="<% $follower->first." ".$follower->last %>">
							<% $follower->email %>
						</span>

						<span class="fifth centeralign padvertless">
							<a
								class       = "redtext buttonwhite fa fa-trash smallish marno"
								post_method = "delete"
								target      = "backups_<% $follower->id %>"
								on_success  = "destroy"
								onClick     = "postSwitch(this,
									'<% $Tab::indexcards_url %>/tab/<% $tourn->id %>/backupAccess/<% $follower->id %>'
								);"
							>
							</a>
						</span>
					</div>
%				}

				<form
					action = "backup_add.mhtml"
					method = "post"
				>
					<div class="liblrow flexrow">
						<span class="fourfifths padleft">
							<input
								type        = "text"
								name        = "username"
								placeholder = "Add backup account's email"
							>
						</span>
						<span class="fifth centeralign padvertno">
							<input
								type  = "submit"
								class = "thin"
								value = "Add"
							>
						</span>
					</div>
				</form>
			</div>

			<div class="sidenote">
				<h4>Permissions</h4>

				<p class="smaller">
					A tournament owner can access anything in a tournament.
					Reserve this level for the tournament director(s).
				</p>

				<p class="smaller">
					The contact email and name will be displayed on the public
					site. They cannot access tab without additional
					permissions.
				</p>

				<p class="smaller">
					A tabber has access to everything except changing ownership
					of the tournament webname, removing an owner's permissions,
					changing the official contact, or deleting change logs.
				</p>

				<p class="smaller">
					A checker has access to activation &amp; deactivation
					screens for judges and entries; the manual ballot entry
					screens; and the round start/check attendance screens &amp;
					dashboards.
				</p>

				<p class="smaller">
					Tabber access to a judge category only grants access the
					judges, judge pools, and standby pools in that judge category.
					It does not include tab access to the category's events.

					Checker-level judge category permissions give access that
					category's judge activation screen.
				</p>

				<p class="smaller">
					Tabber permissions for an event grants access to settings,
					entries, registrations, pairings, and results in those
					event(s).  Event-only tabbers cannot alter judges or judge
					pools not tied to their own event without access to the
					parent judge category.

					Checker-level event permissions grants access to the entry
					activation screens, the manual ballot entry and the
					attendance dashboards only for those event(s);

				</p>
			</div>
		</div>
	</div>

