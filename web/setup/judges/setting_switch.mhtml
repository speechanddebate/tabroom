<%args>
	$person
	$tourn
	$category_id      => undef
	$setting_name   => undef
	$property_name  => undef
	$property_value => 0
</%args>
<%init>

	$m->clear_buffer();
	$r->content_type('application/json');

	unless ($category_id) {
		$m->print('{ "error": true, "message": "No category ID sent"}');
		$m->abort();
	}

	unless ($property_name || $setting_name) {
		$m->print('{ "error": true, "message": "No property to change sent"}');
		$m->abort();
	}

	my $category = Tab::Category->retrieve($category_id);

	unless ($category) {
		$m->print('{ "error": true, "message": "No category found for ID '.$category_id.'"}');
		$m->abort();
	}

	my $message;

	if ($setting_name) {
		$category->setting($setting_name, $property_value);
		$message = "Setting $setting_name changed to $property_value";
	} elsif ($property_name) {
		$category->$property_name($property_value);
		$category->update();
		$message = "Property $property_name changed to $property_value";
	}

	if ($setting_name eq "self_ratings" && $property_value == 1) {
		$category->setting("coach_ratings", 1);
	}

    my %response = (
		error   => 0,
		message => $message
    );

	if ($setting_name eq "private_signup_link") {

		if ($property_value == 1) {
			# lucky number
			my $key = $m->comp("/funclib/generate_randomstring.mas", length => 13);
			$category->setting("signup_key", $key);
			$response{"reply"} = $Tab::url_prefix.'/index/tourn/judge_signups.mhtml?cid='.$category->id.'&key='.$key;
			$response{"reply_target"} = "private_link";
		} else {
			$category->setting("signup_key", 0);
			$response{"reply"} = '';
			$response{"reply_target"} = "private_link";
		}
	}


	my $now = DateTime->now();

	$m->comp("/funclib/log.mas",
		type        => 'tabbing',
		category       => $category->id,
		tourn       => $tourn->id,
		person      => $person->id,
		description => $message
	);

    $m->print(JSON::encode_json(\%response));
	$m->abort();

</%init>
