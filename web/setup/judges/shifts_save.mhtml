<%args>
	$tourn
	$category_id
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my $category = Tab::Category->retrieve($category_id);
	my $err;

	Tab::Strike->set_sql(update_shift => "
		update strike
			set start = ?, end  = ?
			where shift = ?
	");

	my $fixed_start;

	my @days;
	my $weekend;
	my $diff_month;

	if ($category->setting("weekend")) {

		$weekend = Tab::Weekend->retrieve($category->setting('weekend'));

		@days = $m->comp("/funclib/tourn_days.mas",
					tourn   => $tourn,
					weekend => $weekend
				);
	} else {

		@days = $m->comp("/funclib/tourn_days.mas",
			tourn => $tourn
		);

		my $already = $days[0]->month;
		foreach my $day (@days) {
			$diff_month++ if $already ne $day->month;
		}
	}

	if (scalar @days == 1) {
		$fixed_start = Tab::pickerdate($days[0]);
	}


	foreach my $bin ($category->shifts) {

		$ARGS{$bin->id."_fine"} = 0 unless $ARGS{$bin->id."_fine"};

		if (scalar @days == 1) {
			$ARGS{$bin->id."_start_day"} = $fixed_start;
			$ARGS{$bin->id."_end_day"} = $fixed_start;
		}

		my $start_dt = eval {
			return Tab::dtme($ARGS{$bin->id."_start_day"},$ARGS{$bin->id."_start"}, $tz);
		};

		my $end_dt = eval {
			return Tab::dtme($ARGS{$bin->id."_end_day"},$ARGS{$bin->id."_end"}, $tz);
		};

		unless ($start_dt && $end_dt && $start_dt->year && $end_dt->year) {
			$err .= "Start and end times invalid for ".$ARGS{$bin->id."_name"};
		} else {

			if ($start_dt > $end_dt) {

				$err .= "You had the timeblock ".$ARGS{$bin->id."_name"}." starting after it ended.  I'm not big on logical impossibilities.  Try again. <br />"

			} elsif ($start_dt == $end_dt) {
				$err .= "You had the timeblock ".$ARGS{$bin->id."_name"}." starting at the same time as it ended. <br />"
			} else {


				$bin->name($ARGS{$bin->id."_name"});
				$bin->type($ARGS{$bin->id."_type"});
				$bin->fine($ARGS{$bin->id."_fine"});
				$bin->start($start_dt);
				$bin->end($end_dt);
				$bin->update;

				Tab::Strike->sql_update_shift->execute(
					DateTime::Format::MySQL->format_datetime($start_dt),
					DateTime::Format::MySQL->format_datetime($end_dt),
					$bin->id
				);

			}
		}
	}

	if ($ARGS{"new_name"}) {

		if (scalar @days == 1) {
			$ARGS{"new_start_day"} = $fixed_start;
			$ARGS{"new_end_day"} = $fixed_start;
		}

		my $start_dt = eval {
			return Tab::dtme($ARGS{"new_start_day"},$ARGS{"new_start"}, $tz);
		};

		my $end_dt = eval {
			Tab::dtme($ARGS{"new_end_day"},$ARGS{"new_end"}, $tz);
		};

		unless ($start_dt && $end_dt) {

			$err .= "Invalid dates sent.  Please be sure the dates and times are properly formatted.  Use the date & time pickers to be sure";

		} elsif ($start_dt > $end_dt) {

			$err .= "You had the shift ".$ARGS{"new_name"}." starting after it ended.  I'm not big on logical impossibilities.  Try again. <br />"

		} elsif ($start_dt == $end_dt) {

			$err .= "You had the timeblock ".$ARGS{"new_name"}." starting at the same time as it ended. <br />"

		} else {

			$ARGS{"new_fine"} = 0 unless $ARGS{"new_fine"};

			my $bin = Tab::JudgeShift->create({
				category => $category_id,
				fine     => $ARGS{"new_fine"},
				name     => $ARGS{"new_name"},
				type     => $ARGS{"new_type"},
				start    => $start_dt,
				end      => $end_dt
			});
		}
	}

	my $msg = "Judge shift saved";

	$m->redirect("/setup/judges/shifts.mhtml?category_id=$category_id&err=$err&msg=$msg");

</%init>
