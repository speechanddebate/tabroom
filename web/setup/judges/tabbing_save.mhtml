<%args>
	$tourn
	$person
	$category_id
</%args>
<%init>

	my $category = Tab::Category->retrieve($category_id);

	unless ($category) {
		$m->abort("No category found with ID $category_id");
	}

	my %existing = $category->all_settings();

	my $changes;

	foreach my $tag (
		"no_back_to_back",
		"ballot_entry_school_codes",
		"judge_event_twice",
		"override_jpools",
		"track_diversity",
		"show_diversity",
		"judge_randomize",
		"audit_method",
		"ballot_entry_codes",
		"ballot_entry_names",
		"ballot_entry_first_names",
		"ballot_entry_titles",
		"ballot_times",
		"ballot_region_codes",
		"ballot_speakerorders",
		"ballot_school_codes",
		"ballot_school_names",
		"ballot_judge_phones",
		"ballot_signature",
		"training_label",
		"training_room",
		"training_time",
		"show_training",
	) {
		my $value = $ARGS{$tag};
		$value = 0 unless $value;
		$existing{$tag} = 0 unless $existing{$tag};

		if ($value ne $existing{$tag}) {
			$changes .= $tag." changed to ".$value." <br />";
			eval{ $category->setting($tag, $value); };
		}
	}

	foreach my $tag (
		"preference",
		"default_mjp",
		"mutuality",
		"panel_mutuality",
		"round_burn_avoid",
		"diverse_judge_weight",
		"mjp_prefer_hireds",
		"mjp_meatspace",
		"sucktastic_judge_weight"
	) {
		my $value = $ARGS{$tag};

		if ($tag ne "mjp_prefer_hireds") {
			$value = -1 unless $value > 0;
		}

		if ($value ne $existing{$tag}) {
			$changes .= $tag." changed to ".$value." <br />";
			eval{ $category->setting($tag, $value); };
		}
	}

	if ($changes) {

		my $now = DateTime->now();

		$m->comp("/funclib/log.mas",
			type        => 'tabbing',
			tourn       => $category->tourn->id,
			category    => $category->id,
			person      => $person->id,
			description => $changes
		);
	}

	my $msg = "Pairing and tabbing settings saved";
	$m->redirect("tabbing.mhtml?category_id=$category_id&msg=$msg");

</%init>
