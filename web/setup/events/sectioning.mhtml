<%args>
	$person
	$person_settings
	$tourn
	$perms
	$tourn_settings
	$event_id => undef
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

    my ($event, $event_settings, $events) = $m->comp('perms.mas',
        tourn    => $tourn,
        perms    => $perms,
        event_id => $event_id
    );

	my $category = $event->category;

	unless ($category) {
		my $err = "Your event is not assigned to a judge category.";
		$err .= "You must do that before going further";
		$m->redirect("edit.mhtml?err=$err&event=$event_id");
	}

	my %category_settings = $category->all_settings();
	my $districts = $tourn_settings->{"nsda_district"};

	undef $districts if $person->site_admin;
	undef $districts if $person_settings->{"nsda_admin"};

	my $max_section = 30 if $districts && $event->type eq "congress";
	$max_section = 8 if $districts && $event->type eq "speech";
	$max_section = 999 unless $max_section;

</%init>

    <script type="text/javascript">
		function showMe (it) {
			$("."+it).toggleClass("hidden");
		}
    </script>

    <div class="main">

        <h2><% $event->name %></h2>

        <&
			"tabbar.mas",
			person          => $person,
			person_settings => $person_settings,
			districts       => $districts,
			event           => $event,
			tourn           => $tourn,
			tourn_settings  => $tourn_settings,
			whoami          => "sectioning"
		&>

		<form action="sectioning_save.mhtml" method="post">

		<input
			type  = "hidden"
			name  = "event_id"
			value = "<% $event->id %>"
		>

		<div class="splitpage">

			<span class="pagehalf">

%			if ($event->type eq "debate" && $tourn_settings->{'nsda_district'}) {

				<div class="flexrow" style="padding-bottom: 2px;">
					<span class="half">
						<h5 class="bluetext semibold padvertless marno">
							Debate Method
						</h5>
					</span>
					<span class="rightalign half semibold redtext bigger padright">
						Choose One
					</span>
				</div>

				<div class="row flexrow hover">
					<label for="district_mode_correct">
						<span class="fourfifths semibold bluetext padleft">
							Single-Elimination Bracket
						</span>
						<span class="fifth centeralign">
							<input
								type     = "radio"
								name     = "district_mode"
								id       = "district_mode_correct"
								value    = "single"
								tabindex = -1
								<% $event_settings->{"district_mode"} eq "single" ? "checked" : "" %>
							>
						</span>
					</label>
				</div>

				<div class="row flexrow hover">
					<label for="district_mode_incorrect">
						<span class="fourfifths semibold bluetext padleft">
							Double-Elimination Bracket
						</span>
						<span class="fifth centeralign">
							<input
								type     = "radio"
								name     = "district_mode"
								id       = "district_mode_incorrect"
								value    = "double"
								tabindex = -1
								<% $event_settings->{"district_mode"} eq "double" ? "checked" : "" %>
							>
						</span>
					</label>
				</div>

%				unless ($event->type eq "mock_trial") {
					<div class="row flexrow hover">
						<label for="district_mode_tolerable">
							<span class="fourfifths semibold bluetext padleft">
								Round-Robin Format
							</span>
							<span class="fifth centeralign">
								<input
									type     = "radio"
									name     = "district_mode"
									id       = "district_mode_tolerable"
									value    = "robin"
									tabindex = -1
									<% $event_settings->{"district_mode"} eq "robin" ? "checked" : "" %>
								>
							</span>
						</label>
					</div>
%				}

				<div
					class = "flexrow wrap padtop"
					style = "padding-bottom: 11px;"
				>
					<p>
						Single-Elimination is a simple single-elimination
						bracket after prelims conclude. One loss eliminates an
						entry from the tournament.
					</p>

					<p>
						Double-elimination requires two losses to be eliminated
						after prelims, giving defeated entries a second chance,
						but requiring a substantially longer schedule.
					</p>

					<p>
						Round robins require each entry to debate every other
						entry once; They require either one fewer debate than
						the number of entries (if even) or equal to the number
						(if odd).  Best for small events.
					</p>
				</div>

%				unless ($event_settings->{"district_mode"} eq "robin") {

					<div class="row flexrow hover">
						<span class="twofifths semibold bluetext padleft">
							Advance to Elims
						</span>

						<span class="fifth rightalign italic padright">
							Entries with
						</span>

						<span class="twofifths padright">
							<select name="district_advance">
								<option value=""> </option>

								<option
									value="downone"
									<% $event_settings->{"district_advance"} eq "downone" ? "selected" : "" %>
								>Zero or one loss</option>

								<option
									value="winning"
									<% $event_settings->{"district_advance"} eq "winning" ? "selected" : "" %>
								>Winning records (&lt; 50%)</option>
							</select>
						</span>
					</div>

%				}
%			}

%#			I feel great shame for this:
%			if ($event->type eq "speech") {
				<h5 class="button">
					Sectioning
				</h5>
%			} elsif ($event->type eq "congress") {
				<h5 class="button">
					Chambers
				</h5>
%			} elsif ($event->type eq "wudc") {
				<h5 class="button">
					Sectioning
				</h5>
%			} else {
				<h5 class="button">
					Pairing
				</h5>
%			}

%			if ($event->type eq "speech" || $event->type eq "congress") {

				<div class="row flexrow">
					<span class="half">
						Section labels
					</span>
					<span class="half rightalign padright">
						<select name = "panel_labels">
							<option value="numbers">Numbers</option>

							<option
								value="letters"
								<% $event_settings->{"panel_labels"} eq "letters" ? "selected" : "" %>
							>Letters</option>

						</select>
					</span>
				</div>
%			}

<%perl>
			if ($event->type eq "speech" || $event->type eq "congress") {

				unless ($event_settings->{"schem_orientation"}) {
					if ($event_settings->{'code_length'} eq "short") {
						$event_settings->{"schem_orientation"} = "horizontal";
					} else {
						$event_settings->{"schem_orientation"} = "vertical";
					}
				}
</%perl>
				<div class="row flexrow">

					<span class="half">
						Schematic Orientation
					</span>

					<span class="half rightalign padright">

						<select
							name        = "schem_orientation"
							placeholder = "Please select"
						>
							<option value=""></option>
							<option value="horizontal"
								<%
									$event_settings->{"schem_orientation"} eq "horizontal"
									? 'selected="selected"' : ""
								%>
							>Horizontal</option>

							<option value="vertical"
								<%
									$event_settings->{"schem_orientation"} eq "vertical"
									? 'selected="selected"' : ""
								%>
							>Vertical</option>

						</select>
					</span>
				</div>
%			}

%			if ($event->type eq "speech" || $event->type eq "congress") {

				<div class="row flexrow">

					<span class="half">
						List entries by
					</span>

					<span class="half rightalign padright">
						<select
							name  = "schem_designation"
						>
							<option value="codes"
								<%
									$event_settings->{"schem_designation"} eq "codes"
									? 'selected="selected"' : "" %>
							>Codes</option>

							<option value="names"
								<% $event_settings->{"schem_designation"} eq "names"
								? 'selected="selected"' : "" %>
							>Names</option>

							<option value="both"
								<% $event_settings->{"schem_designation"} eq "both"
									? 'selected="selected"' : "" %>
							>Both</option>

						</select>
					</span>
				</div>

%			}

%			if ($event->type eq "wudc") {

				<label for="avoid_school_hits">
					<div class="hover row flexrow">
						<span class="twothird wrap">
							Avoid pairing same-school entries
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "avoid_school_hits",
								value   => $event_settings->{"avoid_school_hits"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>
<%perl>
 			}

			if ($event->type ne "congress"
				&& $event->type ne "speech"
				&& $event->type ne "wudc"
			) {
</%perl>

%				unless ($districts) {

					<div class="norr flexkids nospace <% $event_settings->{"round_robin"} ? "hidden" : "" %>">
%						my $seed_presets = $event_settings->{"seed_presets"};

						<div class="row flexrow">
							<span class="third padleft">
								Preset seeding
							</span>

							<span class="twothirds rightalign">
								<select name="seed_presets">
									<option value="0" <% $seed_presets ? "" : "selected" %> >
										Randomly (None)
									</option>

									<option value="all" <% $seed_presets eq "all" ? "selected" : "" %> >
										Hit All Seed Categories
									</option>

									<option value="inverse" <% $seed_presets eq "inverse" ? "selected" : "" %> >
										Hit Inverse Seeds (1 hits 2&amp;3; 3 hits 1&amp;4)
									</option>

									<option value="balance" <% $seed_presets eq "balance" ? "selected" : "" %> >
										Balance seeds of presets to same total
									</option>

									<option value="protect" <% $seed_presets eq "protect" ? "selected" : "" %> >
										Power Protect (1 hits 6, 2 hits 5)
									</option>

%									if ($event->type eq "wsdc") {
										<option value="wsdc" <% $seed_presets eq "wsdc" ? "selected" : "" %> >
											WSDC 8 Prelim Balancing
										</option>
%									}
								</select>
							</span>
						</div>
					</div>

%					unless ($event->type eq "mock_trial") {
						<label for="round_robin">
							<div class="hover row flexrow">
								<span class="fivesixths padleft">
									Round Robin format
								</span>

								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "round_robin",
										value   => $event_settings->{"round_robin"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</div>
						</label>

						<label for="no_side_constraints">
							<div class="hover row flexrow">
								<span class="fivesixths padleft">
									Flip for sides in all rounds
								</span>

								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag      => "no_side_constraints",
										value    => $event_settings->{"no_side_constraints"},
										target   => $event,
										function => "checkFlip();",
										smaller  => 1,
									&>
								</span>
							</div>
						</label>
%					}

					<label for="school_debates_self">
						<div class="hover row flexrow">
							<span class="fivesixths padleft">
								Allow entries to compete against their own school
							</span>

							<span class="sixth centeralign">
								<& "/funclib/bool_switch.mas",
									tag     => "school_debates_self",
									value   => $event_settings->{"school_debates_self"},
									target  => $event,
									smaller => 1,
								&>
							</span>
						</div>
					</label>

%					unless ($event->type eq "mock_trial") {
						<label for="hybrids_can_hit">
							<div class="hover row flexrow">
								<span class="fivesixths padleft">
									Hybrids may debate hybrid's partner school
								</span>

								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "hybrids_can_hit",
										value   => $event_settings->{"hybrids_can_hit"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</div>
						</label>
%					}

%					if ($tourn_settings->{"regions"}) {
						<label for="region_avoid">
							<div class="hover row flexrow">
								<span class="fivesixths padleft">
									Avoid in-region matchups in presets
								</span>
								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "region_avoid",
										value   => $event_settings->{"region_avoid"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</div>
						</label>

						<label for="region_constrain">
							<div class="hover row flexrow">
								<span class="fivesixths padleft">
									Treat region constraints as schools
								</span>
								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "region_constrain",
										value   => $event_settings->{"region_constrain"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</div>
						</label>
%					}

%					if ($event->type eq "wsdc") {

						<label for="wsdc_cap_repel">
							<div class="row flexrow hover">
								<span class="fivesixths padleft">
									Put CAP members into different sites
								</span>
								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "wsdc_cap_repel",
										value   => $event_settings->{"wsdc_cap_repel"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</div>
						</label>
%	 				}

%					unless ($event_settings->{"no_side_constraints"} || $event->type eq "mock_trial") {
						<label for="no_elim_sidelocks">
							<div
								class = "hover row flexrow"
								title = " All elim debates are flips, even if the debaters have met before (IPDA)"
							>
								<span class="fivesixths padleft">
									No sidelocks in elims
								</span>

								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "no_elim_sidelocks",
										value   => $event_settings->{"no_elim_sidelocks"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</div>
						</label>

						<label for="sidelock_elims">
							<div class="hover row flexrow"
								title="This function will not allow judges to change debates' sides on their online ballots.  It does not randomly assign sides."
							>
								<span class="fivesixths padleft">
									Side-lock all elims
								</span>

								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "sidelock_elims",
										value   => $event_settings->{"sidelock_elims"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</div>
						</label>
%					}

%					unless ($tourn_settings->{"mock_trial_registration"}) {

						<label for="double_elimination">
							<div class="hover row flexrow">
								<span class="fivesixths padleft">
									Use double-elimination in elim rounds
								</span>
								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "double_elimination",
										value   => $event_settings->{"double_elimination"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</div>
						</label>
%					}

					<div class="flexkids wrap flexrownospace norr <% $event_settings->{"round_robin"} ? "hidden" : "" %>">

						<h5 class="fixedheight">
							Powermatching
						</h5>

						<div class="row flexrow">
							<span class="third padleft">
								Powering Method
							</span>
							<span class="twothird rightalign">
								<select name="powermatch">
									<option
										value="sop"
										<% $event_settings->{"powermatch"} eq "sop" ? "selected" : "" %>
									>SOP (Seed + Opp Seed)</option>
%									unless ($districts) {
										<option
											value="seed"
											<% $event_settings->{"powermatch"} eq "seed" ? "selected" : "" %>
										>Seeds Only</option>
%									}

								</select>
							</span>
						</div>
					</div>

					<div class="flexkids wrap flexrownospace norr <% $event_settings->{"round_robin"} ? "hidden" : "" %>">
						<label for="bracket_by_ballots">
							<div class="hover row flexrow">
								<span class="fivesixths padleft">
									Powermatch by first tiebreak, not win/loss
								</span>
								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "bracket_by_ballots",
										value   => $event_settings->{"bracket_by_ballots"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</div>
						</label>

%						unless ($event->type eq "mock_trial") {
							<div class="hover row flexrow">
								<label for="snake_sides_huge_schools">
									<span class="fivesixths padleft">
										Don't put large schools on same side
									</span>
									<span class="sixth centeralign">
										<& "/funclib/bool_switch.mas",
											tag     => "snake_sides_huge_schools",
											value   => $event_settings->{"snake_sides_huge_schools"},
											target  => $event,
											smaller => 1,
										&>
									</span>
								</label>
							</div>
%						}

						<div class="hover row flexrow">
							<label for="bracket_rooms">
								<span class="fivesixths padleft">
									Assign rooms by brackets
								</span>
								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "bracket_rooms",
										value   => $event_settings->{"bracket_rooms"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</label>
						</div>

%						my $pullup_method = $event_settings->{"pullup_method"};

					   <div class="row flexrow">
							<span class="third padleft">
								Pullup method
							</span>
							<span class="twothird rightalign">
								<select name="pullup_method">
									<option
										value="sop"
										<% $pullup_method eq "sop" ? "selected" : "" %>
									>
										SOP: Worst opponent seed
									</option>
									<option
										value="oppwin"
										<% $pullup_method eq "oppwin" ? "selected" : "" %>
									>
										Worst opponent wins
									</option>
									<option
										value="middle"
										<% $pullup_method eq "middle" ? "selected" : "" %>
									>
										Pull from middle (Hand-tab holdover; not recommended)
									</option>
									<option
										value="highseed"
										<% $pullup_method eq "highseed" ? "selected" : "" %>
									>
										Best seed from bracket below
									</option>
									<option
										value="lowseed"
										<% $pullup_method eq "lowseed" ? "selected" : "" %>
									>
										Worst seed from bracket below
									</option>
								</select>
							</span>
					   </div>

					   <label for="pullup_repeat">
							<div class="hover row flexrow">
								<span class="fivesixths padleft">
									Allow repeat pullups (recommended with SOP)
								</span>
								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "pullup_repeat",
										value   => $event_settings->{"pullup_repeat"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</div>
					   </label>

					   <label for="pullup_minimize">
							<div class="hover row flexrow">
								<span class="fivesixths padleft">
									Break side locks to avoid pullups
								</span>
								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "pullup_minimize",
										value   => $event_settings->{"pullup_minimize"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</div>
					   </label>

					   <label for="prevent_hitting_pullup_twice">
							<div class="hover row flexrow">
								<span class="fivesixths padleft">
									Avoid same team debating multiple pullups
								</span>
								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "prevent_hitting_pullup_twice",
										value   => $event_settings->{"prevent_hitting_pullup_twice"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</div>
					   </label>
					</div>
%	 			}
% 			}

%			if ($tourn_settings->{"ncfl"} || $tourn_settings->{"region_constrain"}) {
				<label for="region_constrain">
					<div class="hover row flexrow">
						<span class="fivesixths padleft">
							Constrain in-region matchups as schools
						</span>
						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "region_constrain",
								value   => $event_settings->{"region_constrain"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>
%			}
<%perl>
 			if (
				$event->type eq "congress"
				|| $event->type eq "speech"
			) {

				if ($tourn_settings->{"regions"}) {
</%perl>
					<label for="region_avoid">
						<div class="hover row flexrow">
							<span class="fivesixths padleft">
								Avoid in-region matchups in prelims
							</span>
							<span class="sixth centeralign">
								<& "/funclib/bool_switch.mas",
									tag     => "region_avoid",
									value   => $event_settings->{"region_avoid"},
									target  => $event,
									smaller => 1,
								&>
							</span>
						</div>
					</label>

					<label for="region_constrain">
						<div class="hover row flexrow">
							<span class="fivesixths padleft">
								Treat region constraints as schools
							</span>
							<span class="sixth centeralign">
								<& "/funclib/bool_switch.mas",
									tag     => "region_constrain",
									value   => $event_settings->{"region_constrain"},
									target  => $event,
									smaller => 1,
								&>
							</span>
						</div>
					</label>

%				}

%				unless ($districts) {

					<div class="row flexrow">
						<span class="quarter padleft">
							<% $event->type eq "speech" ? "Section" : "Chamber" %> Size
						</span>

						<span class="threequarters flexrow">

							<span class="sixth centeralign">
								Default
							</span>
							<span class="sixth">
								<input
									type  = "number"
									name  = "default_panel_size"
									min   = 1
									max   = 99
									step  = 1
									class = "smaller"
									value = "<%  $event_settings->{"default_panel_size"} %>"
								>
							</span>

							<span class="sixth centeralign">
								Min
							</span>

							<span class="sixth centeralign">
								<input
									type  = "number"
									name  = "min_panel_size"
									min   = 1
									max   = 99
									class = "smaller"
									max   = "<% $max_section %>"
									value = "<%  $event_settings->{"min_panel_size"} %>"
								>
							</span>

							<span class="sixth centeralign">
								Max
							</span>

							<span class="sixth">
								<input
									type  = "number"
									name  = "max_panel_size"
									min   = 1
									max   = 99
									class = "smaller"
									max   = "<% $max_section %>"
									value = "<% $event_settings->{"max_panel_size"} %>"
								>
							</span>
						</span>
					</div>
%				}

%				unless ($tourn_settings->{'double_entry'} eq 'none') {
					<label for="speaker_priority_first">
						<div class="hover row flexrow">
							<span class="fivesixths padleft">
								Double entries should speak early, never late
							</span>

							<span class="sixth centeralign">
								<& "/funclib/bool_switch.mas",
									tag     => "speaker_priority_first",
									value   => $event_settings->{"speaker_priority_first"},
									target  => $event,
									smaller => 1,
								&>
							</span>
						</div>
					</label>
%				}

%				unless ($districts) {
					<div class="row flexrow">
						<span class="fivesixths padleft">
							Limit large schools to this % of sections
						</span>
						<span class="sixth centeralign">
							<input
								type  = "number"
								name  = "school_percent_limit"
								size  = "5"
								value = "<%  $event_settings->{"school_percent_limit"} %>"
							>
						</span>
					</div>
%				}

				<label for="repeat_rooms">
					<div class="hover row flexrow">
						<span class="fivesixths padleft">
							Use same rooms round to round
						</span>
						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "repeat_rooms",
								value   => $event_settings->{"repeat_rooms"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>

%				unless ($districts) {

%					my $elim_method = $event_settings->{"elim_method"};

					<label for="seed_presets">
						<div class="hover row flexrow">
							<span class="fivesixths padleft">
								Snake prelims based on seeds
							</span>
							<span class="sixth centeralign">
								<& "/funclib/bool_switch.mas",
									tag     => "seed_presets",
									value   => $event_settings->{"seed_presets"},
									target  => $event,
									smaller => 1,
								&>
							</span>
						</div>
					</label>

					<div class="row flexrow">
						<span class="half">
							Elim snake adjustment
						</span>

						<span class="half rightalign padright">
							<select name="elim_method">

								<option value="snake"
									<% $event_settings->{"elim_method"} eq "snake"
										? "selected" : "" %>>
									None: do not adjust for same-school hits
								</option>

%								if ($event->type eq "congress") {
									<option value="snake_school_tight"
										<% ($event_settings->{"elim_method"} eq "snake_school_tight")
											? "selected" : ""
										%>>
										Seeds: Adjust among same prelim session rank
									</option>

%								} elsif (1 == 2)  {
%									#Neither of these have been implemented yet. Oops. -CLP
									<option value="snake_school_prelim_cume"
										<% ($event_settings->{"elim_method"} eq "snake_school_prelim_cume")
											? "selected" : ""
										%>>
										Prelim Cume: Adjust among entries tied in prelim cume ranks
									</option>

									<option value="snake_school_overall_cume"
										<% ($event_settings->{"elim_method"} eq "snake_school_overall_cume")
											? "selected" : ""
										%>>
										Overall Cume: Adjust among entries tied in overall cume ranks
									</option>
%								}

								<option value="snake_school"
									<% ($event_settings->{"elim_method"} eq "snake_school")
										? "selected" : ""
									%>>
									Seeds: Adjust among similar prelim ranks (max 2 places)
								</option>

								<option value="snake_school_rank"
									<% ($event_settings->{"elim_method"} eq "snake_school_rank")
										? "selected" : ""
									%>>
									Tiebreak: Adjust among entries tied in the 1st tiebreaker
								</option>

								<option value="snake_school_force"

									<% $event_settings->{"elim_method"} eq "snake_school_force"
										? "selected" : ""
									%>>
									Force: Force-adjust no matter tiebreakers; closer seeds first.
								</option>
							</select>
						</span>
					</div>
%				}

%				unless ($districts) {

% 					if ($event->type eq "congress") {

						<label for="seed_presets">
							<div class="row flexrow">
								<span class="fivesixths padleft">
									Pair prelims based on seeding
								</span>

								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "seed_presets",
										value   => $event_settings->{"seed_presets"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</div>
						</label>


						<label for="separate_codes">
							<div class="row flexrow">
								<span class="fivesixths padleft">
									Use separate school codes
								</span>
								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "separate_codes",
										value   => $event_settings->{"separate_codes"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</div>
						</label>
% 					}
%				}

% 				if ($event->type eq "congress") {
					<label for="sort_precedence">
						<div class="row flexrow">
							<span class="fivesixths padleft">
								Auto-generate recency
							</span>

							<span class="sixth centeralign">
%								if ($tourn_settings->{"nsda_district"}) {
									<span class="greentext padsettingtext" title="Required for Districts">
										Required
									</span>
%								} else {
									<& "/funclib/bool_switch.mas",
										tag     => "sort_precedence",
										value   => $event_settings->{"sort_precedence"},
										target  => $event,
										smaller => 1,
									&>
%								}
							</span>
						</div>
					</label>
%				}
% 			}

			<label for="no_autopair">
				<div class="hover row flexrow">
					<span class="fivesixths padleft">
						Disable auto-scheduling
					</span>
					<span class="sixth centeralign">
						<& "/funclib/bool_switch.mas",
							tag     => "no_autopair",
							value   => $event_settings->{"no_autopair"},
							target  => $event,
							smaller => 1,
						&>
					</span>
				</div>
			</label>

			<div
				class = "row flexrow"
				title = "Use a letter or number key to divide events into columns in the Schemats menu"
			>
				<span class="fivesixths padleft">
					Menu Pattern
				</span>
				<span class="sixth centeralign">
					<input
						type      = "text"
						name      = "menu_pattern"
						value     = "<% $event_settings->{menu_pattern} %>"
						maxlength = "8"
					>
				</span>
			</div>

		</span>

		<span class="pagehalf flexkids">
			<h5 class="button padleft">
				Judges
			</h5>

%			unless ($event->type eq "mock_trial") {
				<div class="hover row flexrow">
					<label for="allow_judge_own">
						<span class="fivesixths padleft">
							Judges may judge their own school
						</span>
						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "allow_judge_own",
								value   => $event_settings->{"allow_judge_own"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</label>
				</div>
%			}

%			if ($tourn_settings->{"ncfl"}) {

				<label for="region_judge_forbid">
					<div class="hover row flexrow">
						<span class="fivesixths padleft">
							Constrain judges against their diocese
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "region_judge_forbid",
								value   => $event_settings->{"region_judge_forbid"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>

				<label for="conflict_dioregion_judges">
					<div class="hover row flexrow">
						<span class="fivesixths padleft">
							Constrain judges against diocese region group
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "conflict_dioregion_judges",
								value   => $event_settings->{"conflict_dioregion_judges"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>

%			} elsif ($tourn_settings->{"regions"}) {

				<label for="region_judge_forbid">
					<div class="hover row flexrow">
						<span class="fivesixths padleft">
							Constrain judges against their region
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "region_judge_forbid",
								value   => $event_settings->{"region_judge_forbid"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>
%			}

%			if ($category_settings{'first_year_outs'}) {
				<label for="no_first_years">
					<div class="hover row flexrow">
						<span class="fivesixths padleft">
							Block first year out judges
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "no_first_years",
								value   => $event_settings->{"no_first_years"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>
%			}

			<script>

				function checkRepeat() {
					if ($("#allow_repeat_judging").prop("checked") ) {
						$(".allow_repeat_judging").addClass('hidden');
					} else {
						$(".allow_repeat_judging").removeClass('hidden');
					}
					fixVisual();
				}

				function checkRepeatElims() {

					console.log("Hello.");
					if ($("#allow_repeat_elims").prop("checked") ) {
						$(".allow_repeat_elims").removeClass('alsohidden');
					} else {
						$(".allow_repeat_elims").addClass('alsohidden');
					}
					fixVisual();
				}

				function checkFlip() {
					if ($("#no_side_constraints").prop("checked") ) {
						$(".no_side_constraints").addClass('itooamhidden');
					} else {
						$(".no_side_constraints").removeClass('itooamhidden');
					}
					fixVisual();
				}

				$(document).ready(function () {
					checkFlip();
					checkRepeatElims();
					checkRepeat();
				});
			</script>

			<label for="allow_repeat_judging">
				<div class="hover row flexrow">
					<span class="fivesixths padleft">
						Allow repeat judging always
					</span>

					<span class="sixth centeralign">
						<& "/funclib/bool_switch.mas",
							tag      => "allow_repeat_judging",
							value    => $event_settings->{"allow_repeat_judging"},
							target   => $event,
							function => "checkRepeat();",
							smaller  => 1,
						&>
					</span>
				</div>
			</label>

%			if ($event->type ne 'congress' && $event->type ne "speech") {
				<label for="allow_repeat_prelim_side">
					<div class="hover row flexrowrepeat no_side_constraints allow_repeat_judging">
						<span class="fivesixths padleft">
							Allow repeat judging on opposite side in prelims
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "allow_repeat_prelim_side",
								value   => $event_settings->{"allow_repeat_prelim_side"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>
%			}

			<label for="allow_repeat_elims">
				<div class="hover row flexrowallow_repeat_judging">
					<span class="fivesixths padleft">
						Allow repeat judging in elims/final
					</span>
					<span class="sixth centeralign">
						<& "/funclib/bool_switch.mas",
							tag      => "allow_repeat_elims",
							value    => $event_settings->{"allow_repeat_elims"},
							target   => $event,
							function => "checkRepeatElims();",
							smaller  => 1,
						&>
					</span>
				</div>
			</label>

%			if ($event->type ne 'congress' && $event->type ne "speech" && (not defined ($category_settings{"prefs"}))) {
				<label for="disallow_repeat_drop">
					<div class="hover row flexrowallow_repeat_judging allow_repeat_elims">
						<span class="fivesixths wrap padleft">
							Forbid repeats by judges who voted against an entry
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "disallow_repeat_drop",
								value   => $event_settings->{"disallow_repeat_drop"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>
%			}
<%perl>
			unless ($event->type eq "wudc") {

				if ($category
					&& $category_settings{"prefs"}
					&& $category_settings{"prefs"} ne "no"
				) {
</%perl>
					<div class="row flexrow">
						<span class="fivesixths padleft">
							Entry cannot advance after loss #
						</span>

						<span class="sixth centeralign">
							<input
								type  = "text"
								class = "thin"
								name  = "break_point"
								size  = "5"
								value = "<%  $event_settings->{"break_point"} %>"
							>
						</span>
					</div>

					<div class="row flexrow">
						<span class="fivesixths padleft">
							Maximum pref for in debates
						</span>

						<span class="sixth centeralign">
							<input
								type  = "text"
								class = "thin"
								name  = "max_pref"
								size  = "5"
								value = "<% $event_settings->{"max_pref"} %>"
							>
						</span>
					</div>

					<label for="nobreak_noprefs">
						<div class="row flexrow hover">
							<span class="fivesixth padleft">
								Ignore prefs after entry cannot advance
							</span>

							<span class="sixth centeralign">
								<& "/funclib/bool_switch.mas",
									tag     => "nobreak_noprefs",
									value   => $event_settings->{"nobreak_noprefs"},
									target  => $event,
									smaller => 1,
								&>
							</span>
						</div>
					</label>

					<div class="row flexrow">
						<span class="fivesixths padleft">
							Maximum pref for non-advancers
						</span>

						<span class="sixth centeralign">
							<input
								type  = "text"
								class = "thin"
								name  = "max_nobreak_pref"
								size  = "5"
								value = "<%  $event_settings->{"max_nobreak_pref"} %>"
							>
						</span>
					</div>
%	 			}
% 			}

%			if ($event && $category && $category_settings{'tab_ratings'}) {

%				unless ($event->type eq "congress") {
					<label for="auto_chairs">
						<div class="hover row flexrow">
							<span class="fivesixths padleft">
								Auto-designate chairs on multi-judge panels
							</span>

							<span class="sixth centeralign">
								<& "/funclib/bool_switch.mas",
									tag     => "auto_chairs",
									value   => $event_settings->{"auto_chairs"},
									target  => $event,
									smaller => 1,
								&>
							</span>
						</div>
					</label>
%				}

				<label for="best_judges_highest_seed">
					<div class="hover row flexrow" title="An APDA Abomination!&trade;">
						<span class="fivesixths padleft">
							Best judging goes to highest brackets
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "best_judges_highest_seed",
								value   => $event_settings->{"best_judges_highest_seed"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>

%				unless ($event->type eq "mock_trial") {
					<label for="invert_ratings">
						<div class="hover row flexrow" title="An APDA Abomination!&trade;">
							<span class="fivesixths padleft">
								Invert ratings (Best ratings = highest number)
							</span>

							<span class="sixth centeralign">
								<& "/funclib/bool_switch.mas",
									tag     => "invert_ratings",
									value   => $event_settings->{"invert_ratings"},
									target  => $event,
									smaller => 1,
								&>
							</span>
						</div>
					</label>
% 				}
% 			}

%			if ($event->type eq "debate") {
				<label for="autobye_nojudge">
					<div class="hover row flexrow">
						<span class="fivesixth padleft">
							Auto-bye debates without sufficient judging
						</span>
						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "autobye_nojudge",
								value   => $event_settings->{"autobye_nojudge"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>
%			}

			<h5 class="fixedheight">
				Web Publishing
			</h5>

%			if ($event->type eq "debate") {
				<label for="auto_docshare">
					<div class="hover row flexrow">
						<span class="fivesixths padleft">
							Auto-generate &nbsp;<a
								class="inline nospace link-underline"
							>share.tabroom.com</a>&nbsp; rooms
						</span>
						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "auto_docshare",
								value   => $event_settings->{"auto_docshare"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>
%			}

%			if ($event->type ne 'congress' && $event->type ne "speech" && $event->type ne "mock_trial") {
				<label for="blind_mode">
					<div class="hover row flexrow">
						<span class="fivesixth padleft">
							Anonymize unpublished pairings
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "blind_mode",
								value   => $event_settings->{"blind_mode"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>
%			}

%			if ($event->type eq "debate" || $event->type eq "mock_trial") {
				<label for="show_panel_letters">
					<div class="hover row flexrow">
						<span class="fivesixths padleft">
							Show section letters on schematics
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "show_panel_letters",
								value   => $event_settings->{"show_panel_letters"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>
%			}

%			unless ($event->type eq "mock_trial") {
				<label for="invert_postings">
					<div class="hover row flexrow">
						<span class="fivesixth padleft">
							Invert public posting order (R1 First)
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "invert_postings",
								value   => $event_settings->{"invert_postings"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>
%			}

			<label for="live_updates">
				<div class="hover row flexrow">
					<span class="fivesixths padleft">
						Enable Live updates (Notification &amp; Email Blasts)
					</span>

					<span class="sixth centeralign">
						<& "/funclib/bool_switch.mas",
							tag     => "live_updates",
							value   => $event_settings->{"live_updates"},
							target  => $event,
							smaller => 1,
						&>
					</span>
				</div>
			</label>

%			if ($event->type eq "speech") {
				<div class="row flexrow" title="This option will show the time in advance of the round that entries should report to the extemp prep room for draw">
					<span class="threequarters">
						Prep/Draw Time Offset
						<span class="inline explain padleft">
							(Minutes before round start)
						</span>
					</span>

					<span class="quarter rightalign padright">
						<input
							type  = "number"
							name  = "prep_offset"
							min   = 0
							max   = 999
							size  = 5
							value = "<% $event_settings->{"prep_offset"} %>"
						>
					</span>
				</div>
%			}

			<label for="anonymous_public">
				<div class="hover row flexrow">
					<span class="fivesixths padleft">
						Anonymize public pairing entries (codes only)
					</span>

					<span class="sixth centeralign">
						<& "/funclib/bool_switch.mas",
							tag     => "anonymous_public",
							value   => $event_settings->{"anonymous_public"},
							target  => $event,
							smaller => 1,
						&>
					</span>
				</div>
			</label>

%			if ($event->type eq "speech") {
				<label for="judge_codes_only">
					<div class="hover row flexrow">
						<span class="fivesixths padleft">
							Anonymous judges on public pairings (codes only)
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "judge_codes_only",
								value   => $event_settings->{"judge_codes_only"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>
%			}

			<div class="row flexrow">
				<span class="half wrap padleft">
					Auto-publish results<br />
					<div class="explain nospace">
						(When next round is paired)
					</div>
				</span>

				<span class="half padright">
%					my $autopublish_results = $event_settings->{"autopublish_results"};
					<select name  = "autopublish_results">
						<option value="" <% ( $autopublish_results eq "") ? "selected" : "" %>>
							No
						</option>

						<option value="1" <% ( $autopublish_results eq "1") ? "selected" : "" %>>
							<% $event->type eq "speech" || $event->type eq "congress"
								? "Ranks Only"
								: "Win/Loss Only"
							%>
						</option>

						<option value="3" <% ( $autopublish_results eq "3") ? "selected" : "" %>>
							<% $event->type eq "speech" || $event->type eq "congress"
								? "Ranks"
								: "Win/Loss"
							%>
							&amp; Feedback
						</option>

						<option value="2" <% ( $autopublish_results eq "2") ? "selected" : "" %>>
							Full Results
						</option>
					</select>
				</span>
			</div>

%			if ($event->type eq "debate" || $event->type eq "wsdc") {
				<div class="row flexrow">
					<span class="half padleft">
						Judges may blast/publish results
					</span>

					<span class="half rightalign padright">
						<select
							name  = "judge_publish_results"
						>
							<option value=""
								<% $event_settings->{"judge_publish_results"} ? "" : "selected" %>
							>No </option>

							<option value="winloss"
								<% $event_settings->{"judge_publish_results"} eq "winloss" ? "selected" : "" %>
							>Win/Loss Only</option>

							<option value="all"
								<% $event_settings->{"judge_publish_results"} eq "all" ? "selected" : "" %>
							>Full Results </option>
						</select>
					</span>
				</div>
%			}
		</span>
		</div>

		<div class="libl full rightalign">
			<span class="centeralign third">
				<input
					type  = "submit"
					value = "Save Settings"
				>
			</span>
		</div>

		</form>

	</div>

	<div class="menu">
		<&
			"menu.mas",
			person         => $person,
			tourn          => $tourn,
			perms          => $perms,
			tourn_settings => $tourn_settings,
			whoami         => "sectioning",
			districts      => $districts,
			event_id       => $event->id
		&>
	</div>

