<%args>
	$person
	$person_settings
	$tourn
	$perms
	$tourn_settings
	$event_id => undef
</%args>
<%init>

	my $tz = $tourn->tz;
	$tz = "UTC" unless $tz;

	my ($event, $event_settings, $events) = $m->comp('perms.mas',
		tourn    => $tourn,
		perms    => $perms,
		event_id => $event_id
	);

	$m->redirect("edit.mhtml") unless $event;

	unless ($event->category) {
		my $err = "Your event is not assigned to a judge category.  You must do that before going further";
		$m->redirect("edit.mhtml?err=$err&event=$event_id");
	}

	my $dbh = Tab::DBI->db_Main();
	my $sth = $dbh->prepare("
		select
			round.id
		from round
			where round.event = ?
			and round.flighted > 1
	");

	$sth->execute($event->id);
	my $doubled = $sth->fetch();


</%init>

    <script type="text/javascript">
		function showMe (it) {
			$("."+it).toggleClass("hidden");
			fixVisual();
		}
    </script>

    <div class="main">

        <h2><% $event->name %></h2>

        <&
			"tabbar.mas",
			person          => $person,
			person_settings => $person_settings,
			event           => $event,
			tourn           => $tourn,
			tourn_settings  => $tourn_settings,
			whoami          => "tabbing"
		&>

		<form
			action = "tabbing_save.mhtml"
			method = "post"
		>

		<input
			type  = "hidden"
			name  = "event_id"
			value = "<% $event->id %>"
		>

		<span class="pagehalf flexkids">

			<h5>Input</h5>

%			my $increments = $event_settings->{"point_increments"} if $event;

%			if ($event->type ne "congress") {

				<div class="row flexrow">

					<span class="half padleft">
						Point increments
					</span>

					<span class="half rightalign">

						<select name  = "point_increments">
							<option value="whole" <% ($increments eq "whole") ? "selected" : "" %>>
								Whole
							</option>

							<option value="half" <% ($increments eq "half") ? "selected" : "" %>>
								Half (.5)
							</option>

							<option value="fourths" <% ($increments eq "fourths") ? "selected" : "" %>>
								Quarter (.25)
							</option>

							<option value="tenths" <% ($increments eq "tenths") ? "selected" : "" %>>
								Tenth (.10)
							</option>

						</select>
					</span>
				</div>
%			}

<%perl>
			unless ($event->type eq "speech"
				|| $event->type eq "congress"
				|| $event->type eq "mock_trial"
				|| $tourn_settings->{"nsda_district"}
				|| $event_settings->{"max_entry"} == 1
			) {
</%perl>
				<label for="team_points">
					<div class="hover row">
						<span class="fivesixths padleft">
							Give team points, not per-speaker
						</span>
						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "team_points",
								value   => $event_settings->{"team_points"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>

%			}

%			if ($event->type ne "congress") {
				<label for="point_ties">
					<div class="hover row">
						<span class="fivesixths padleft">
							Allow tied points
						</span>
						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "point_ties",
								value   => $event_settings->{"point_ties"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>
%			}

%			unless ($event_settings->{"ballot_rubric"}) {
%				unless ($event->type eq "wudc" || $tourn_settings->{"nsda_district"}) {
%					if ($event->type eq "speech") {

						<label for="allow_lowpoints">
							<div class="hover row">
								<span class="fivesixths padleft">
									Allow lower points to go to better ranks
								</span>
								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "allow_lowpoints",
										value   => $event_settings->{"allow_lowpoints"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</div>
						</label>

%					} elsif ($event->type ne "congress" && $event->type ne "wudc") {

						<label for="no_lpw">
							<div class="hover row">
								<span class="fivesixths padleft">
									Forbid low-point wins
								</span>

								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "no_lpw",
										value   => $event_settings->{"no_lpw"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</div>
						</label>
%					}
%				}


<%perl>
				if (
					($event->type eq "speech"
						&& (not defined $tourn_settings->{"nsda_district"}))
					|| $event->type eq "congress"
				) {
</%perl>
					<label for="allow_rank_ties">
						<div
							class="hover row"
							title="In Congress DO NOT enable this to permit rank ties for the auto-fill truncate rank"
						>
							<span class="fivesixths padleft">
								Allow rank ties
							</span>

%							if ($tourn_settings->{"nsda_district"}) {
%								if ($event->type eq "speech") {
									<span class="redtext padsettingtext fifth" title="Not allowed for Districts">
										Disallowed
									</span>
%								} elsif ($event->type eq "congress") {
									<span class="redtext padsettingtext fifth"
										title="The auto-fill setting will allow you to tie ranks of 9 on scorer ballots already"
									>
										Disallowed
									</span>
%								}
%							} else {
								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "allow_rank_ties",
										value   => $event_settings->{"allow_rank_ties"},
										target  => $event,
										smaller => 1,
									&>
								</span>
%							}
						</div>
					</label>

%					if ( (not defined $tourn_settings->{"nsda_district"}) || $event->type eq "congress") {
						<div class="row flexrow">
							<span
								class="fivesixths padleft"
								title="Setting will also allow this rank to be tied"
							>
								Auto-fill blank ranks with
							</span>

%							if ($tourn_settings->{"nsda_district"} && $event->type eq "congress") {
								<span class="greentext padsettingtext fifth"
									title="Required for Districts"
								>
									Required: 9
									<input
										type  = "hidden"
										name  = "truncate_fill"
										value = "<% $event_settings->{"truncate_fill"} %>"
									>
								</span>
%							} else {
								<span class="fifth padright">
									<input
										type  = "number"
										class = "thin"
										name  = "truncate_fill"
										value = "<% $event_settings->{"truncate_fill"} %>"
									>
								</span>
%							}
						</div>
%					}

%					if ($event->type eq "congress") {
						<label for="parli_noautofill">
							<div class="hover row">
								<span class="fivesixths padleft">
									Forbid Parlis from blank/tie ranks
								</span>

%								if ($tourn_settings->{"nsda_district"}) {
									<span class="greentext padsettingtext fifth" title="Required for Districts">
										Required
									</span>
%								} else {
									<span class="sixth centeralign">
										<& "/funclib/bool_switch.mas",
											tag     => "parli_noautofill",
											value   => $event_settings->{"parli_noautofill"},
											target  => $event,
											smaller => 1,
										&>
									</span>
%								}
							</div>
						</label>

						<label for="scorer_max">
							<div class="hover row">
								<span class="fivesixths padleft">
									Limit scorer ballots to auto-fill rank
								</span>
								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "scorer_max",
										value   => $event_settings->{"scorer_max"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</div>
						</label>
%					}

%				} elsif ($tourn_settings->{"nsda_nats"}) {

					<div class="row flexrow">
						<span class="fivesixths padleft">
							Ballots required to clear to elims
						</span>

						<span class="fifth padright">
							<input
								type  = "number"
								step  = 1
								min   = 0
								max   = 99
								name  = "clearing_threshold"
								value = "<% $event_settings->{"clearing_threshold"} %>"
							>
						</span>
					</div>

					<div class="row flexrow">
						<span class="fivesixths padleft">
							Ignore state constraints after round #
						</span>

						<span class="fifth padright">
							<input
								type  = "number"
								name  = "state_constraint_threshold"
								step  = 1
								min   = 0
								max   = 99
								value = "<% $event_settings->{"state_constraint_threshold"} %>"
							>
						</span>
					</div>
%				}

%				if ($event->type eq "congress") {

					<label for="parli_ballot">
						<div class="hover row">
							<span class="fivesixths padleft">
								Enter only one Parli ballot in prelims
							</span>
%							if ($tourn_settings->{"nsda_district"}) {
								<span class="greentext padsettingtext sixth" title="Required for Districts">
									Required
								</span>
%							} else {
								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "parli_ballot",
										value   => $event_settings->{"parli_ballot"},
										target  => $event,
										smaller => 1,
									&>
								</span>
%							}
						</div>
					</label>

					<div class="row flexrow">
						<span class="fivesixths padleft">
							Number of speeches on scoresheets
						</span>

						<span class="fifth padright">
							<input
								type  = "number"
								class = "thin"
								name  = "number_of_speeches"
								value = "<% $event_settings->{"number_of_speeches"} %>"
							>
						</span>
					</div>

%					unless ($tourn_settings->{"nsda_district"}) {

						<label for="advance_overall">
							<div
								class="hover row"
								title="Select this method to clear the top N competitors, instead of the top N from each individual chamber"
							>
								<span class="fivesixths padleft">
									Do not advance by chamber
								</span>
								<span class="sixth centeralign">
									<& "/funclib/bool_switch.mas",
										tag     => "advance_overall",
										value   => $event_settings->{"advance_overall"},
										target  => $event,
										smaller => 1,
									&>
								</span>
							</div>
						</label>
%					}
%				}

%				if ($event->type eq "wsdc") {

					<label for="wsdc_subtotal_ballot">
						<div class="row hover">
							<span class="fivesixths padleft">
								Show WSDC subpoints on ballot entry
							</span>

							<span class="sixth centeralign">
								<& "/funclib/bool_switch.mas",
									tag      => "wsdc_subtotal_ballot",
									function => "checkWSDCPoints();",
									value    => $event_settings->{"wsdc_subtotal_ballot"},
									target   => $event,
									smaller  => 1,
								&>
							</span>
						</div>
					</label>
%				}

				<div class="subpoints wrap flexrow nospace <%
					$event_settings->{"wsdc_subtotal_ballot"}
					? ""
					: "hidden"
				%>">

%					foreach my $tag ("style", "content", "strategy", "poi") {

						<div class="row flexrow flexkids">
							<span class="third semibold bluetext padleftmuchmore">
								<% $tag eq "poi"?  "P.O.I. Bonus" : ucfirst($tag)." Points" %>
							</span>

							<span class="third centeralign">
								<span class="half smallish">
									Minimum
								</span>
								<span class="half padright">
									<input
										type  = "number"
										class = "thinner"
										name  = "min_<% $tag %>_points"
										value = "<% $event_settings->{"min_".$tag."_points"} %>"
									>
								</span>
							</span>

							<span class="third centeralign">
								<span class="half smallish">
									Maximum
								</span>
								<span class="half padright">
									<input
										type  = "text"
										class = "thinner"
										name  = "max_<% $tag %>_points"
										value = "<% $event_settings->{"max_".$tag."_points"} %>"
									>
								</span>
							</span>
						</div>
%					}

					<label for="team_total_line">
						<div class="hover row flexrow">
							<span class="fivesixths padleft">
								Print line for team total on ballots
							</span>

							<span class="sixth centeralign">
								<& "/funclib/bool_switch.mas",
									tag     => "team_total_line",
									value   => $event_settings->{"team_total_line"},
									target  => $event,
									smaller => 1,
								&>
							</span>
						</div>
					</label>
				</div>

				<div class="row <% $event_settings->{"wsdc_subtotal_ballot"} ? "hidden" : "" %>">
					<span class="fivesixths padleft">
						Minimum speaker points
					</span>

%					if ($event->type eq "congress" && $tourn_settings->{"nsda_district"}) {
						<span class="greentext padsettingtext quarter" title="Required for Districts">
							Required: <% $event_settings->{"min_points"} %>
							<input
								type  = "hidden"
								name  = "min_points"
								value = "<% $event_settings->{"min_points"} ? $event_settings->{"min_points"} : 0 %>"
							>
						</span>
%					} else {
						<span class="fifth padright">
							<input
								type  = "number"
								name  = "min_points"
								step  = 1
								min   = 0
								max   = 99
								value = "<% $event_settings->{"min_points"} ? $event_settings->{"min_points"} : 0 %>"
							>
						</span>
%					}
				</div>

				<div class="row <% $event_settings->{"wsdc_subtotal_ballot"} ? "hidden" : "" %>">
					<span class="fivesixths padleft">
						Maximum speaker points
					</span>

%					if ($event->type eq "congress" && $tourn_settings->{"nsda_district"}) {
						<span
							class = "greentext padsettingtext quarter"
							title = "Required for Districts"
						>
							Required: <% $event_settings->{"max_points"} %>
							<input
								type  = "hidden"
								class = "notfirst"
								name  = "max_points"
								value = "<% $event_settings->{"max_points"} ? $event_settings->{"max_points"} : 0 %>"
							>
						</span>
%					} else {
						<span class="fifth padright">
							<input
								type  = "number"
								name  = "max_points"
								step  = 1
								min   = 0
								max   = 990
								value = "<% $event_settings->{"max_points"} %>"
							>
						</span>
%					}
				</div>

%				if ($doubled) {
					<div
						class = "row flexrow"
						title = "To display accurate start times of the 2nd flight in double flighted events"
					>
						<span class="fivesixths padleft">
							Flight length in minutes
						</span>

						<span class="quarter">
							<input
								type  = "number"
								name  = "flight_offset"
								step  = 1
								min   = 0
								max   = 999
								value = "<% $event_settings->{"flight_offset"} %>"
							>
						</span>
					</div>
%				}
%			}
		</span>

%		unless ($tourn_settings->{'nsda_district'}) {
		<span class="pagehalf flexkids">

			<h5>Output</h5>

%			if ($event->type eq "congress" && (not defined $tourn_settings->{'nsda_district'} )) {

				<div class="row flexrow">
					<span class="half padleft">
						Presiding Officer Award
					</span>

					<span class="half rightalign">
%						my $set = $event_settings->{"po_protocol"} if $event;

						<select
							name  = "po_protocol"
							class = "fixedsmall"
						>

							<option value="">None</option>
%							foreach my $protocol (Tab::Protocol->search( tourn => $tourn->id)) {
								<option value="<% $protocol->id %>"
									<% $protocol->id == $set ? "selected" : "" %>
								>
									<% $protocol->name %>
								</option>
%							}

						</select>
					</span>
				</div>

				<div class="row flexrow">
					<span class="half padleft">
						Leadership Bowl
					</span>

					<span class="half rightalign">
%						$set = $event_settings->{"leadership_protocol"} if $event;
						<select
							name  = "leadership_protocol"
							class = "fixedsmall"
						>
							<option value="">None</option>
%							foreach my $protocol (Tab::Protocol->search( tourn => $tourn->id)) {
								<option value="<% $protocol->id %>"
									<% $protocol->id == $set ? "selected" : "" %>
								>
									<% $protocol->name %>
								</option>
%							}
						</select>
					</span>
				</div>

				<label for="student_online_ballots">
					<div class="hover row">
						<span class="fivesixths padleft">
							Student Vote Online
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "student_online_ballots",
								value   => $event_settings->{"student_online_ballots"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>
<%perl>

				my @others = Tab::Event->search_where(
					type  => { '=', "congress" },
					tourn => { '=', $tourn->id },
					id    => { '!=', $event->id }
				);

				if (@others) {
</%perl>
					<div class="row flexrow">
						<span class="half padleft">
							Linked PO Event
						</span>

						<span class="half rightalign">
							<select
								name  = "po_contest"
								class = "fixedsmall"
							>
								<option value="">None</option>
%								foreach my $other (@others) {
									<option value="<% $other->id %>"
										<% $other->id == $event_settings->{"po_contest"}
											? "selected"
											: ""
										%>
									>
										<% $other->name %>
									</option>
%								}
							</select>
						</span>
					</div>
%				}

				<div class="row fullrow">
					<span class="fivesixths padleft">
						Auto-fill blank ranks on student ballot with
					</span>

					<span class="quarter">
						<input
							type  = "number"
							class = "thin"
							name  = "student_truncate_fill"
							value = "<% $event_settings->{"student_truncate_fill"} %>"
						>
					</span>
				</div>

%			}

%			if ($event->type eq "mock_trial") {
				<div class="row hover flexrow">
					<span class="fivesixths padleft">
						Ballot count given to byes
					</span>

					<span class="sixth centeralign">
						<input
							type  = "number"
							class = "thinner"
							name  = "bye_ballot_count"
							value="<% $event_settings->{"bye_ballot_count"} %>"
						>
					</span>
				</div>
%			}

%			unless ($event->type eq "speech" || $event->type eq 'congress') {

				<div class="row flexrow">
					<span class="half padleft">
%						if ($event->type eq "mock_trial") {
							Individual award tiebreakers
%						} else {
							Speaker award tiebreakers
%						}
					</span>

					<span class="half rightalign">
%						my $set = $event_settings->{"speaker_protocol"} if $event;

						<select
							name  = "speaker_protocol"
							class = "fixedmost"
						>

							<option value="">None</option>
%							foreach my $protocol (Tab::Protocol->search( tourn => $tourn->id)) {

								<option value="<% $protocol->id %>"
									<% $protocol->id == $set ? "selected" : "" %>
								>
									<% $protocol->name %>
								</option>
%							}

						</select>
					</span>
				</div>

%				unless ($event->type eq "mock_trial") {

					<label for="show_averages">
						<div class="hover row">

							<span class="fivesixths padleft">
								Speaker awards by averages, not totals
							</span>

							<span class="sixth centeralign">
								<& "/funclib/bool_switch.mas",
									tag     => "show_averages",
									value   => $event_settings->{"show_averages"},
									target  => $event,
									smaller => 1,
								&>
							</span>
						</div>
					</label>

					<label for="show_panel_averages">
						<div class="hover row">

							<span class="fivesixths padleft">
								Multi-judge panels points by panel average
							</span>

							<span class="sixth centeralign">
								<& "/funclib/bool_switch.mas",
									tag     => "show_panel_averages",
									value   => $event_settings->{"show_panel_averages"},
									target  => $event,
									smaller => 1,
								&>
							</span>
						</div>
					</label>
%				}
%			}


%			if ($event->type eq "wsdc") {

				<div class="row flexrow">
					<span class="fivesixths padleft">
						Limit counted speaker scores to top
					</span>

					<span class="fifth padrightmore">
						<input
							type  = "number"
							class = "thinner"
							name  = "speaker_max_scores"
							value="<% $event_settings->{"speaker_max_scores"} %>"
						>
					</span>
				</div>

				<div class="row flexrow">
					<span class="fivesixths padleft">
						Quota of speeches for speaker awards
					</span>

					<span class="fifth padrightmore">
						<input
							type  = "number"
							class = "thinner"
							name  = "speaker_min_speeches"
							value="<% $event_settings->{"speaker_min_speeches"} %>"
						>
					</span>
				</div>


				<div class="row hover flexrow">
					<label for="include_wsdc_reply">
						<span class="fivesixths padleft">
							Include replies (x2) in speaker average
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "include_wsdc_reply",
								value   => $event_settings->{"include_wsdc_reply"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</label>
				</div>

				<div class="row hover flexrow">
					<label for="wsdc_bye_win_average">
						<span class="fivesixths padleft">
							Bye rounds get average wins &amp; ballots
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "wsdc_by_win_average",
								value   => $event_settings->{"wsdc_by_win_average"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</label>
				</div>

%			} else {

%				unless ($event->type eq "speech" || $event->type eq "congress" || $event->type eq "mock_trial") {

%					my $mavericks = $event_settings->{"mavericks"};

					<div class="row flexrow">
						<span class="half padleft">
							Maverick points
						</span>

						<span class="half rightalign">
							<select name="mavericks" class="fixedmost">

								<option value="double_rank"
									<% $mavericks eq "double_rank" ? "selected" : "" %>
								>Double points of speaking debater, maximum rank</option>

								<option value="double"
									<% $mavericks eq "double" ? "selected" : "" %>
								>Double points of speaking debater, rank +1</option>

								<option value="own_average"
									<% $mavericks eq "own_average" ? "selected" : "" %>
								>Missing speaker's average points, max rank</option>

								<option value="average"
									<% $mavericks eq "average" ? "selected" : "" %>
								>Tournament average points, max rank</option>

								<option value="nothing"
									<% $mavericks eq "nothing" ? "selected" : "" %>
								>Zero points, max rank</option>

							</select>
						</span>

					</div>

%				}
%			}

%			if ($event->type eq "speech" && $tourn_settings->{"nsda_nats"}) {

				<div class="row flexrow">
					<span class="half padleft">
						Final Round Bowl
					</span>

					<span class="half rightalign">
%						my $set = $event_settings->{"final_bowl_protocol"} if $event;
						<select
							name  = "final_bowl_protocol"
							class = "fixedsmall"
						>
							<option value="">None</option>
%							foreach my $protocol (Tab::Protocol->search( tourn => $tourn->id)) {
								<option value="<% $protocol->id %>"
									<% $protocol->id == $set ? "selected" : "" %>
								>
									<% $protocol->name %>
								</option>
%							}
						</select>
					</span>
				</div>
%			}

%			if (($event->type eq "speech" || $event->type eq "congress") && (not defined $tourn_settings->{'nsda_district'} )) {
				<div class="row flexrow">
					<span class="half padleft">
						Top novice award
					</span>

					<span class="half rightalign">
%						my $top_novice = $event_settings->{"top_novice"};

						<select
							name  = "top_novice"
							class = "fixedsmall"
						>
							<option value="" <% $top_novice ? "" : "selected" %>>
								None
							</option>

							<option value="top" <% ( $top_novice eq "top") ? "selected" : "" %>>
								Overall
							</option>

							<option value="noelim" <% ( $top_novice eq "noelim") ? "selected" : "" %>>
								Non-advancing
							</option>
						</select>
					</span>
				</div>

				<label for="honorable_mentions">
					<div class="hover row">
						<span class="fivesixths padleft">
							Recognize honorable mentions
							<p class="explain nospace">non-advancers tied on ranks</p>
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "honorable_mentions",
								value   => $event_settings->{"honorable_mentions"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>
%			}

%			if ($tourn_settings->{"nsda_district"}  && $event->type eq "congress") {

				<label for="student_vote">
					<div class="hover row">
						<span class="fivesixths padleft">
							Use Congress student vote
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "student_vote",
								value   => $event_settings->{"student_vote"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>

%			}

%			if ($tourn_settings->{"nsda_nats"}) {

				<label for="section_sort">
					<div class="hover row">
						<span class="fivesixths padleft">
							Sort Input by Section Number
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "section_sort",
								value   => $event_settings->{"section_sort"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>

				<label for="no_judge_codes">
					<div class="hover row">
						<span class="fivesixths padleft">
							Judge codes off schematic
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "no_judge_codes",
								value   => $event_settings->{"no_judge_codes"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>
<%perl>

			}
		}

		if ($tourn_settings->{"nsda_district"}
			&& ( $person->site_admin || $person_settings->{"nsda_admin"})
		) {

			my $qual_override = $event_settings->{'nsda_qual_override'};
			my ($quals, $count_threshold) = split(/,/, $qual_override);
</%perl>

			<span class="pagehalf flexkids">

				<h5 title="For Site Admins Only">
					District Qual Overrides
				</h5>

				<div class="row flexrow">
					<span class="fivesixths padleft">
						Reduce number of quals by
					</span>

					<span class="sixth centeralign">
						<input
							type        = "number"
							name        = "nsda_qual_penalty"
							min         = "-99"
							max         = "99"
							value       = "<% $event_settings->{'nsda_qual_penalty'} %>"
						>
					</span>
				</div>

				<div class="row flexrow">
					<span class="twothirds padleft grow">
						Reduce qualifiers by percentage of slots
					</span>

					<span class="sixth centeralign">
						<div class="flexrow marno">
							<span class="threequarters nospace">
								<input
									type        = "number"
									name        = "nsda_qual_percent"
									min         = "0"
									max         = "999"
									value       = "<% $event_settings->{'nsda_qual_percent'} %>"
								>
							</span>
							<span class="quarter padleft padright nospace">
								%
							</span>
						</div>
					</span>
				</div>

%				if ($event->abbr eq "HSE") {
					<label for="nsda_qual_nohousepilot">
						<div class="row hover">
							<span class="fivesixths padleft">
								No Bonus House Entries
							</span>

							<span class="sixth centeralign">
								<& "/funclib/bool_switch.mas",
									tag     => "nsda_qual_nohousepilot",
									value   => $event_settings->{"nsda_qual_nohousepilot"},
									target  => $event,
									smaller => 1,
								&>
							</span>
						</div>
					</label>
%				}

				<div class="row flexrow">
					<span class="fivesixths padleft">
						Maximum Allowed Qualifiers
					</span>

					<span class="sixth centeralign">
						<input
							type  = "number"
							name  = "nsda_qual_max"
							min   = "0"
							max   = "99"
							value = "<% $event_settings->{'nsda_qual_max'} %>"
						>
					</span>
				</div>

				<div class="row flexrow">
					<span class="fivesixths padleft">
						Force # Of Qualifiers:
					</span>

					<span class="sixth centeralign">
						<input
							type  = "number"
							name  = "nsda_qual_force"
							min   = "0"
							max   = "99"
							value = "<% $event_settings->{'nsda_qual_force'} %>"
						>
					</span>
				</div>

				<div class="row flexrow">
					<span class="threefifth padleft">
						Custom Qual Threshold
					</span>

					<span class="sixth centeralign">
						<input
							type        = "number"
							name        = "threshold"
							placeholder = "Entry"
							min         = "0"
							max         = "999"
							value       = "<% $count_threshold %>"
						>
					</span>

					<span class="sixth centeralign">
						<input
							type        = "number"
							name        = "quals"
							placeholder = "Quals"
							min         = "0"
							max         = "9"
							value       = "<% $quals %>"
						>
					</span>
				</div>
			</span>
%		}

	</span>
	<div class="full nospace"></div>

		<script>
			function checkWSDCPoints() {
				if ($("#wsdc_subtotal_ballot").prop("checked") ) {
					$(".subpoints").removeClass('hidden');
				} else {
					$(".subpoints").addClass('hidden');
				}
				fixVisual();
			}


			function checkOnlineBallots() {
				if ($("#online_ballots").prop("checked") ) {
					$(".onlineballots").removeClass('hidden');
					console.log("online ballots show!");
				} else {
					$(".onlineballots").addClass('hidden');
					console.log("online ballots hide!");
				}
				fixVisual();
			}

			function checkOnlineCoinflips() {
				if ($("#flip_online").prop("checked") ) {
					$(".fliponline").removeClass('hidden');
				} else {
					$(".fliponline").addClass('hidden');
				}
				fixVisual();
			}

			$(document).ready(function(){
				checkOnlineBallots();
				checkOnlineCoinflips();
				checkWSDCPoints();
				fixVisual();
			});

		</script>


		<h5>Online Ballots</h5>

		<span class="pagehalf flexkids">
			<div class="flexrow hover row oddrow">
				<label for="online_ballots">
					<span class="fivesixths padleft">
						Use Online Ballots
					</span>

					<span class="sixth centeralign">
						<& "/funclib/bool_switch.mas",
							tag      => "online_ballots",
							function => "checkOnlineBallots();",
							value    => $event_settings->{"online_ballots"},
							target   => $event,
							smaller  => 1,
						&>
					</span>
				</label>
			</div>
		</span>

%		if ($event->type eq "debate" || $event->type eq "wsdc") {
			<span class="pagehalf">
				<label for="flip_online">
					<div class="hover row oddrow flexrow">
						<span class="fivesixths padleft">
							Use Online Coinflips
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag      => "flip_online",
								function => "checkOnlineCoinflips();",
								value    => $event_settings->{"flip_online"},
								target   => $event,
								smaller  => 1,
							&>
						</span>
					</div>
				</label>
			</span>
%		}

		<div class="nospace onlineballots <% $event_settings->{"online_ballots"} ? "" : "hidden" %>">
			<span class="pagehalf flexkids">

%			if ($event->type eq "congress") {
				<label for="po_points_required">
					<div class="hover row">
						<span class="fivesixths padleft">
							Require PO points for ballot submission
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "po_points_required",
								value   => $event_settings->{"po_points_required"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>

				<label for="enforce_equal_speeches">
					<div class="hover row">
						<span class="fivesixths padleft">
							Require scorers to record equal numbers of speeches
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag     => "enforce_equal_speeches",
								value   => $event_settings->{"enforce_equal_speeches"},
								target  => $event,
								smaller => 1,
							&>
						</span>
					</div>
				</label>
%			}

%			unless ($event_settings->{"ballot_rubric"}) {

				<label for="no_judge_violations">
					<div class="hover row">
						<span class="fivesixths padleft">
							Judges cannot mark violations
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag      => "no_judge_violations",
								value    => $event_settings->{"no_judge_violations"},
								target   => $event,
								smaller  => 1,
							&>
						</span>
					</div>
				</label>

%				if ($event->type ne 'speech' && $event->type ne "congress") {

					<div class="row flexrow">
						<span class="fivesixths padleft">
							RFD Minimum word count
						</span>

						<span class="fifth padright">
							<input
								type  = "number"
								name  = "rfd_plz"
								value = "<% $event_settings->{"rfd_plz"}
									? $event_settings->{"rfd_plz"}
									: ""
								%>"
							>
						</span>
					</div>

%				} elsif ($event->type ne 'congress') {

					<div class="row flexrow">
						<span class="fivesixths padleft">
							Comments minimum word count
						</span>

						<span class="fifth padright">
							<input
								type  = "number"
								name  = "comments_plz"
								value = "<% $event_settings->{"comments_plz"}
										? $event_settings->{"comments_plz"}
										: ""
								%>"
							>
						</span>
					</div>
<%perl>
				}
			}

			my $timer_default = 5;
			$timer_default = 10 if $event->type eq "speech";
			$timer_default = 3 if $event->type eq "congress";
			my $prep_default = 4;

</%perl>

%			if ($event->type ne "mock_trial") {
				<div class="row flexrow">
					<span class="fivesixths padleft">
						Default Timer Speech Time
					</span>

					<span class="fifth padright">
						<input
							type  = "number"
							name  = "default_time"
							value = "<% $event_settings->{"default_time"}
								? $event_settings->{"default_time"}
								: $timer_default
							%>"
						>
					</span>
				</div>
%			}

			<div class="row flexrow">
				<span class="fivesixths padleft">
					Decision Deadline (minutes post start)
				</span>

				<span class="fifth padright">
					<input
						type  = "number"
						name  = "prelim_decision_deadline"
						value = "<% $event_settings->{"prelim_decision_deadline"} %>"
					>
				</span>
			</div>

			<div class="row flexrow">
				<span class="fivesixths padleft">
					Elim Decision Deadline
				</span>

				<span class="fifth padright">
					<input
						type  = "number"
						name  = "elim_decision_deadline"
						value = "<% $event_settings->{"elim_decision_deadline"} %>"
					>
				</span>
			</div>

<%perl>
				if (
					$event->type ne 'speech'
					&& $event->type ne 'congress'
					&& $event->type ne "mock_trial"
				) {
</%perl>
					<div class="row flexrow">
						<span class="fivesixths padleft">
							Timer Default Prep Time
						</span>

						<span class="fifth padright">
							<input
								type  = "number"
								name  = "prep_time"
								value = "<% $event_settings->{"prep_time"}
									? $event_settings->{"prep_time"}
									: $prep_default
								%>"
							>
						</span>
					</div>

					<div class="hover row flexrow">
						<label for="hide_panel_decision">
							<span class="fivesixths padleft">
								Hide all panel decisions from judges
							</span>

							<span class="sixth centeralign">
								<& "/funclib/bool_switch.mas",
									tag     => "hide_panel_decision",
									value   => $event_settings->{"hide_panel_decision"},
									target  => $event,
									smaller => 1,
								&>
							</span>
						</label>
					</div>

					<label for="hide_final_decision">
						<div class="hover row">
							<span class="fivesixths padleft">
								Hide only final round decision from judges
							</span>

							<span class="sixth centeralign">
								<& "/funclib/bool_switch.mas",
									tag     => "hide_final_decision",
									value   => $event_settings->{"hide_final_decision"},
									target  => $event,
									smaller => 1,
								&>
							</span>
						</div>
					</label>
%				}

				<div class="row flexrow">
					<span class="twofifths padleft">
						Start Button Label
					</span>
					<span class="threefifths padright">
						<input
							type      = "text"
							name      = "start_button"
							maxlength = "24"
							value     = "<%
								$event_settings->{"start_button"}
								? $event_settings->{"start_button"}
								: "START ROUND"
							%>"
						>
					</span>
				</div>

				<div class="row flexrow">
					<span class="twofifths padleft">
						Start Instructions
					</span>
					<span class="threefifths centeralign">
						<textarea
							name        = "start_button_text"
							placeholder = "Text appearing above start button"
							maxlength   = "128"
						><% $event_settings->{"start_button_text"} %></textarea>
					</span>
				</div>
			</span>

			<span class="marno pagehalf flexkids fliponline <% $event_settings->{"flip_online"} ? "" : "hidden" %>">
				<div
					class = "row"
					title = "How many minutes each side has to make their decision"
				>
					<span class="fivesixths padleft">
						Auto-flip after publishing round (minutes)
					</span>

					<span class="sixth centeralign">
						<input
							type         = "number"
							name         = "flip_autopublish"
							id           = "flip_autopublish"
							min          = "0"
							max          = "999"
							class        = "smaller"
							value        = "<% $event_settings->{'flip_autopublish'} %>"
							setting_name = "flip_autopublish"
							target_type  = "event"
							target_id    = "<% $event->id %>"
							onChange     = "postSwitch( this, 'setting_switch.mhtml');"
						>
					</span>
				</div>

				<div
					class = "row"
					title = "How many minutes each side has to make their decision"
				>
					<span class="fivesixths padleft">
						OR auto-flip before start time
						<span class="semibold orangetext inline">&lowast;</span>
					</span>

					<span class="sixth centeralign padvertless">
						<input
							type         = "number"
							name         = "flip_before_start"
							id           = "flip_before_start"
							min          = "0"
							max          = "999"
							class        = "smaller"
							value        = "<% $event_settings->{'flip_before_start'} %>"
							setting_name = "flip_before_start"
							target_type  = "event"
							target_id    = "<% $event->id %>"
							onChange     = "postSwitch( this, 'setting_switch.mhtml');"
						>
					</span>
				</div>

				<div
					class = "row"
					title = "How many minutes each side has to make their decision"
				>
					<span class="fivesixths padleft">
						Flip Deadline (mins after flip publication)
					</span>

					<span class="sixth centeralign">
						<input
							type         = "number"
							name         = "flip_deadline"
							min          = "0"
							max          = "999"
							class        = "smaller"
							value        = "<% $event_settings->{'flip_deadline'} %>"
							setting_name = "flip_deadline"
							target_type  = "event"
							target_id    = "<% $event->id %>"
							onChange     = "postSwitch( this, 'setting_switch.mhtml');"
						>
					</span>
				</div>

				<label for="flip_team_order">
					<div class="hover row">
						<span class="fivesixths padleft">
							Winner chooses side OR order (Public Forum)
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag      => "flip_team_order",
								value    => $event_settings->{"flip_team_order"},
								target   => $event,
								smaller  => 1,
							&>
						</span>
					</div>
				</label>

				<label
					for   = "flip_anyone_chooses"
					title = "After the initial deadline passes, whoever picks their side first wins.  Otherwise only the coinflip user can choose for the same period of time, after which the sides are locked."
				>

					<div class="hover row">
						<span class="fivesixths padleft">
							Either entry can choose after deadline
						</span>

						<span class="sixth centeralign">
							<& "/funclib/bool_switch.mas",
								tag      => "flip_anyone_chooses",
								value    => $event_settings->{"flip_anyone_chooses"},
								target   => $event,
								smaller  => 1,
							&>
						</span>
					</div>
				</label>

				<label
					for   = "flip_split_flights"
				>
					<div
						class = "hover row flexrow"
						title = "Does a second conflip <% $event_settings->{"flight_offset"} %> minutes after the first flip for the 2nd flight of a double flighted event.  Delay is set by the 'Flight length in minutes' setting above"
					>
						<span class="threefifths padleft grow">
							Individual deadline for each flight
						</span>

%						if ($event_settings->{"flight_offset"}) {
							<span class="sixth centeralign">
								<& "/funclib/bool_switch.mas",
									tag      => "flip_split_flights",
									value    => $event_settings->{"flip_split_flights"},
									target   => $event,
									smaller  => 1,
								&>
							</span>
%						} else {
							<span class="twofifths padsetting smaller redtext">
								Set flight length first (above left)
							</span>
%						}
					</div>
				</label>

				<div class="row padleft padtopless">
					<span class="explain semibold orangetext setting padbottom">
						&lowast; The flip will be scheduled once the pairing is
						published.  Changing the start time after publish won't
						change the flip time; adjust under Actions on
						schematic.
					</span>
				</div>
			</span>

		</div>

		<div class="liblrow rightalign pagefull">
			<span class="third centeralign">
				<input
					type  = "submit"
					value = "Save Settings"
				>
			</span>
		</div>
		</form>
	</div>

	<div class="menu">
		<& "menu.mas",
			person          => $person,
			person_settings => $person_settings,
			tourn           => $tourn,
			perms           => $perms,
			tourn_settings  => $tourn_settings,
			whoami          => "tabbing",
			event_id        => $event->id
		&>
	</div>


