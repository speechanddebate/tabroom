<%args>
	$tourn
	$tourn_settings
	$perms
	$event_id => undef
	$type     => "nats"
	$limit    => 14
</%args>
<%init>

	$limit = 16 if $tourn_settings->{"nsda_ms_nats"};

 	my $event = Tab::Event->retrieve($event_id) if $event_id;

	my ($eventref, $catref) = $m->comp(
		"/funclib/allowed_events.mas",
		tourn => $tourn,
		perms => $perms,
		type  => "admin"
	);

	my %order;
	my @entry_ids;
	my $last_prelim;

	if ($event) {

		if ($type eq "nats") {

			%order = $m->comp("nats_order.mas",
				event          => $event,
				tourn          => $tourn,
				tourn_settings => $tourn_settings,
				limit          => $limit
			);

			@entry_ids = sort {$order{$b}{"place"} <=> $order{$a}{"place"}} keys %order;

		} elsif ($type eq "speakers") {

			@entry_ids = sort {$order{$b}{"place"} <=> $order{$a}{"place"}} keys %order;

			my @prelims = Tab::Round->search(
				event => $event->id,
				type  => "prelim"
			);

			push @prelims, Tab::Round->search(
				event => $event->id,
				type  => "highlow"
			);

			@prelims = sort {$b->name <=> $a->name} @prelims;

			if (@prelims) {

				$last_prelim = $prelims[0];

				my ($students_ref, $tbs_ref, $desc_ref,
					$forfeit_ref, $meh, $long_desc_ref,
					$novice_ref, $name_ref, $code_ref,
					$school_ref, $entry_ref, $speeches_ref
				) = $m->comp("order_speakers.mas", round => $last_prelim);

				my $count = 1;

				if ($students_ref) {
					my $last_tied;
					foreach my $key (sort {$a <=> $b} keys %{$students_ref}) {
						last if $key > $limit;
						next if $key > $limit;
						my $tie++ if scalar @{${$students_ref}{$key}} > 1;
						foreach my $student_id (@{${$students_ref}{$key}}) {
							$order{$student_id}{"place"} = $key;
						}
					}
				}
			}

			@entry_ids = sort {$order{$b}{"place"} <=> $order{$a}{"place"}} keys %order;

		} elsif ($type eq "finals") {

			my $final = Tab::Round->search(
				event => $event->id,
				type  => "final"
			)->first;

			my $panel = $final->panels->first;

			my @entries = $m->comp(
				"/funclib/panel_entries.mas",
				panel => $panel
			);

			if ($event->type eq "speech") {
				foreach my $entry (@entries) {
					$order{$entry->id}{"place"} = $entry->speaks;
				}
			} elsif ($event->type eq "debate") {
				foreach my $entry (@entries) {
					$order{$entry->id}{"place"} = $entry->side;
				}
			}

			@entry_ids =
				sort {$order{$a}{"place"} <=> $order{$b}{"place"}}
				keys %order;
		}
	}

 	my $state_hash = $m->comp("/funclib/state_hash.mas");

</%init>

	<div class="main">

%		if ($event) {

			<span class="threequarters nospace">
				<h4><% $event ? $event->name : "" %></h4>
			</span>

			<span class="quarter rightalign semibold bluetext">
				<% $type eq "nats" ? "Top ".$limit." Finishers" : "" %>
				<% $type eq "speakers" ? "Top ".$limit." Speakers" : "" %>
				<% $type eq "final" ? "Finalists" : "" %>
				<% $last_prelim ? "as of ".$last_prelim->realname : "" %>
			</span>
<%perl>
			foreach my $entry_id (@entry_ids) {

				my %entry;

				if ( $type eq "speakers") {
					%entry = student_info($entry_id, $event->id);
				} else {
					%entry = entry_info($entry_id);
				}
</%perl>
				<p class="semibold bigger martopmore nospace times">
%					if ($type eq "nats" || $type eq "speakers") {
						<% $order{$entry_id}{"tie"} ? "Tied for " : "" %>
						<% Lingua::EN::Numbers::Ordinate::ordinate($order{$entry_id}{"place"}) %> place
%					} elsif ($type eq "finals" && $event->type eq 'speech') {
						Speaking <% Lingua::EN::Numbers::Ordinate::ordinate($order{$entry_id}{"place"}) %>
%					} elsif ($type eq "finals") {
%						if ($event->abbr eq "PFD") {
							<% $order{$entry_id}{"place"}  == 1 ? "On the Pro:" : "" %>
							<% $order{$entry_id}{"place"}  == 2 ? "On the Con:" : "" %>
%						} else {
							<% $order{$entry_id}{"place"}  == 1 ? "On the Affirmative:" : "" %>
							<% $order{$entry_id}{"place"}  == 2 ? "On the Negative:" : "" %>
%						}
%					}
				</p>

				<div class="nospace marbottom awards">
%					if ($event->type eq "wsdc") {
						<p class="semibold">Team <% $entry{"code"} %></p>
%					}
					<p><% $entry{"student_name"} %></p>
					<p><% $entry{"student_phonetic"} ? $entry{"student_phonetic"} : "" %></p>
%					unless ($event->type eq "wsdc") {
						<p>from <% $entry{"school_name"} %></p>
%					} else {
						<p>from the <% $entry{"school_name"} %> District</p>
%					}
					<p>in <% $state_hash->{$entry{"state"}} ? $state_hash->{$entry{"state"}} : $entry{"state"} %></p>
					<p>Coached by <% $entry{"coaches"} %></p>
				</div>
%			}
%		}

	</div>

	<div class="menu">
		<div class="sidenote">

			<h4>Pick Event</h4>

			<div class="full even centeralign">
				<form action="see_order.mhtml" method="post">
					<select
						name     = "event_id"
						class    = "fixedmed"
						onChange = "this.form.submit();"
					>
						<option value=""><option>
%						foreach my $oevent (@{$eventref}) {
							<option
								<% $oevent == $event ? "selected" : "" %>
								value="<% $oevent->id %>"
							><% $oevent->name %></option>
%						}
					</select>
				</form>
			</div>

%			if ($event) {

				<h4>Report Type</h4>

				<div class="full even centeralign">
					<form action="see_order.mhtml" method="post">
						<input
							type  = "hidden"
							name  = "event_id"
							value = "<% $event->id %>"
						>

						<select
							name     = "type"
							class    = "fixedmed"
							onChange = "this.form.submit();"
						>
								<option <% $type eq "nats" ? "selected" : "" %>
									value="nats"
								>Top 14 Placement</option>

								<option <% $type eq "speakers" ? "selected" : "" %>
									value="speakers"
								>Top 14 Speakers</option>

								<option <% $type eq "finals" ? "selected" : "" %>
									value="finals"
								>Finalists intros</option>

						</select>
					</form>
				</div>

%				my $string = "final_cumes";
%				$string = "final_wins" if $event->type eq "debate";

				<a href="/tabbing/report/nsda/<% $string %>.mhtml?event_id=<% $event->id %>"
					class="full yellow martopmore">
					Auditing PDF
				</a>

				<a href="/tabbing/report/nsda/<% $string %>.mhtml?event_id=<% $event->id %>&sort_by=results"
					class="full yellow martopmore">
					Results PDF
				</a>

				<a href="/tabbing/report/nsda/<% $string %>.mhtml?sort_by=results&event_id=<% $event->id %>&mode=csv"
					class="full blue martopmore">
					Codes and Names CSV
				</a>

				<a href="/tabbing/report/nsda/<% $string %>.mhtml?sort_by=results"
					class="full yellow martopmore">
					All Results PDF
				</a>

%			}

		</div>

	</div>

<%perl>

	sub entry_info {

		my $entry_id = shift;
		my $entry = Tab::Entry->retrieve($entry_id);

		return unless $entry;

		my %return;
		my $student_name;
		my $student_phonetic;

		my $notfirst;
		my @students = $entry->students;
		my $count = scalar @students;

        foreach my $student (@students) {

			push @{$return{'students'}}, $student;

            if ( $notfirst && (($notfirst + 1) == $count)) {
                $student_name .= " & ";
            } elsif ($notfirst) {
                $student_name .= ", ";
            }
			$student_name .= $student->first." ".$student->last;
            $notfirst++;
        }

		undef $notfirst;

        foreach my $student ($entry->students) {

			next unless $student->phonetic;
            if ( $notfirst && (($notfirst + 1) == $count)) {
                $student_phonetic .= " & ";
            } elsif ($notfirst) {
                $student_phonetic .= ", ";
            } else {
                $student_phonetic .= "[ ";
            }

            $student_phonetic .= Tab::texify($student->phonetic);
            $notfirst++;
        }

		$student_phonetic .= " ] " if $student_phonetic;

		$return{"state"}            = $entry->school->state;
		$return{'coaches'}          = $entry->setting("coach_script");
		$return{"code"}             = $entry->code;
		$return{"school_name"}      = $entry->school->chapter->formal || $entry->school->name;
		$return{'student_name'}     = $student_name;
		$return{'student_phonetic'} = $student_phonetic;

		unless ($return{"state"}) {
			$return{"state"} = $entry->school->chapter->state;
		}

		unless ($return{"coaches"}) {
			my $nsda = $entry->setting("coach_points");
			my $coach = Tab::Person->search(nsda => $nsda)->first if $nsda;
			$return{"coaches"} = $coach->first." ".$coach->last if $coach;
		}

		return %return;

	}

	sub student_info  {

		my ($student_id, $event_id) = @_;

		my $student = Tab::Student->retrieve($student_id);

		Tab::Entry->set_sql(by_student_event => "
			select entry.*
				from entry, entry_student
			where entry_student.student = ?
				and entry_student.entry = entry.id
				and entry.event = ?
				and entry.active = 1
		");

		my $entry = Tab::Entry->search_by_student_event($student_id, $event_id)->first;

		return unless $entry;

		my %return;
		my $student_name;
		my $student_phonetic;

		my $notfirst;
		my @students = $entry->students;

		push @{$return{'students'}}, $student;
		$student_name .= $student->first." ".$student->last;
		$student_phonetic .= $student->phonetic;

		$return{'student_name'}     = $student_name;
		$return{'student_phonetic'} = $student_phonetic;
		$return{"school_name"}      = $entry->school->name;
		$return{"state"}            = $entry->school->state;

		unless ($return{"state"}) {
			$return{"state"} = $entry->school->chapter->state;
		}

		$return{'coaches'}          = $entry->setting("coach_script");

		unless ($return{"coaches"}) {
			my $nsda = $entry->setting("coach_points");
			my $coach = Tab::Person->search(nsda => $nsda)->first if $nsda;
			$return{"coaches"} = $coach->first." ".$coach->last if $coach;
		}

		return %return;

	}
</%perl>
