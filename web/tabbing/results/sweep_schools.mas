<%args>
	$sweep_set
	$perms => undef
</%args>
<%init>

	return unless $sweep_set;
	my $tourn = $sweep_set->tourn;

	my %schools;

	my %entries = sweep_set($sweep_set, $ARGS{"all_entries"}, $perms);

	my $events        = $sweep_set->rule("events");
	my $entries_rule  = $sweep_set->rule("entries");
	my $wildcards     = $sweep_set->rule("wildcards");
	my $event_entries = $sweep_set->rule("event_entries");
	my %used_entry;

	my %events = map {$_->id => $_} $tourn->events;

	foreach my $entry_id ( sort {
		$entries{$b}{"points"} <=> $entries{$a}{"points"}
		} keys %entries
	) {

		my $code       = $entries{$entry_id}{"code"};
		my $event      = $entries{$entry_id}{"event_abbr"};
		my $event_type = $entries{$entry_id}{"event_type"};
		my $points     = $entries{$entry_id}{"points"};
		my $event_id   = $entries{$entry_id}{"event"};
		my $school_id  = $entries{$entry_id}{"school"};

		$schools{$school_id}{all_entry_count}++;
		next unless $points || $ARGS{'all_entries'};

		$schools{$school_id}{"point_types"}{$event_type} += $points;

		unless ($schools{$school_id}{"name"}) {
			$schools{$school_id}{"name"}       = $entries{$entry_id}{"schoolname"};
			$schools{$school_id}{"state"}      = $entries{$entry_id}{"state"};
			$schools{$school_id}{"regionname"} = $entries{$entry_id}{"regionname"};
			$schools{$school_id}{"regioncode"} = $entries{$entry_id}{"regioncode"};
			$schools{$school_id}{"regionid"}   = $entries{$entry_id}{"regionid"};
		}

		my $hybrid_id;

		if ($entries{$entry_id}{"hybrid"}) {
			$hybrid_id = $entries{$entry_id}{"hybrid"};
			$points    = $points / 2;
			$entries{$entry_id}{"points"} = $entries{$entry_id}{"points"} / 2;
		}

		foreach my $school_id ($school_id, $hybrid_id) {

			next unless $school_id;

			$schools{$school_id}{"all_string"} .= "\n" if $schools{$school_id}{"all_string"};
			$schools{$school_id}{"all_string"} .= $event." ".$code.": ".$points;

			next if
				$entries_rule
				&& ( $schools{$school_id}{"counted_entry_count"} >= $entries_rule )
				&& ( $wildcards < 1 || $schools{$school_id}{"wildcard_count"} >= $wildcards );

			next if (
				( ($events && $schools{$school_id}{"event_count"} >= $events)
					|| ( $event_entries && $schools{$school_id}{"event_entry_count"}{$event_id} >= $event_entries)
				)
				&& ($wildcards < 1 || $schools{$school_id}{"wildcard_count"} >= $wildcards )
			);

			if (
				($entries_rule && ($schools{$school_id}{"counted_entry_count"} >= $entries_rule))
				|| ($events && $schools{$school_id}{"event_count"} >= $events )
				|| ($event_entries && $schools{$school_id}{"event_entry_count"}{$event_id} >= $event_entries)
			) {

				 $schools{$school_id}{"wildcard_count"}++;

			} else {

				if ($entries{$entry_id}{"points"}) {
					$schools{$school_id}{"counted_entry_count"}++;
				}

				$schools{$school_id}{"event_count"}++
					unless $schools{$school_id}{event_used}{$event_id};

				$schools{$school_id}{"event_entry_count"}{$event_id}++;
				$schools{$school_id}{event_used}{$event_id}++;
			}

			$schools{$school_id}{"count_string"} .= "\n" if $schools{$school_id}{"count_string"};
			$schools{$school_id}{"count_string"} .= $event." ".$code.": ".$points;

			$schools{$school_id}{entries}{$entry_id}{event}  = $event;
			$schools{$school_id}{entries}{$entry_id}{code}   = $code;
			$schools{$school_id}{entries}{$entry_id}{points} = $points;

			$schools{$school_id}{'points'} += $points;
		}
	}

	return %schools;

	sub sweep_set {

		my ($set, $all_entries, $perms) = @_;
		my $tourn = $set->tourn;

		my %entries;

		my ($rules_ref, $entries_ref) = $m->comp(
			"/tabbing/results/sweep_tourn.mas",
			tourn       => $tourn,
			perms       => $perms,
			all_entries => $all_entries,
			sweep_set   => $set
		);

		my $set_limit = $set->rule("set_limit");
		my $set_event_limit = $set->rule("set_event_limit");

		my %dedupe;

		foreach my $child ($set->children) {

			my %rc_entries = sweep_set($child, $all_entries, $perms);

			my %here_done;
			my %school_count;
			my %here_entries = ();

			ENTRY:
			foreach my $entry_id (
				sort {
					$rc_entries{$b}{"points"} <=> $rc_entries{$a}{"points"}
				} keys %rc_entries
			) {

				next if $here_done{$entry_id}++;
				my $event_id = $rc_entries{$entry_id}{"event"};
				my $school_id = $rc_entries{$entry_id}{"school"};

				if ($set_event_limit > 0 || $set_limit > 0) {
					if (
						($set_event_limit > 0)
						&& ($school_count{"event"}{$school_id}{$event_id}{$set->id} >= $set_event_limit)
					) {
						next ENTRY;
					} elsif (
						$set_limit > 0
						&& $school_count{"overall"}{$school_id}{$set->id} >= $set_limit
					) {
						next ENTRY;
					} else {
						$school_count{"event"}{$school_id}{$event_id}{$set->id}++;
						$school_count{"overall"}{$school_id}{$set->id}++;
					}
				}


				$here_entries{$entry_id}{"points"} += $rc_entries{$entry_id}{"points"};

				unless ($here_entries{$entry_id}{"school"}) {

					$here_entries{$entry_id}{"code"} = $rc_entries{$entry_id}{"code"};
					$here_entries{$entry_id}{"name"} = $rc_entries{$entry_id}{"name"};

					$here_entries{$entry_id}{"school"}     = $rc_entries{$entry_id}{"school"};
					$here_entries{$entry_id}{"state"}      = $rc_entries{$entry_id}{"state"};
					$here_entries{$entry_id}{"schoolname"} = $rc_entries{$entry_id}{"schoolname"};

					$here_entries{$entry_id}{"regionid"} = $rc_entries{$entry_id}{"regionid"};
					$here_entries{$entry_id}{"regioncode"} = $rc_entries{$entry_id}{"regioncode"};
					$here_entries{$entry_id}{"regionname"} = $rc_entries{$entry_id}{"regionname"};

					$here_entries{$entry_id}{"districtcode"} = $rc_entries{$entry_id}{"districtcode"};
					$here_entries{$entry_id}{"districtname"} = $rc_entries{$entry_id}{"districtname"};

					$here_entries{$entry_id}{"event"}      = $rc_entries{$entry_id}{"event"};
					$here_entries{$entry_id}{"event_name"} = $rc_entries{$entry_id}{"event_name"};
					$here_entries{$entry_id}{"event_abbr"} = $rc_entries{$entry_id}{"event_abbr"};
					$here_entries{$entry_id}{"event_type"} = $rc_entries{$entry_id}{"event_type"};
				}
			}

			foreach my $key (keys %here_entries) {
				unless ($entries{$key}{"points"}) {
					$entries{$key} = $here_entries{$key};
				} elsif ($rc_entries{$key}{"points"}) {
					$entries{$key}{"points"} += $rc_entries{$key}{"points"};
				}
			}
		}

		my $events        = $set->rule("events");
		my $entries_rule  = $set->rule("entries");
		my $wildcards     = $set->rule("wildcards");
		my $event_entries = $set->rule("event_entries");
		my $one_per 	  = $set->rule("one_per_person");
		my $by_person 	  = $set->rule("by_person");
		my $max_per 	  = $set->rule("max_entry_persons");

		my %schools;

		ENTRY:
		foreach my $entry_id (sort {
			$entries_ref->{$b}{"points"} <=> $entries_ref->{$a}{"points"}
			} keys %{$entries_ref}
		) {

			my $did;

			unless ($entries_ref->{$entry_id}{"points"} > 0 || $all_entries) {
				next;
			}

			my $event_id = $entries_ref->{$entry_id}{"event"};
			my $school_id = $entries_ref->{$entry_id}{"school"};

			STUDENT:
			foreach my $student_id (keys %{$entries_ref->{$entry_id}{"students"}}) {

				if ($one_per) {

					next STUDENT if $schools{$school_id}{person_count}{student}{$student_id};

					if ($max_per) {
						next ENTRY if $schools{$school_id}{max_count}{$entry_id} >= $max_per;
					}
				} elsif ($max_per) {
					next ENTRY if $schools{$school_id}{max_count}{$entry_id} >= $max_per;

				} elsif ($by_person) {
					next if $did++;
				} else {
					next ENTRY if $schools{$school_id}{"person_count"}{"entry"}{$entry_id};
				}

				next if
					$entries_rule > 0
					&& ( $schools{$school_id}{"counted_entry_count"} >= $entries_rule )
					&& ( $wildcards < 1 || ($schools{$school_id}{"wildcard_count"} >= $wildcards ));

				next if (
					(
						($events > 0 && $schools{$school_id}{"event_count"} >= $events)
						||
						($event_entries > 0 && $schools{$school_id}{"event_entry_count"}{$event_id} >= $event_entries)
					)
					&& ($wildcards < 1 || $schools{$school_id}{"wildcard_count"} >= $wildcards )
				);

				if (
					($entries_rule && ($schools{$school_id}{"counted_entry_count"} >= $entries_rule))
					|| ($events && $schools{$school_id}{"event_count"} >= $events )
					|| ($event_entries && $schools{$school_id}{"event_entry_count"}{$event_id} >= $event_entries)
				) {
					 $schools{$school_id}{"wildcard_count"}++;
				} else {

					$schools{$school_id}{"counted_entry_count"}++;

					unless ($schools{$school_id}{event_used}{$event_id}) {
						$schools{$school_id}{"counted_event_count"}++
					}

					$schools{$school_id}{"event_entry_count"}{$event_id}++;

					$schools{$school_id}{event_used}{$event_id}++;
				}

				$schools{$school_id}{"person_count"}{"student"}{$student_id}++;
				$schools{$school_id}{"person_count"}{"entry"}{$entry_id}++;
				$schools{$school_id}{"max_count"}{$entry_id}++;

				$entries{$entry_id}{"points"} += $entries_ref->{$entry_id}{"points"};


				unless ($entries{$entry_id}{"school"}) {

					$entries{$entry_id}{"code"} = $entries_ref->{$entry_id}{"code"};
					$entries{$entry_id}{"name"} = $entries_ref->{$entry_id}{"name"};

					$entries{$entry_id}{"school"}     = $entries_ref->{$entry_id}{"school"};
					$entries{$entry_id}{"hybrid"}     = $entries_ref->{$entry_id}{"hybrid"};
					$entries{$entry_id}{"state"}      = $entries_ref->{$entry_id}{"state"};
					$entries{$entry_id}{"schoolname"} = $entries_ref->{$entry_id}{"schoolname"};

					$entries{$entry_id}{"regionid"} = $entries_ref->{$entry_id}{"regionid"};
					$entries{$entry_id}{"regioncode"} = $entries_ref->{$entry_id}{"regioncode"};
					$entries{$entry_id}{"regionname"} = $entries_ref->{$entry_id}{"regionname"};

					$entries{$entry_id}{"districtcode"} = $entries_ref->{$entry_id}{"districtcode"};
					$entries{$entry_id}{"districtname"} = $entries_ref->{$entry_id}{"districtname"};

					$entries{$entry_id}{"event"} = $entries_ref->{$entry_id}{"event"};
					$entries{$entry_id}{"event_name"} = $entries_ref->{$entry_id}{"event_name"};
					$entries{$entry_id}{"event_abbr"} = $entries_ref->{$entry_id}{"event_abbr"};
					$entries{$entry_id}{"event_type"} = $entries_ref->{$entry_id}{"event_type"};

				}
			}
		}

		return %entries;
	}

</%init>
